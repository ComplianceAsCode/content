<Group id="mounting">
<title>Restrict Dynamic Mounting and Unmounting of
Filesystems</title>
<description>Linux includes a number of facilities for the
automated addition and removal of filesystems on a running system.
These facilities may increase convenience, but they all bring some
risk, whether direct risk from allowing unprivileged users to
introduce arbitrary filesystems to a machine, or risk that software
flaws in the automated mount facility itself will allow an attacker
to compromise the system.
<br /><br />
This command can be used to list the types of filesystems that are
available to the currently executing kernel:
<pre># find /lib/modules/`uname -r`/kernel/fs -type f -name '*.ko'</pre>
If these filesystems are not required then they should be explicitly disabled
in the appropriate <tt>/etc/modprobe.d</tt> configuration file.
<br /><br />
Use caution when enabling any such facility, and find out
whether better configuration management or user education might
solve the same problem with less risk.</description>

<Rule id="console_device_restrict_access_desktop">
<title>Restrict Console Device Access to Desktop Workstations</title>
<description>If the display manager has been altered to allow remote users to
log in and the host is configured to run at runlevel 5, change console as well
as the xconsole directive in the <tt>/etc/security/console.perms</tt> to the
following:
<pre>&lt;console&gt;=tty[0-9][0-9]* vc/[0-9][0-9]* :0\.[0-9] :0
&lt;xconsole&gt;=:0\.[0-9] :0</pre></description>
<rationale>When a user logs in, the module pam_console.so called via the
command login, or by some of the graphics program of logging, such as gdm, kdm,
and xdm. If this user is the first to log into the physical console
- called the console user - the user module assures the mastery of a wide
variety of devices normally belong to root. Administrative privileges should be
limited for non-root users. Review the man page for <tt>pam_console</tt> for
more information</rationale>
<ident cce="27192-4" />
<oval id="console_device_restrict_access_desktop" />
<ref nist="AC-6, CM-6, CM-7" />
</Rule>

<Rule id="console_device_restrict_access_server">
<title>Restrict Console Device Access to Servers</title>
<description>If the display manager has been altered to allow remote users to
log in and the host is configured to run at runlevel 5, change console as well
as the xconsole directive in the <tt>/etc/security/console.perms</tt> to the
following:
<pre>&lt;console&gt;=tty[0-9][0-9]* vc/[0-9][0-9]*</pre></description>
<rationale>When a user logs in, the module pam_console.so called via the
command login, or by some of the graphics program of logging, such as gdm, kdm,
and xdm. If this user is the first to log into the physical console
- called the console user - the user module assures the mastery of a wide
variety of devices normally belong to root. Administrative privileges should be
limited for non-root users. Review the man page for <tt>pam_console</tt> for
more information</rationale>
<ident cce="26892-0" />
<oval id="console_device_restrict_access_server" />
<ref nist="AC-6, CM-6, CM-7" />
</Rule>

<Rule id="kernel_module_usb-storage_disabled">
<title>Disable Modprobe Loading of USB Storage Driver</title>
<description>
To prevent USB storage devices from being used, configure the kernel module loading system
to prevent automatic loading of the USB storage driver. 
<module-disable-macro module="usb-storage" />
This will prevent the <tt>modprobe</tt> program from loading the <tt>usb-storage</tt>
module, but will not prevent an administrator (or another program) from using the
<tt>insmod</tt> program to load the module manually.</description>
<ocil>
<module-disable-check-macro module="usb-storage" />
</ocil>
<rationale>USB storage devices such as thumb drives can be used to introduce unauthorized
software and other vulnerabilities. Support for these devices should be disabled and
the devices themselves should be tightly controlled.</rationale>
<ident cce="27016-5" />
<oval id="kernel_module_usb-storage_disabled" />
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>
<!-- Considering removal of this entirely, in favor of previous Rule

<Rule id="kernel_module_usb-storage_removed">
<title>Remove USB Storage Driver</title>
<description>If your system never requires the use of USB storage devices, then the
supporting driver can be permanently removed. Though more effective than disabling the
module within modprobe, this solution is less elegant than the modprobe method described
in "Disable Modprobe Loading of USB". The technique described here will cause the
command <tt>rpm -V kernel</tt> to fail which may be an undesirable side effect.
<br /><br />
To permanently remove the USB storage driver from the system execute this command:
<pre># rm /lib/modules/<i>KERNEL-VERSION</i>/kernel/drivers/usb/storage/usb-storage.ko</pre>
The variable <tt><i>KERNEL-VERSION</i></tt> can be determined using the <tt>uname -r</tt>
command which returns the version of the currently loaded kernel. The <tt>rm</tt> command
will need to be repeated every time the kernel is updated.</description>
<rationale>USB storage devices such as thumb drives can be used to introduce unauthorized
software and other vulnerabilities. Support for these devices should be disabled and
the devices themselves should be tightly controlled.</rationale>
<ident cce="26970-4" />
<oval id="kernel_module_usb-storage_removed" />
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>
-->

<Rule id="bootloader_nousb_argument">
<title>Disable Kernel Support for USB via Bootloader Configuration</title>
<description>
Another means of disabling USB storage is to disable all USB support provided
by the operating system. This can be accomplished by adding the <tt>nousb</tt>
argument to the kernel's boot loader configuration. To disable kernel support
for USB, append "nousb" to the kernel line in /etc/grub.conf as follows:
<pre>kernel /vmlinuz-<i>VERSION</i> ro vga=ext root=/dev/VolGroup00/LogVol00 rhgb quiet nousb</pre>
<i><b>WARNING:</b> Disabling all kernel support for USB will cause problems for systems with USB-based keyboards,
mice, or printers. This guidance is inappropriate for systems which require USB connectivity.</i></description>
<rationale>Disabling the USB subsystem within the Linux kernel at system boot will also
disable USB storage devices if they are plugged into the system. Support for these devices
should be disabled and the devices themselves should be tightly controlled.</rationale>
<ident cce="27011-6" />
<oval id="bootloader_nousb_argument" />
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>

<Rule id="bios_disable_usb_boot">
<title>Disable Booting from USB Devices</title>
<description>An attacker with physical access could try to boot the system from a USB
flash drive and then access any data on the system's hard drive, circumventing the normal
operating system's access controls. To prevent this, configure the BIOS to disallow
booting from USB drives. Also configure the BIOS or firmware password as described in
the section titled "Set BIOS Password" to prevent unauthorized configuration changes.</description>
<rationale>Booting a system from a USB device would allow an attacker to circumvent
any security measures offered by the native OS. Attackers could mount partitions and modify the
configuration of the native OS. The BIOS should be configured to disallow booting from USB media.</rationale>
<ident cce="26952-2" />
<!-- <oval id="bios_disable_usb_boot" /> -->
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>

<Rule id="service_autofs_disabled">
<title>Disable the Automounter</title>
<description>The <tt>autofs</tt> daemon mounts and unmounts filesystems, such as user
home directories shared via NFS, on demand. In addition, autofs can be used to handle
removable media, and the default configuration provides the cdrom device as <tt>/misc/cd</tt>.
However, this method of providing access to removable media is not common, so autofs
can almost always be disabled if NFS is not in use. Even if NFS is required, it is
almost always possible to configure filesystem mounts statically by editing <tt>/etc/fstab</tt>
rather than relying on the automounter.
<br /><br />
If the <tt>autofs</tt> service is not needed to dynamically mount NFS filesystems
or removable media, disable the service for all runlevels:
<pre># chkconfig --level 0123456 autofs off</pre>
</description>
<ocil clause="it does not">
To verify the <tt>autofs</tt> service is disabled, run the following command:
<pre>chkconfig --list autofs</pre>
If properly configured, the output should be the following:
<pre>autofs         	0:off	1:off	2:off	3:off	4:off	5:off	6:off</pre>
</ocil>
<rationale>All filesystems that are required for the successful operation of the system
should be explicitly listed in /etc/fstab by and administrator. New filesystems should
not be arbitrarily introduced via the automounter.</rationale>
<ident cce="26976-1" />
<oval id="service_autofs_disabled" />
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>

<Rule id="gconf_gnome_disable_automount">
<title>Disable GNOME Automounting</title>
<description>The system's default desktop environment, GNOME, will mount devices and removable media (such as DVDs, CDs and USB flash drives) whenever they are inserted into the system. Disable automount and autorun within GNOME by running the following:
<pre># gconftool-2 --direct \
	--config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \
	--type bool \
	--set /apps/nautilus/preferences/media_automount false
# gconftool-2 --direct \
	--config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \
	--type bool \
	--set /apps/nautilus/preferences/media_autorun_never true</pre>
These settings can be verified by running the following:
<pre>$ gconftool-2 --direct \
	--config-source xml:read:/etc/gconf/gconf.xml.mandatory \
	--get /apps/nautilus/preferences/media_automount
$ gconftool-2 --direct \
	--config-source xml:read:/etc/gconf/gconf.xml.mandatory \
	--get /apps/nautilus/preferences/media_autorun_never</pre>
</description>
<rationale>The system's capabilities for automatic mounting should be configured to match whatever is defined by security
policy. Disabling USB storage as described in the USB section will prevent the use of USB storage devices, but
this step should also be taken as an additional layer of protection to prevent automatic mounting of CDs and
DVDs.
</rationale>
<ident cce="27035-5" />
<oval id="gconf_gnome_disable_automount" />
<ref nist="CM-6, CM-7" disa="1250,85" />
</Rule>

<Rule id="disable_module_cramfs">
<title>Disable Mounting of <tt>cramfs</tt></title>
<description>
<module-disable-macro module="cramfs" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26340-0" />
<oval id="kernel_module_cramfs_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_freevxfs">
<title>Disable Mounting of <tt>freevxfs</tt></title>
<description>
<module-disable-macro module="freevsfs" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26544-7" />
<oval id="kernel_module_freevxfs_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_jffs2">
<title>Disable Mounting of <tt>jffs2</tt></title>
<description>
<module-disable-macro module="jffs2" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26670-0" />
<oval id="kernel_module_jffs2_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_hfs">
<title>Disable Mounting of <tt>hfs</tt></title>
<description>
<module-disable-macro module="hfs" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26800-3" />
<oval id="kernel_module_hfs_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_hfsplus">
<title>Disable Mounting of <tt>hfsplus</tt></title>
<description>
<module-disable-macro module="hfsplus" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26361-6" />
<oval id="kernel_module_hfsplus_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_squashfs">
<title>Disable Mounting of <tt>squashfs</tt></title>
<description>
<module-disable-macro module="squashfs" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26404-4" />
<oval id="kernel_module_squashfs_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_module_udf">
<title>Disable Mounting of <tt>udf</tt></title>
<description>
<module-disable-macro module="udf" />
This effectively prevents usage of this uncommon filesystem.
</description>
<rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
<ident cce="26677-5" />
<oval id="kernel_module_udf_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>

<Rule id="disable_gnome_thumbnailers">
<title>Disable All GNOME Thumbnailers</title>
<description>The system's default desktop environment, GNOME, uses
a number of different thumbnailer programs to generate thumbnails
for any new or modified content in an opened folder. The following
command can disable the execution of these thumbnail applications:
<pre># gconftool-2 --direct \
  --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory \
  --type bool \
  --set /desktop/gnome/thumbnailers/disable_all true</pre>
This effectively prevents an attacker from gaining access to a
system through a flaw in GNOME's Nautilus thumbnail creators.
</description>
<rationale>An attacker with knowledge of a flaw in a GNOME thumbnailer application could craft a malicious
file to exploit this flaw. Assuming the attacker could place the malicious file on the local filesystem
(via a web upload for example) and assuming a user browses the same location using Nautilus, the
malicious file would exploit the thumbnailer with the potential for malicious code execution. It
is best to disable these thumbnailer applications unless they are explicitly required.</rationale>
<ident cce="TODO" />
<oval id="disable_gnome_thumbnailers" />
<ref nist="CM-6, CM-7" />
</Rule>

</Group>
