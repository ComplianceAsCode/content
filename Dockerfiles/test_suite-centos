# This Dockerfile is a minimal example for a CentOS-based SSG test suite target container.
FROM centos:7

ENV AUTH_KEYS=/root/.ssh/authorized_keys

ARG CLIENT_PUBLIC_KEY
ARG ADDITIONAL_PACKAGES

# Install Python so Ansible remediations can work
# Don't clean all, as the test scenario may require package install.
RUN true \
    && yum install -y openssh-clients openssh-server openscap-scanner \
        python findutils \
        $ADDITIONAL_PACKAGES \
    && rm -rf /var/cache/yum \
    && true

RUN true \
    && for key_type in rsa ecdsa; do ssh-keygen -N '' -t $key_type -f /etc/ssh/ssh_host_${key_type}_key; done \
    && mkdir -p /root/.ssh \
    && printf "%s\n" "$CLIENT_PUBLIC_KEY" >> "$AUTH_KEYS" \
    && chmod og-rw /root/.ssh "$AUTH_KEYS" \
    && sed -i '/session\s\+required\s\+pam_loginuid.so/d' /etc/pam.d/sshd \
    && true

RUN set -ex; \
    sed '\
s/^EnvironmentFile=.*/PassEnvironment=TEST_SSHD_PORT/;\
/ExecStart=/ s,=.*,=/usr/sbin/sshd -p $TEST_SSHD_PORT -D,;\
' /usr/lib/systemd/system/sshd.service > /etc/systemd/system/test-sshd.service; \
    systemctl mask systemd-remount-fs.service dev-hugepages.mount sys-fs-fuse-connections.mount getty.target console-getty.service systemd-udev-trigger.service systemd-udevd.service systemd-random-seed.service systemd-machine-id-commit.service systemd-resolved.service proc-sys-fs-binfmt_misc.mount systemd-oomd.service systemd-userdbd.service; \
    systemctl enable test-sshd.service; \
    :

STOPSIGNAL SIGRTMIN+3

RUN set -ex; \
    [ -e /sbin/init ] || ln -s ../lib/systemd/systemd /sbin/init; \
    :

ENTRYPOINT ["/sbin/init"]
