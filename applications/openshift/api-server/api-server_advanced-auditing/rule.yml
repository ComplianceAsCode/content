documentation_complete: true

title: 'Ensure that the AdvancedAuditing argument is not set to false'

description: |-
    To ensure advanced auditing is not disabled, follow the OpenShift
    documentation and set the desired audit policy in the
    <tt>/etc/kubernetes/audit-policy.yaml</tt> file. Then, edit the API
    server pod specification file
    <tt>/etc/kubernetes/manifests/kube-apiserver.yaml</tt> and set the
    parameters below:

    <pre>--audit-policy-file=/etc/kubernetes/audit-policy.yaml</pre>

rationale: |-
    <tt>AdvancedAuditing</tt> enables a much more general API auditing
    pipeline, which includes support for pluggable output backends and an
    audit policy specifying how different requests should be audited.
    Additionally, this enables auditing of failed authentication,
    authorization, and login attempts which could prove crucial for
    protecting your production clusters. It is recommended not to disable
    advanced auditing.

severity: medium

ocil_clause: '<tt>--feature-gates</tt> argument is set to a value that includes <tt>AdvancedAuditing=false</tt>'

ocil: |-
    Run the following command on the master node(s):
    <pre>$ ps -ef | grep kube-apiserver</pre>

    Verify that the <tt>--feature-gates</tt> argument is not set to a value
    that includes <tt>AdvancedAuditing=false</tt>. If
    <tt>--feature-gates</tt> or <tt>AdvancedAuditing</tt> arguments are not
    present, then it means that <tt>AdvancedAuditing</tt> is enabled and
    enforced by default.

    Additionally, review the audit policy file specified in the
    <tt>--audit-policy-file</tt> argument and ensure that it is set
    as appropriate. At a minimum, it should have below policy set:

    <pre># Log all requests at the Metadata level.
    rules:
    - level: Metadata</pre>

references:
    cis: 1.1.47
