documentation_complete: true

prodtype: ocp3,ocp4

title: 'Configure the API Server Request Timeout'

description: |-
    All components that use the API should connect via the secured port,
    authenticate themselves, and be authorized to use the API. To ensure
    such a configuration, edit the API Server pod specification file
{{%- if product == "ocp4" %}}
    <tt>/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml</tt> on the master
    node(s) and set the <tt>request-timeout</tt> to <tt>300</tt>:
    <pre>
    "apiServerArguments":{
      ...
      "request-timeout":[
        "300"
      ],
      ...
    </pre>
{{% else %}}
    <tt>/etc/origin/master/master-config.yaml</tt> on the master
    node(s) and set the <tt>request-timeout</tt> to <tt>300</tt>:
    <pre>kubernetesMasterConfig:
      apiServerArguments:
        request-timeout:
        - 300</pre>
{{%- endif %}}

rationale: |-
    Setting global request timout allows extending the API Server request
    timeout limit to a duration appropriate to the user's connection speed.
    By default, it is set to 60 seconds which might be problematic on
    slower connections making cluster resources inaccessible once the data
    volume for requests exceeds what can be transmitted in 60 seconds. But,
    setting this timeout limit to be too large can exhaust the API Server
    resources making it prone to Denial-of-Service attack. It is recommended
    to set this limit as appropriate and change the default limit of 60
    seconds only if needed.

severity: medium

references:
    cis: 1.2.26

ocil_clause: '<tt>request-timeout</tt> is not set or is not set to an appropriate value'

ocil: |-
    Run the following command on the master node(s):
{{%- if product == "ocp4" %}}
    <pre>$ sudo grep -A2 request-timeout /etc/kubernetes/static-pod-resources/configmaps/config/config.yaml</pre>
{{% else %}}
    <pre>$ sudo grep -A2 request-timeout /etc/origin/master/master-config.yaml</pre>
{{%- endif %}}
    The output should return <pre>300</pre>.
