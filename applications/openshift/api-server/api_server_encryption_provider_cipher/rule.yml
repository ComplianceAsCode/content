documentation_complete: true


title: 'Configure the Encryption Provider Cipher'

{{% set default_jqfilter = '[.spec.encryption.type]' %}}
{{% set default_api_path = '/apis/config.openshift.io/v1/apiservers/cluster' %}}
{{% set hypershift_path = '/apis/hypershift.openshift.io/v1beta1/namespaces/{{.hypershift_namespace_prefix}}/hostedclusters/{{.hypershift_cluster}}' %}}
{{% set hypershift_jqfilter = '[.spec.secretEncryption.type]' %}}
{{% set custom_api_path = '{{if ne .hypershift_cluster "None"}}' ~ hypershift_path ~ '{{else}}' ~  default_api_path ~ '{{end}}' %}}
{{% set custom_jqfilter = '{{if ne .hypershift_cluster "None"}}' ~ hypershift_jqfilter ~ '{{else}}' ~  default_jqfilter ~ '{{end}}' %}}
{{% set dump_path = default_api_path ~ ',' ~ default_jqfilter ~ ',' ~ custom_jqfilter %}}

description: |-
    Configure strong encryption provider cipher for etcd data encryption to
    protect sensitive API server resources. When etcd encryption is enabled, the
    following OpenShift API server and Kubernetes API server resources are
    encrypted:

    - Secrets
    - ConfigMaps
    - Routes
    - OAuth access tokens
    - OAuth authorize tokens

    Enable etcd encryption to automatically create and rotate encryption keys
    on a weekly basis. These keys are required for etcd backup restoration
    operations.

    Set the encryption type to aescbc or aesgcm in the `apiserver` object configuration:
    ```
    spec:
      encryption:
        type: aescbc
    ```

    For more information, follow
    {{{ weblink(link="https://docs.openshift.com/container-platform/latest/security/encrypting-etcd.html",
                text="the relevant documentation") }}}.

rationale: |-
    etcd serves as the highly available key-value store for persistent storage
    of all REST API objects in OpenShift deployments. These objects contain
    sensitive information and must be encrypted at rest to prevent unauthorized
    disclosure. The encryption provider must use strong, supported algorithms
    to ensure data confidentiality. Failure to configure proper encryption
    exposes sensitive cluster data, authentication tokens, and configuration
    secrets to potential compromise if storage media is accessed by
    unauthorized parties.

identifiers:
  cce@ocp4: CCE-83585-0

severity: medium

references:
    cis@ocp4: 1.2.31,2.8
    nerc-cip: CIP-003-8 R4.2
    nist: SC-28,SC-28(1)
    pcidss: Req-2.2
    srg: SRG-APP-000429-CTR-001060

platform: not ocp4-on-hypershift-hosted

ocil_clause: '`aescbc` or `aesgcm` is not configured as the encryption provider'

ocil: |-
    Verify that aescbc or aesgcm encryption providers are configured for etcd
    data encryption. OpenShift supports encryption of data at rest for the etcd
    datastore, with keys stored on the master filesystem and automatically
    rotated.

    Check the Encrypted status condition for the OpenShift API server:

    ```
    $ oc get openshiftapiserver -o=jsonpath='{range .items[0].status.conditions[?(@.type=="Encrypted")]}{.status}{"\n"}{.reason}{"\n"}{.message}{"\n"}{end}'
    ```

    The output should show EncryptionCompleted for successful encryption. If
    EncryptionInProgress appears, wait a few minutes and retry.

    Display the configured encryption provider:

    ```
    $ oc get --raw {{.var_apiserver_encryption_path}} | jq {{.var_apiserver_encryption_filter}}
    ```

    Verify the output lists aescbc or aesgcm as the encryption provider.

warnings:
- general: |-
    {{{ openshift_filtered_cluster_setting({custom_api_path: dump_path}) | indent(4) }}}

template:
  name: yamlfile_value
  vars:
    ocp_data: "true"
    entity_check: "all"
    filepath: {{{ openshift_filtered_path(default_api_path, default_jqfilter) }}}
    yamlpath: "[:]"
    check_existence: "at_least_one_exists"
    values:
        # aesgcm is available for OpenShift 4.13 and newer, but we include it
        # in our check here since it's not possible to set the encryption
        # provider type to aesgcm on OpenShift versions older than 4.13, which
        # simplifies the rule since we don't have to modify the check based on
        # the OpenShift version CPE.
        - value: "aescbc|aesgcm"
          type: "string"
          operation: "pattern match"
