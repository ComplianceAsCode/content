documentation_complete: true

prodtype: ocp3,ocp4

title: 'Ensure that the --authorization-mode argument includes RBAC'

description: |-
    Turn on Role Based Access Control.
{{%- if product == "ocp4" %}}
    Confirm that the below parameter is set on the <tt>openshift-kube-apiserver</tt> configmap 
    <pre>
    "apiServerArguments":{
      ...
      "authorization-mode":[
        ...
        "RBAC"
        ...
      ],
      ...
    </pre>
{{% else %}}
    Edit the <tt>/etc/origin/master/master-config.yaml</tt> file on the master node(s)
    and set the below parameter:
    <pre>kubernetesMasterConfig:
      apiServerArguments:
        authorization-mode:
        - Webhook</pre>
{{%- endif %}}

warnings:
  - functionality: |-
      If <tt>authorization-mode</tt> is not configured to <tt>RBAC</tt>, something went wrong during cluster installation.

rationale: |-
    Role Based Access Control (RBAC) allows fine-grained control over the operations that different entities can perform on different objects in the cluster. It is recommended to use the RBAC authorization mode.

severity: high

references:
    cis: 1.2.7,1.2.8,1.2.9

ocil_clause: '<tt>authorization-mode</tt> is not configured to <tt>RBAC</tt>'

ocil: |-
    Run the following command on the master node(s):
{{%- if product == "ocp4" %}}
    <pre>$ oc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data["config.yaml"]' | jq '.apiServerArguments["authorization-mode"]'</pre>
    Verify that there is no output, or that <tt>RBAC</tt> is part of the output. 
{{% else %}}
    <pre>$ sudo grep -A1 authorization-mode /etc/origin/master/master-config.yaml</pre>
{{%- endif %}}
    Verify that there is no output, or the output is set to <tt>Webhook</tt>. 

# Updated for OCP4
template:
    name: yamlfile_value
    vars:
        ocp_data: "true"
        filepath: '/api/v1/namespaces/openshift-kube-apiserver/configmaps/config'
        yamlpath: '.data["config.yaml"]'
        entity_check: "none satisfy"
        values:
            - value: 'authorization-mode'
              type: "string"
              operation: "pattern match"
