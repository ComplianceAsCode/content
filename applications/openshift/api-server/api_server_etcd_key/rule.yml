documentation_complete: true

prodtype: ocp4

title: 'Configure the etcd Certificate Key for the API Server'

description: |-
    To ensure etcd is configured to make use of TLS encryption for client
    communications, follow the OpenShift documentation and setup the TLS
    connection between the API Server and etcd. Then, verify
    that <tt>apiServerArguments</tt> has the <tt>etcd-keyfile</tt> configured in
    the <tt>openshift-kube-apiserver</tt> configmap to something similar to:
    <pre>
    ...
    "etcd-keyfile": [
        "/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.key"
    ],
    ...
    </pre>

rationale: |-
    etcd is a highly-available key-value store used by OpenShift deployments
    for persistent storage of all REST API objects. These objects are sensitive
    in nature and should be protected by client authentication. This requires the
    API Server to identify itself to the etcd server using a client certificate
    and key.

identifiers:
  cce@ocp4: CCE-83546-2


severity: medium

references:
    cis: 1.2.29

ocil_clause: '<tt>keyFile</tt> does not exist or is not configured to valid certificates'

ocil: |-
    Run the following command:
    <pre>$ oc get configmap config -n openshift-kube-apiserver -ojson | jq -r '.data["config.yaml"]' | jq -r '.apiServerArguments."etcd-keyfile"'</pre>
    The output should return a configured certificate key file.

warnings:
- general: |-
    {{{ openshift_cluster_setting("/api/v1/namespaces/openshift-kube-apiserver/configmaps/config") | indent(4) }}}

template:
  name: yamlfile_value
  vars:
    ocp_data: "true"
    entity_check: "all"
    filepath: /api/v1/namespaces/openshift-kube-apiserver/configmaps/config
    yamlpath: '.data["config.yaml"]'
    values:
     - value: '"etcd-keyfile":\[.*\.key"\]'
       operation: "pattern match"
       type: "string"
