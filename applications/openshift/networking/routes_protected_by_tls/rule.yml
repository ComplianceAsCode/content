prodtype: ocp4

title: Ensure that all OpenShift Routes prefer TLS

description: |-
  OpenShift Container Platform provides methods for communicating from
  outside the cluster with services running in the cluster. TLS must
  be used to protect these communications. OpenShift
  Routes provide the ability to configure the needed TLS settings. With
  these, one is able to configure that any request coming from the outside
  must use TLS. To verify this, ensure that every Route in the system
  has a policy of <tt>Disable</tt> or <tt>Redirect</tt> to ensure a
  secure endpoint is used. The aforementioned policy will be set in
  a Routes <tt>.spec.tls.insecureEdgeTerminationPolicy</tt> setting.
  
rationale: |-
  Using clear-text in communications coming to or from outside
  the cluster's network may leak sensitive information.

identifiers:
  cce@ocp4: CCE-84225-2

{{% set jqfilter = '[.items[] | select(.spec.tls.insecureEdgeTerminationPolicy != null) | select(.spec.tls.insecureEdgeTerminationPolicy | test("^(^$|None|Redirect)$"; "") | not) | .metadata.name]' %}}

references:
  nerc-cip: CIP-003-8 R4,CIP-003-8 R4.2,CIP-003-8 R5,CIP-004-6 R3,CIP-007-3 R5.1,CIP-007-3 R7.1
  nist: AC-4,AC-4(21),AC-17(3),SC-8,SC-8(1),SC-8(2),SI-4
  pcidss: Req-6.5.4
  srg: SRG-APP-000038-CTR-000105,SRG-APP-000039-CTR-000110,SRG-APP-000441-CTR-001090,SRG-APP-000442-CTR-001095

ocil_clause: 'The proper insecureEdgeTerminationPolicy is not set'

ocil: |-
    Run the following command to retrieve the compliancesuites in the system:
    <pre>$ oc get routes --all-namespaces</pre>
    Make sure that every route object has either <tt>None</tt> or <tt>Redirect</tt>
    in the <tt>.spec.tls.insecureEdgeTerminationPolicy</tt> setting.

severity: medium

warnings:
- general: |-
    {{{ openshift_filtered_cluster_setting({'/apis/route.openshift.io/v1/routes': jqfilter}) | indent(4) }}}

template:
  name: yamlfile_value
  vars:
      ocp_data: "true"
      filepath: "{{{ openshift_filtered_path('/apis/route.openshift.io/v1/routes', jqfilter) }}}"
      yamlpath: "[:]"
      check_existence: "none_exist"
      entity_check: "all"
      values:
        - value: "(.*?)"
          operation: "pattern match"
