documentation_complete: true

title: 'Ensure no ClusterRoleBindings set for default Service Account'

description: |-
    Ensure no ClusterRoleBindings are set for the `default` service account.
    Configure applications to use dedicated service accounts instead of the
    `default` service account to enable accurate rights review and audit
    tracing. Create unique service accounts for each application and associate
    ClusterRoleBindings with those dedicated accounts.

rationale: |-
    Kubernetes provides a default service account that cluster workloads use
    when no specific service account is assigned to the pod. Configure specific
    service accounts for pods that require access to the Kubernetes API and
    grant rights to those dedicated accounts. This approach increases
    auditability of service account rights and access, making it easier to
    trace potential malicious behaviors to specific service accounts and
    projects. Using the `default` service account creates security risks
    through overly broad permissions and inadequate audit trails.

severity: medium

identifiers: {}


{{% set jqfilter = '[.items[] | select ( .subjects[]?.name == "default" ) | select(.subjects[].namespace | startswith("kube-") or startswith("openshift-") | not) | .metadata.name ] | unique' %}}

ocil_clause: 'default service account is given permissions using ClusterRoleBindings'

ocil: |-
    Run the following command to retrieve ClusterRoleBindings associated with
    the `default` service account:
    ```
    oc get clusterrolebindings -o json | jq '{{{ jqfilter }}}'
    ```
    Verify that no ClusterRoleBindings are associated with the `default`
    service account in any namespace.

warnings:
- general: |-
    {{{ openshift_filtered_cluster_setting({'/apis/rbac.authorization.k8s.io/v1/clusterrolebindings?limit=10000': jqfilter}) | indent(4) }}}

template:
  name: yamlfile_value
  vars:
    ocp_data: "true"
    filepath: |-
      {{{ openshift_filtered_path('/apis/rbac.authorization.k8s.io/v1/clusterrolebindings?limit=10000', jqfilter) }}}
    yamlpath: "[:]"
    check_existence: "none_exist"
    entity_check: "all"
    values:
      - value: "(.*?)"
        operation: "pattern match"
