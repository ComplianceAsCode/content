documentation_complete: true

prodtype: ocp4

title: 'Limit Container Capabilities'

description: |-
    Containers should not enable more capabilites than needed as this
    opens the door for malicious use. To enable only the
    required capabilities, the appropriate Security Context Constraints (SCCs)
    should set capabilities as a list in <tt>allowedCapabilities</tt>.

rationale: |-
    By default, containers run with a default set of capabilities as assigned
    by the Container Runtime which can include dangerous or highly privileged
    capabilities. Capabilities should be dropped unless absolutely critical for
    the container to run software as added capabilities that are not required
    allow for malicious containers or attackers.

{{% set jqfilter = '[.items[] | select(.metadata.name | test("{{.var_sccs_with_allowed_capabilities_regex}}"; "") | not) | select(.allowedCapabilities != null) | .metadata.name]' %}}

severity: medium

references:
    cis@ocp4: 5.2.8
    nerc-cip: CIP-003-8 R6,CIP-004-6 R3,CIP-007-3 R6.1
    nist: CM-6,CM-6(1)
    pcidss: Req-2.2
    srg: SRG-APP-000516-CTR-001325,SRG-APP-000516-CTR-001330,SRG-APP-000516-CTR-001335

ocil_clause: 'allowed capabilities listings in SCCs needs review'

ocil: |-
    Inspect each SCC returned from running the following command:
    <pre>$ oc get scc</pre>
    Next, examine the outputs of the following commands:
    <pre>$ oc describe roles --all-namespaces</pre>
    <pre>$ oc describe clusterroles</pre>
    For any role/clusterrole that reference the
    <tt>securitycontextconstraints</tt> resource with the <tt>resourceNames</tt>
    of the SCCs that do not list an explicit <tt>allowedCapabilities</tt>, examine the
    associated rolebindings to account for the users that are bound to the role.
    Review each SCC and determine that only required capabilities are either
    completely added as a list entry under <tt>allowedCapabilities</tt>,
    or that all the un-required capabilities are dropped for containers and SCCs.
    varible var_sccs_with_allowed_capabilities_regex can be set to exclude certain
    SCCs from the check.
    Use following command to verify if the correct regex is being used, this ouput
    will list unqualified SCCs:
    <pre>$ oc get scc -o json | {{{ jqfilter }}}</pre>
    {{.var_sccs_with_allowed_capabilities_regex}} should be replace to the actual value set,
    either the default one or the one set from TailoredProfile.


warnings:
- general: |-
    {{{ openshift_filtered_cluster_setting({'/apis/security.openshift.io/v1/securitycontextconstraints': jqfilter}) | indent(4) }}}

template:
    name: yamlfile_value
    vars:
        ocp_data: "true"
        filepath: "{{{ openshift_filtered_path('/apis/security.openshift.io/v1/securitycontextconstraints', jqfilter) }}}"
        yamlpath: "[:]"
        check_existence: "none_exist"
        entity_check: "all"
        values:
          - value: "(.*?)"
            operation: "pattern match"
