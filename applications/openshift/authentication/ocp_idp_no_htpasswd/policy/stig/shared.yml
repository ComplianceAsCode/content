srg_requirement: |-
  {{{ full_name }}} must use FIPS-validated SHA-1 or higher hash function to provide replay-resistant authentication mechanisms for network access to privileged accounts.

vuldiscussion: |-
  A replay attack may enable an unauthorized user to gain access to the application. Authentication sessions between the authenticator and the application validating the user credentials must not be vulnerable to a replay attack.

  Anti-replay is a cryptographically based mechanism; thus, it must use FIPS-approved algorithms. An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. Note that the anti-replay service is implicit when data contains monotonically increasing sequence numbers and data integrity is assured. Use of DoD PKI is inherently compliant with this requirement for user and device access. Use of Transport Layer Security (TLS), including application protocols such as HTTPS and DNSSEC, that use TLS/SSL as the underlying security protocol is also complaint.

  Configure the information system to use the hash message authentication code (HMAC) algorithm for authentication services to Kerberos, SSH, web management tool, and any other access method.

checktext: |-
  Verify the authentication operator is configured to use a secure transport to an OpenIDConnect provider:

  oc get oauth cluster -o jsonpath="{.spec.identityProviders[*]}{'\n'}"

  If the transport is not secure (ex. HTTPS), this is a finding.

fixtext: |-
  Configure OpenShift to use an appropriate Identity Provider. Do not use
  HTPasswd. Use either LDAP(AD), OpenIDConnect or an approved identity
  provider.

  Steps to configure LDAP provider:

    1. Create Secret for BIND DN password

    > oc create secret generic ldap-secret --from-literal=bindPassword=<secret> \
    -n openshift-config

    2. Create config map for LDAP Trust CA

    > oc create configmap ca-config-map --from-file=ca.crt=/path/to/ca -n \
    openshift-config

    3. Create LDAP Auth Config Resource YAML

    Using your preferred text editor, create a file named ldapidp.yaml using
    the example content (replacing config values as appropriate):

    apiVersion: config.openshift.io/v1 kind: OAuth metadata:
      name: cluster
    spec:
      identityProviders:
      - name: ldapidp
        mappingMethod: claim
        type: LDAP
        ldap:
          attributes:
            id:
            - dn
              email:
            - mail
              name:
            - cn
              preferredUsername:
            - uid
          bindDN: ""
          bindPassword:
            name: ldap-secret
          ca:
            name: ca-config-map
          insecure: false
          url: "ldaps://ldap.example.com/ou=users,dc=acme,dc=com?uid"

      4. Apply LDAP config to cluster

      > oc apply -f ldapidp.yaml

      For more information on configuring an
      LDAP provider refer to the documentation:
      https://docs.openshift.com/container-platform/latest/authentication/identity_providers/configuring-ldap-identity-provider.html

  Steps to configure OpenID provider:

    1. Create Secret for Client Secret

    > oc create secret generic <secret_name> \
    --from-literal=clientSecret=<secret> -n openshift-config

    2. Create config map for OpenID Trust CA

    > oc create configmap ca-config-map --from-file=ca.crt=/path/to/ca \
    -n openshift-config

    3. Create OpenID Auth Config Resource YAML

    Using your preferred text editor, create a file named oidcidp.yaml using
    the example content (replacing config values as appropriate):

    apiVersion: config.openshift.io/v1 kind: OAuth metadata:
      name: cluster
    spec:
      identityProviders:
      - name: ldapidp
        mappingMethod: claim
        type: LDAP
        ldap:
          attributes:
            id:
            - dn
            email:
            - mail
            name:
            - cn
            preferredUsername:
            - uid
          bindDN: ""
          bindPassword:
            name: ldap-secret
          ca:
            name: ca-config-map
          insecure: false
          url:
          "ldaps://ldap.example.com/ou=users,dc=acme,dc=com?uid"


      4. Apply OpenID config to cluster

      > oc apply -f ldapidp.yaml

      For more information on configuring an
      OpenID provider refer to the documentation:
      https://docs.openshift.com/container-platform/latest/authentication/identity_providers/configuring-oidc-identity-provider.html
