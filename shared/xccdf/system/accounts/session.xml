<Group id="accounts-session">
<title>Secure Session Configuration Files for Login Accounts</title>
<description>When a user logs into a Unix account, the system
configures the user's session by reading a number of files. Many of
these files are located in the user's home directory, and may have
weak permissions as a result of user error or misconfiguration. If
an attacker can modify or even read certain types of account
configuration information, they can often gain full access to the
affected user's account. Therefore, it is important to test and
correct configuration file permissions for interactive accounts,
particularly those of privileged users such as root or system
administrators.</description>

<Value id="var_accounts_max_concurrent_login_sessions" interactive="0" operator="equals" type="number">
<title>Maximum concurrent login sessions</title>
<description>Maximum number of concurrent sessions by a user</description>
<value selector="">1</value>
<value selector="1">1</value>
<value selector="3">3</value>
<value selector="5">5</value>
<value selector="10">10</value>
<value selector="15">15</value>
<value selector="20">20</value>
</Value>

<Value id="var_accounts_fail_delay" interactive="0" operator="equals" type="number">
<title>Maximum login attempts delay</title>
<description>Maximum time in seconds between fail login attempts before re-prompting.</description>
<value selector="">4</value>
<value selector="1">1</value>
<value selector="2">2</value>
<value selector="3">3</value>
<value selector="4">4</value>
<value selector="5">5</value>
</Value>

<Value id="var_accounts_tmout" interactive="0" operator="equals" type="number">
<title>Account Inactivity Timeout (minutes)</title>
<description>In an interactive shell, the value is interpreted as the
number of seconds to wait for input after issueing the primary prompt.
Bash terminates after waiting for that number of seconds if input does
not arrive.</description>
<value selector="">600</value>
<value selector="5_min">300</value>
<value selector="10_min">600</value>
<value selector="15_min">900</value>
</Value>

<Rule id="accounts_have_homedir_login_defs" prodtype="rhel7" severity="medium">
<title>Ensure Home Directories are Created for New Users</title>
<description>
All local interactive user accounts, upon creation, should be assigned a home directory.
<br /><br />
Configure the operating system to assign home directories to all new local interactive users by setting the <tt>CREATE_HOME</tt>
parameter in <tt>/etc/login.defs</tt> to <tt>yes</tt> as follows:
<br /><br />
<pre>CREATE_HOME yes</pre>
</description>
<rationale>
If local interactive users are not assigned a valid home directory, there is no place
for the storage and control of files they should own.
</rationale>
<ocil clause="the value of CREATE_HOME is not set to yes, is missing, or the line is commented out">
Check if the system is configured to create home directories for local interactive users with the following command:
<br /><br />
<pre>$ sudo grep create_home /etc/login.defs</pre>
<br /><br />
</ocil>
<ident cce="80434-4" prodtype="rhel7" />
<oval id="accounts_have_homedir_login_defs" />
<ref prodtype="rhel7" stigid="020610" />
<ref srg="SRG-OS-000480-GPOS-00227" />
</Rule>

<Rule id="accounts_tmout" prodtype="rhel7" severity="medium">
<title>Set Interactive Session Timeout</title>
<description>
Setting the <tt>TMOUT</tt> option in <tt>/etc/profile</tt> ensures that
all user sessions will terminate based on inactivity. The <tt>TMOUT</tt>
setting in <tt>/etc/profile</tt> should read as follows:
<pre>TMOUT=<sub idref="var_accounts_tmout" /></pre>
</description>
<rationale>
Terminating an idle session within a short time period reduces
the window of opportunity for unauthorized personnel to take control of a
management session enabled on the console or console port that has been
left unattended.
</rationale>
<ocil clause="value of TMOUT is not less than or equal to expected setting">
Run the following command to ensure the <tt>TMOUT</tt> value is configured for all users
on the system:
<pre>$ sudo grep TMOUT /etc/profile</pre>
The output should return the following:
<pre>TMOUT=<sub idref="var_accounts_tmout" /></pre>
</ocil>
<ident prodtype="rhel7" cce="27557-8" />
<ref prodtype="rhel7" stigid="040160" ospp="FMT_MOF_EXT.1" />
<ref nist="AC-12,SC-10" disa="1133,0361" srg="SRG-OS-000163-GPOS-00072" cui="3.1.11" />
<oval id="accounts_tmout" value="var_accounts_tmout" />
</Rule>

<Rule id="accounts_max_concurrent_login_sessions" prodtype="rhel7,fedora" severity="low">
<title>Limit the Number of Concurrent Login Sessions Allowed Per User</title>
<description>
Limiting the number of allowed users and sessions per user can limit risks related to Denial of
Service attacks. This addresses concurrent sessions for a single account and does not address
concurrent sessions by a single user via multiple accounts. To set the number of concurrent
sessions per user add the following line in <tt>/etc/security/limits.conf</tt>:
<pre>* hard maxlogins <sub idref="var_accounts_max_concurrent_login_sessions" /></pre>
</description>
<rationale>Limiting simultaneous user logins can insulate the system from denial of service
problems caused by excessive logins. Automated login processes operating improperly or
maliciously may result in an exceptional number of simultaneous login sessions.
</rationale>
<ocil clause="maxlogins is not equal to or less than the expected value">
Run the following command to ensure the <tt>maxlogins</tt> value is configured for all users
on the system:
<pre># grep "maxlogins" /etc/security/limits.conf</pre>
You should receive output similar to the following:
<pre>*		hard	maxlogins	<sub idref="var_accounts_max_concurrent_login_sessions" /></pre>
</ocil>
<ident cce="27081-9" prodtype="rhel7" />
<oval id="accounts_max_concurrent_login_sessions" value="var_accounts_max_concurrent_login_sessions" />
<ref prodtype="rhel7" stigid="040000" />
<ref cjis="5.5.2.2" disa="54" nist="AC-10" srg="SRG-OS-000027-GPOS-00008" />
</Rule>

<Rule id="accounts_logon_fail_delay" prodtype="rhel7">
<title>Ensure the Logon Failure Delay is Set Correctly in login.defs</title>
<description>
To ensure the logon failure delay controlled by <tt>/etc/login.defs</tt> is set properly,
add or correct the <tt>FAIL_DELAY</tt> setting in <tt>/etc/login.defs</tt> to read as follows:
<pre>FAIL_DELAY <sub idref="var_accounts_fail_delay" /></pre>
</description>
<ocil clause="the above command returns no output, or FAIL_DELAY is configured less than the expected value">
Verify the <tt>FAIL_DELAY</tt> setting is configured correctly in the <tt>/etc/login.defs</tt> file by
running the following command:
<pre>$ sudo grep -i "FAIL_DELAY" /etc/login.defs</pre>
All output must show the value of <tt>FAIL_DELAY</tt> set as shown in the below:
<pre>$ sudo grep -i "FAIL_DELAY" /etc/login.defs
fail_delay <sub idref="var_accounts_fail_delay" /></pre>
</ocil>
<rationale>
Increasing the time between a failed authentication attempt and re-prompting to
enter credentials helps to slow a single-threaded brute force attack.
</rationale>
<ident cce="80352-8" prodtype="rhel7" />
<oval id="accounts_logon_fail_delay" value="var_accounts_fail_delay" />
<ref prodtype="rhel7" stigid="010430" />
<ref disa="366" nist="CM-6(b)" srg="SRG-OS-000480-GPOS-00226" />
</Rule>

<Group id="root_paths">
<title>Ensure that No Dangerous Directories Exist in Root's Path</title>
<description>The active path of the root account can be obtained by
starting a new root shell and running:
<pre># echo $PATH</pre>
This will produce a colon-separated list of
directories in the path.
<br /><br />
Certain path elements could be considered dangerous, as they could lead
to root executing unknown or
untrusted programs, which could contain malicious
code.
Since root may sometimes work inside
untrusted directories, the <tt>.</tt> character, which represents the
current directory, should never be in the root path, nor should any
directory which can be written to by an unprivileged or
semi-privileged (system) user.
<br /><br />
It is a good practice for administrators to always execute
privileged commands by typing the full path to the
command.</description>

<Rule id="root_path_no_dot" prodtype="rhel7,fedora">
<title>Ensure that Root's Path Does Not Include Relative Paths or Null Directories</title>
<description>
Ensure that none of the directories in root's path is equal to a single
<tt>.</tt> character, or
that it contains any instances that lead to relative path traversal, such as
<tt>..</tt> or beginning a path without the slash (<tt>/</tt>) character.
Also ensure that there are no "empty" elements in the path, such as in these examples:
<pre>PATH=:/bin
PATH=/bin:
PATH=/bin::/sbin</pre>
These empty elements have the same effect as a single <tt>.</tt> character.
</description>
<rationale>
Including these entries increases the risk that root could
execute code from an untrusted location.
</rationale>
<ident cce="80199-3" prodtype="rhel7" />
<oval id="root_path_no_dot" />
<ref disa="366" nist="CM-6(b)" />
</Rule>

<Rule id="accounts_root_path_dirs_no_write" prodtype="rhel7,fedora">
<title>Ensure that Root's Path Does Not Include World or Group-Writable Directories</title>
<description>
For each element in root's path, run:
<pre># ls -ld <i>DIR</i></pre>
and ensure that write permissions are disabled for group and
other.
</description>
<ocil clause="group or other write permissions exist">
To ensure write permissions are disabled for group and other
 for each element in root's path, run the following command:
<pre># ls -ld <i>DIR</i></pre>
</ocil>
<rationale>
Such entries increase the risk that root could
execute code provided by unprivileged users,
and potentially malicious code.
</rationale>
<ident cce="80200-9" prodtype="rhel7" />
<oval id="accounts_root_path_dirs_no_write" />
<ref disa="366" nist="CM-6(b)" />
</Rule>
</Group>

<Rule id="accounts_user_dot_no_world_writable_programs" prodtype="rhel7" severity="medium">
<title>User Initialization Files Must Not Run World-Writable Programs</title>
<description>
Set the mode on files being executed by the user initialization files with the
following command:
<pre>$ sudo chmod 0755 <i>FILE</i></pre>
</description>
<ocil clause="files are executing world-writable programs">
To verify that local initialization files do not execute world-writable programs,
execute the following command:
<pre>$ sudo find /home -perm -002 -type f -exec ls -ld {} -name ".[^.]*"\;</pre>
There should be no output.
</ocil>
<rationale>
If user start-up files execute world-writable programs, especially in
unprotected directories, they could be maliciously modified to destroy user
files or otherwise compromise the system at the user level. If the system is
compromised at the user level, it is easier to elevate privileges to eventually
compromise the system at the root and network level.
</rationale>
<ident cce="80523-4" />
<oval id="accounts_user_dot_no_world_writable_programs" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020730" />
</Rule>

<Rule id="accounts_user_home_paths_only" prodtype="rhel7" severity="medium">
<title>Ensure that Users Path Contains Only Local Directories</title>
<description>
Ensure that all interactive user initialization files executable search
path statements do not contain statements that will reference a working
directory other than the users home directory.
</description>
<ocil clause="paths contain more than local home directories">
To verify that all interactive user initialization files executable search
path statements do not contain statements that will reference a working
directory other than the users home directory, run the following command:
<pre>$ sudo grep -r PATH /home/</pre>
Inspect the output for any PATH is references directories outside the home directory.
</ocil>
<rationale>
The executable search path (typically the PATH environment variable) contains a
list of directories for the shell to search to find executables. If this path
includes the current working directory (other than the users home directory),
executables in these directories may be executed instead of system commands.
This variable is formatted as a colon-separated list of directories. If there is
an empty entry, such as a leading or trailing colon or two consecutive colons,
this is interpreted as the current working directory. If deviations from the
default system search path for the local interactive user are required, they
must be documented with the Information System Security Officer (ISSO).
</rationale>
<ident cce="80524-2" />
<oval id="accounts_user_home_paths_only" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020720" />
</Rule>

<Rule id="file_permission_user_init_files" prodtype="rhel7" severity="medium">
<title>Ensure All User Initialization Files Have Mode 0740 Or Less Permissive</title>
<description>
Set the mode of the user initialization files to <tt>0740</tt> with the
following command:
<pre>$ sudo chmod 0740 /home/<i>USER</i>/.<i>INIT_FILE</i></pre>
</description>
<ocil clause="they are not 0740 or more permissive">
To verify that all user initialization files have a mode of <tt>0740</tt> or
less permissive, run the following command:
<pre>$ sudo find /home -type f -name '\.*' \( -perm -0002 -o -perm -0020 \)</pre>
There should be no output.
</ocil>
<rationale>
Local initialization files are used to configure the user's shell environment
upon logon. Malicious modification of these files could compromise accounts upon
logon.
</rationale>
<ident cce="80525-9" />
<oval id="file_permission_user_init_files" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020710" />
</Rule>

<Rule id="accounts_user_dot_group_ownership" prodtype="rhel7" severity="medium">
<title>User Initialization Files Must Be Group-Owned By The Primary User</title>
<description>
Change the group owner of interactive users files to the group found
in <pre>/etc/passwd</pre> for the user. To change the group owner of a local
interactive user home directory, use the following command:
<pre>$ sudo chgrp <i>USER_GROUP</i> /home/<i>USER</i>/.<i>INIT_FILE</i></pre>
</description>
<ocil clause="they are not">
To verify the local initialization files of all local interactive users are group-
owned by the appropriate user, inspect the primary group of the respective
users in <tt>/etc/passwd</tt> and verify all initialization files under the
respective users home directory. Check the group owner of all local interactive users
initialization files.
</ocil>
<rationale>
Local initialization files for interactive users are used to configure the
user's shell environment upon logon. Malicious modification of these files could
compromise accounts upon logon.
</rationale>
<ident cce="80526-7" />
<oval id="accounts_user_dot_group_ownership" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020700" />
</Rule>

<Rule id="accounts_user_dot_user_ownership" prodtype="rhel7" severity="medium">
<title>User Initialization Files Must Be Owned By the Primary User</title>
<description>
Set the owner of the user initialization files for interactive users to
the primary owner with the following command:
<pre>$ sudo chown <i>USER</i> /home/<i>USER</i>/.*</pre>
</description>
<ocil clause="they are not">
To verify all local initialization files for interactive users are owned by the
primary user, run the following command:
<pre>$ sudo ls -al /home/<i>USER</i>/.*</pre>
The user initialization files should be owned by <i>USER</i>.
</ocil>
<rationale>
Local initialization files are used to configure the user's shell environment
upon logon. Malicious modification of these files could compromise accounts upon
logon.
</rationale>
<ident cce="80527-5" />
<oval id="accounts_user_dot_user_ownership" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020690" />
</Rule>

<Rule id="accounts_user_interactive_home_directory_defined" prodtype="rhel7" severity="medium">
<title>All Interactive Users Must Have A Home Directory Defined</title>
<description>
Assign home directories to all interactive users that currently do not
have a home directory assigned.
</description>
<ocil clause="users home directory is not defined">
To verify interactive users on the system have a home directory assigned,
run the following command:
<pre>$ sudo awk -F":" '{print $1 ":" $6}' /etc/passwd</pre>
Inspect the output and verify that all interactive users have a home directory
defined.
</ocil>
<rationale>
If local interactive users are not assigned a valid home directory, there is no
place for the storage and control of files they should own.
</rationale>
<ident cce="80528-3" />
<oval id="accounts_user_interactive_home_directory_defined" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020600" />
</Rule>

<Rule id="accounts_user_interactive_home_directory_exists" prodtype="rhel7" severity="medium">
<title>All Interactive Users Home Directories Must Exist</title>
<description>
Create home directories to all interactive users that currently do not
have a home directory assigned. Use the following commands to create the user
home directory assigned in <tt>/etc/passwd</tt>:
<pre>$ sudo mkdir /home/<i>USER</i></pre>
</description>
<ocil clause="users home directory does not exist">
To verify the assigned home directory of all interactive users on the system
exist, run the following command:
<pre>$ sudo pwck -r</pre>
The output should not return any interactive users.
</ocil>
<rationale>
If a local interactive user has a home directory defined that does not exist,
the user may be given access to the / directory as the current working directory
upon logon. This could create a Denial of Service because the user would not be
able to access their logon configuration files, and it may give them visibility
to system files they normally would not be able to access.
</rationale>
<ident cce="80529-1" />
<oval id="accounts_user_interactive_home_directory_exists" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020620" />
</Rule>

<Rule id="file_permissions_home_directories" prodtype="rhel7" severity="medium">
<title>All Interactive User Home Directories Must Have mode 0750 Or Less Permissive</title>
<description>
Change the mode of interactive users home directories to <tt>0750</tt>. To
change the mode of interactive users home directory, use the
following command:
<pre>$ sudo chmod 0750 /home/<i>USER</i></pre>
</description>
<ocil clause="they are more permissive">
To verify the assigned home directory of all interactive user home directories
have a mode of <pre>0750</pre> or less permissive, run the following command:
<pre>$ sudo ls -l /home</pre>
Inspect the output for any directories with incorrect permissions.
</ocil>
<rationale>
Excessive permissions on local interactive user home directories may allow
unauthorized access to user files by other users.
</rationale>
<ident cce="80530-9" />
<oval id="file_permissions_home_directories" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020630" />
</Rule>

<Rule id="file_ownership_home_directories" prodtype="rhel7" severity="medium">
<title>All Interactive User Home Directories Must Be Owned By The Primary User</title>
<description>
Change the owner of interactive users home directories to that correct
owner. To change the owner of a interactive users home directory, use
the following command:
<pre>$ sudo chown <i>USER</i> /home/<i>USER</i></pre>
</description>
<ocil clause="the user ownership is incorrect">
To verify the home directory ownership, run the following command:
<pre>$ sudo ls -ld $(egrep ':[0-9]{4}' /etc/passwd | cut -d: -f6)</pre>
</ocil>
<rationale>
If a local interactive user does not own their home directory, unauthorized
users could access or modify the user's files, and the users may not be able to
access their own files.
</rationale>
<ident cce="80531-7" />
<oval id="file_ownership_home_directories" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020640" />
</Rule>

<Rule id="file_groupownership_home_directories" prodtype="rhel7" severity="medium">
<title>All Interactive User Home Directories Must Be Group-Owned By The Primary User</title>
<description>
Change the group owner of interactive users home directory to the
group found in <tt>/etc/passwd</tt>. To change the group owner of
interactive users home directory, use the following command:
<pre>$ sudo chgrp <i>USER_GROUP</i> /home/<i>USER</i></pre>
</description>
<ocil clause="the group ownership is incorrect">
To verify the assigned home directory of all interactive users is group-
owned by that users primary GID, run the following command:
<pre>$ sudo ls -ld $ (egrep ':[0-9]{4}' /etc/passwd | cut -d: -f6)</pre>
</ocil>
<rationale>
If the Group Identifier (GID) of a local interactive users home directory is
not the same as the primary GID of the user, this would allow unauthorized
access to the users files, and users that share the same group may not be
able to access files that they legitimately should.
</rationale>
<ident cce="80532-5" />
<oval id="file_groupownership_home_directories" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020650" />
</Rule>

<Rule id="accounts_users_home_files_ownership" prodtype="rhel7" severity="medium">
<title>All User Files and Directories In The Home Directory Must Be Owned By The Primary User</title>
<description>
Change the owner of a interactive users files and directories to that
owner. To change the of a local interactive users files and
directories, use the following command:
<pre>$ sudo chown -R <i>USER</i> /home/<i>USER</i></pre>
</description>
<ocil clause="the user ownership is incorrect">
To verify all files and directories in interactive users home directory
are owned by the user, run the following command:
<pre>$ sudo ls -lLR /home/<i>USER</i></pre>
</ocil>
<rationale>
If local interactive users do not own the files in their directories,
unauthorized users may be able to access them. Additionally, if files are not
owned by the user, this could be an indication of system compromise.
</rationale>
<ident cce="80533-3" />
<oval id="accounts_users_home_files_ownership" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020660" />
</Rule>

<Rule id="accounts_users_home_files_groupownership" prodtype="rhel7" severity="medium">
<title>All User Files and Directories In The Home Directory Must Be Group-Owned By The Primary User</title>
<description>
Change the group of a local interactive users files and directories to a
group that the interactive user is a member of. To change the group owner of a
local interactive users files and directories, use the following command:
<pre>$ sudo chgrp <i>USER_GROUP</i> /home/<i>USER</i>/<i>FILE_DIR</i></pre>
</description>
<ocil clause="the group ownership is incorrect">
To verify all files and directories in interactive user home directory are
group-owned by a group the user is a member of, run the
following command:
<pre>$ sudo ls -lLR /home/<i>USER</i></pre>
</ocil>
<rationale>
If a local interactive users files are group-owned by a group of which the
user is not a member, unintended users may be able to access them.
</rationale>
<ident cce="80534-1" />
<oval id="accounts_users_home_files_groupownership" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020670" />
</Rule>

<Rule id="accounts_users_home_files_permissions" prodtype="rhel7" severity="medium">
<title>All User Files and Directories In The Home Directory Must Have Mode 0750 Or Less Permissive</title>
<description>
Set the mode on files and directories in the local interactive user home
directory with the following command:
<pre>$ sudo chmod 0750 /home/<i>USER</i>/<i>FILE_DIR</i></pre>
</description>
<ocil clause="home directory files or folders have incorrect permissions">
To verify all files and directories contained in interactive user home
directory, excluding local initialization files, have a mode of <tt>0750</tt>,
run the following command:
<pre>$ sudo ls -lLR /home/<i>USER</i></pre>
</ocil>
<rationale>
If a local interactive user files have excessive permissions, unintended users
may be able to access or modify them.
</rationale>
<ident cce="80535-8" />
<oval id="accounts_users_home_files_permissions" />
<ref disa="366" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="020680" />
</Rule>

<Rule id="file_permissions_home_dirs" prodtype="rhel7,fedora">
<title>Ensure that User Home Directories are not Group-Writable or World-Readable</title>
<description>For each human user of the system, view the
permissions of the user's home directory:
<pre># ls -ld /home/<i>USER</i></pre>
Ensure that the directory is not group-writable and that it
is not world-readable. If necessary, repair the permissions:
<pre># chmod g-w /home/<i>USER</i>
# chmod o-rwx /home/<i>USER</i></pre>
</description>
<ocil clause="the user home directory is group-writable or world-readable">
To ensure the user home directory is not group-writable or world-readable, run the following:
<pre># ls -ld /home/<i>USER</i></pre>
</ocil>
<warning category="general">This action may involve
modifying user home directories. Notify your user community, and
solicit input if appropriate, before making this type of
change.</warning>
<rationale>
User home directories contain many configuration files which
affect the behavior of a user's account. No user should ever have
write permission to another user's home directory. Group shared
directories can be configured in sub-directories or elsewhere in the
filesystem if they are needed. Typically, user home directories
should not be world-readable, as it would disclose file names
to other users. If a subset of users need read access
to one another's home directories, this can be provided using
groups or ACLs.
</rationale>
<ident cce="80201-7" prodtype="rhel7" />
<oval id="file_permissions_home_dirs" />
<ref disa="225" nist="AC-6(7)" />
</Rule>

<Group id="user_umask">
<title>Ensure that Users Have Sensible Umask Values</title>
<description>
The umask setting controls the default permissions
for the creation of new files.
With a default <tt>umask</tt> setting of 077, files and directories
created by users will not be readable by any other user on the
system. Users who wish to make specific files group- or
world-readable can accomplish this by using the chmod command.
Additionally, users can make all their files readable to their
group by default by setting a <tt>umask</tt> of 027 in their shell
configuration files. If default per-user groups exist (that is, if
every user has a default group whose name is the same as that
user's username and whose only member is the user), then it may
even be safe for users to select a <tt>umask</tt> of 007, making it very
easy to intentionally share files with groups of which the user is
a member.
<br /><br />

</description>




<Value id="var_accounts_user_umask" interactive="0" operator="equals" type="string">
<title>Sensible umask</title>
<description>Enter default user umask</description>
<value selector="">027</value>
<value selector="007">007</value>
<value selector="022">022</value>
<value selector="027">027</value>
<value selector="077">077</value>
</Value>

<Rule id="accounts_umask_etc_bashrc" prodtype="rhel7">
<title>Ensure the Default Bash Umask is Set Correctly</title>
<description>
To ensure the default umask for users of the Bash shell is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/bashrc</tt> to read
as follows:
<pre>umask <sub idref="var_accounts_user_umask" /></pre>
</description>
<rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
<ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/bashrc</tt> file by
running the following command:
<pre># grep "umask" /etc/bashrc</pre>
All output must show the value of <tt>umask</tt> set as shown below:
<pre># grep "umask" /etc/bashrc
umask <sub idref="var_accounts_user_umask" />
umask <sub idref="var_accounts_user_umask" /></pre>
</ocil>
<ident cce="80202-5" prodtype="rhel7" />
<oval id="accounts_umask_etc_bashrc" value="var_accounts_user_umask" />
<ref cis="5.4.4" disa="366" nist="SA-8" />
</Rule>

<Rule id="accounts_umask_etc_csh_cshrc" prodtype="rhel7">
<title>Ensure the Default C Shell Umask is Set Correctly</title>
<description>
To ensure the default umask for users of the C shell is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/csh.cshrc</tt> to read as follows:
<pre>umask <sub idref="var_accounts_user_umask" /></pre>
</description>
<rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
<ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/csh.cshrc</tt> file by
running the following command:
<pre># grep "umask" /etc/csh.cshrc</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre># grep "umask" /etc/csh.cshrc
umask <sub idref="var_accounts_user_umask" /></pre>
</ocil>
<ident cce="80203-3" prodtype="rhel7" />
<oval id="accounts_umask_etc_csh_cshrc" value="var_accounts_user_umask" />
<ref disa="366" nist="SA-8" />
</Rule>

<Rule id="accounts_umask_etc_profile" prodtype="rhel7,fedora">
<title>Ensure the Default Umask is Set Correctly in /etc/profile</title>
<description>
To ensure the default umask controlled by <tt>/etc/profile</tt> is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/profile</tt> to read as follows:
<pre>umask <sub idref="var_accounts_user_umask" /></pre>
</description>
<rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
<ident cce="80204-1" prodtype="rhel7" />
<ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/profile</tt> file by
running the following command:
<pre># grep "umask" /etc/profile</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre># grep "umask" /etc/profile
umask <sub idref="var_accounts_user_umask" /></pre>
</ocil>
<oval id="accounts_umask_etc_profile" value="var_accounts_user_umask" />
<ref cis="5.4.4" disa="366" nist="SA-8" />
</Rule>

<Rule id="accounts_umask_etc_login_defs" prodtype="rhel7">
<title>Ensure the Default Umask is Set Correctly in login.defs</title>
<description>
To ensure the default umask controlled by <tt>/etc/login.defs</tt> is set properly,
add or correct the <tt>UMASK</tt> setting in <tt>/etc/login.defs</tt> to read as follows:
<pre>UMASK <sub idref="var_accounts_user_umask" /></pre>
</description>
<rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read and
written to by unauthorized users.</rationale>
<ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>UMASK</tt> setting is configured correctly in the <tt>/etc/login.defs</tt> file by
running the following command:
<pre># grep -i "UMASK" /etc/login.defs</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre># grep -i "UMASK" /etc/login.defs
umask <sub idref="var_accounts_user_umask" /></pre>
</ocil>
<ident cce="80205-8" prodtype="rhel7" />
<oval id="accounts_umask_etc_login_defs" value="var_accounts_user_umask" />
<ref prodtype="rhel7" stigid="020240" />
<ref disa="366" nist="CM-6(b),SA-8" srg="SRG-OS-000480-GPOS-00228" />
</Rule>

<Rule id="accounts_umask_interactive_users" prodtype="rhel7" severity="medium">
<title>Ensure the Default Umask is Set Correctly For Interactive Users</title>
<description>
Remove the <tt>UMASK</tt> environment variable from all interactive users initialization files.
</description>
<ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>UMASK</tt> setting is not configured for interactive users,
run the following command:
<pre>$ sudo grep -ri "UMASK" /home</pre>
There should be no output.
</ocil>
<rationale>
The umask controls the default access mode assigned to newly created files. A
umask of 077 limits new files to mode 700 or less permissive. Although umask can
be represented as a four-digit number, the first digit representing special
access modes is typically ignored or required to be 0. This requirement
applies to the globally configured system defaults and the local interactive
user defaults for each account on the system.
</rationale>
<ident cce="80536-6" />
<oval id="accounts_umask_interactive_users" value="var_accounts_user_umask" />
<ref disa="1814" nist="" srg="SRG-OS-000480-GPOS-00227" stigid="021040" />
</Rule>

</Group>
</Group>