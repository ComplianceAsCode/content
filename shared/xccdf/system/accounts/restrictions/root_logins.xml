<Group id="root_logins">
<title>Restrict Root Logins</title>
<description>
Direct root logins should be allowed only for emergency use.
In normal situations, the administrator should access the system
via a unique unprivileged account, and then use <tt>su</tt> or <tt>sudo</tt> to execute
privileged commands. Discouraging administrators from accessing the
root account directly ensures an audit trail in organizations with
multiple administrators. Locking down the channels through which
root can connect directly also reduces opportunities for
password-guessing against the root account. The <tt>login</tt> program
uses the file <tt>/etc/securetty</tt> to determine which interfaces
should allow root logins.

The virtual devices <tt>/dev/console</tt>
and <tt>/dev/tty*</tt> represent the system consoles (accessible via
the Ctrl-Alt-F1 through Ctrl-Alt-F6 keyboard sequences on a default
installation). The default securetty file also contains <tt>/dev/vc/*</tt>.
These are likely to be deprecated in most environments, but may be retained
for compatibility. Root should also be prohibited from connecting
via network protocols. Other sections of this document
include guidance describing how to prevent root from logging in via SSH.
</description>

<Rule id="no_direct_root_logins" prodtype="rhel7,fedora" severity="medium">
<title>Direct root Logins Not Allowed</title>
<description>To further limit access to the <tt>root</tt> account, administrators
can disable root logins at the console by editing the <tt>/etc/securetty</tt> file.
This file lists all devices the root user is allowed to login to. If the file does
not exist at all, the root user can login through any communication device on the
system, whether via the console or via a raw network interface. This is dangerous
as user can login to the system as root via Telnet, which sends the password in
plain text over the network. By default, Red Hat Enteprise Linux's
<tt>/etc/securetty</tt> file only allows the root user to login at the console
physically attached to the system. To prevent root from logging in, remove the
contents of this file. To prevent direct root logins, remove the contents of this
file by typing the following command:
<pre>
$ sudo echo &gt; /etc/securetty
</pre>
</description>
<ocil clause="the /etc/securetty file is not empty">
To ensure root may not directly login to the system over physical consoles,
run the following command:
<pre>cat /etc/securetty</pre>
If any output is returned, this is a finding.
</ocil>
<rationale>
Disabling direct root logins ensures proper accountability and multifactor
authentication to privileged accounts. Users will first login, then escalate
to privileged (root) access via su / sudo. This is required for FISMA Low
and FISMA Moderate systems.
</rationale>
<oval id="no_direct_root_logins" />
<ident cce="27294-8" prodtype="rhel7" />
<ref cis="5.5" cui="3.1.1,3.1.6" hipaa="164.308(a)(1)(ii)(B),164.308(a)(7)(i),164.308(a)(7)(ii)(A),164.310(a)(1),164.310(a)(2)(i),164.310(a)(2)(ii),164.310(a)(2)(iii),164.310(b),164.310(c),164.310(d)(1),164.310(d)(2)(iii)" nist="IA-2(1)" />
</Rule>

<Rule id="securetty_root_login_console_only" prodtype="rhel7,fedora" severity="medium">
<title>Restrict Virtual Console Root Logins</title>
<description>
To restrict root logins through the (deprecated) virtual console devices,
ensure lines of this form do not appear in <tt>/etc/securetty</tt>:
<pre>vc/1
vc/2
vc/3
vc/4</pre>
</description>
<ocil clause="root login over virtual console devices is permitted">
To check for virtual console entries which permit root login, run the
following command:
<pre>$ sudo grep ^vc/[0-9] /etc/securetty</pre>
If any output is returned, then root logins over virtual console devices is permitted.
</ocil>
<rationale>
Preventing direct root login to virtual console devices
helps ensure accountability for actions taken on the system
using the root account.
</rationale>
<ident cce="27318-5" prodtype="rhel7" />
<oval id="securetty_root_login_console_only" />
<ref cui="3.1.1, 3.1.5" disa="770" hipaa="164.308(a)(1)(ii)(B),164.308(a)(7)(i),164.308(a)(7)(ii)(A),164.310(a)(1),164.310(a)(2)(i),164.310(a)(2)(ii),164.310(a)(2)(iii),164.310(b),164.310(c),164.310(d)(1),164.310(d)(2)(iii)" nist="AC-6(2)" />
</Rule>

<Rule id="restrict_serial_port_logins" prodtype="rhel7,fedora">
<title>Restrict Serial Port Root Logins</title>
<description>To restrict root logins on serial ports,
ensure lines of this form do not appear in <tt>/etc/securetty</tt>:
<pre>ttyS0
ttyS1</pre>

</description>
<ocil clause="root login over serial ports is permitted">
To check for serial port entries which permit root login,
run the following command:
<pre>$ sudo grep ^ttyS/[0-9] /etc/securetty</pre>
If any output is returned, then root login over serial ports is permitted.
</ocil>
<rationale>
Preventing direct root login to serial port interfaces
helps ensure accountability for actions taken on the systems
using the root account.
</rationale>
<ident cce="27268-2" prodtype="rhel7" />
<oval id="restrict_serial_port_logins" />
<ref cui="3.1.1, 3.1.5" disa="770" hipaa="164.308(a)(1)(ii)(B),164.308(a)(7)(i),164.308(a)(7)(ii)(A),164.310(a)(1),164.310(a)(2)(i),164.310(a)(2)(ii),164.310(a)(2)(iii),164.310(b),164.310(c),164.310(d)(1),164.310(d)(2)(iii)" nist="AC-6(2)" />
</Rule>

<Rule id="no_root_webbrowsing" prodtype="rhel7,fedora">
<title>Restrict Web Browser Use for Administrative Accounts</title>
<description>
Enforce policy requiring administrative accounts use web browsers only for
local service administration.
</description>
<ocil clause="this is not the case">
Check the <tt>root</tt> home directory for a <tt>.mozilla</tt> directory. If
one exists, ensure browsing is limited to local service administration.
</ocil>
<rationale>
If a browser vulnerability is exploited while running with administrative privileges,
the entire system could be compromised. Specific exceptions for local service
administration should be documented in site-defined policy.
</rationale>
<ident cce="80209-0" prodtype="rhel7" />
</Rule>

<Rule id="no_shelllogin_for_systemaccounts" prodtype="rhel7,fedora" severity="medium">
<title>Ensure that System Accounts Do Not Run a Shell Upon Login</title>
<description>
Some accounts are not associated with a human user of the system, and exist to
perform some administrative function. Should an attacker be able to log into
these accounts, they should not be granted access to a shell.
<br /><br />
The login shell for each local account is stored in the last field of each line
in <tt>/etc/passwd</tt>. System accounts are those user accounts with a user ID
less than UID_MIN, where value of UID_MIN directive is set in
/etc/login.defs configuration file. In the default configuration UID_MIN is set
to 1000, thus system accounts are those user accounts with a user ID less than
1000. The user ID is stored in the third field. If any system account
<i>SYSACCT</i> (other than root) has a login shell, disable it with the
command: <pre>$ sudo usermod -s /sbin/nologin <i>SYSACCT</i></pre>
</description>
<ocil clause="any system account (other than root) has a login shell">
To obtain a listing of all users, their UIDs, and their shells, run the
command: <pre>$ awk -F: '{print $1 ":" $3 ":" $7}' /etc/passwd</pre> Identify
the system accounts from this listing. These will primarily be the accounts
with UID numbers less than UID_MIN, other than root. Value of the UID_MIN
directive is set in /etc/login.defs configuration file. In the default
configuration UID_MIN is set to 1000.
</ocil>
<rationale>
Ensuring shells are not given to system accounts upon login makes it more
difficult for attackers to make use of system accounts.
</rationale>
<warning category="functionality">
Do not perform the steps in this section on the root account. Doing so might
cause the system to become inaccessible.
</warning>
<ident cce="26448-1" prodtype="rhel7" />
<oval id="no_shelllogin_for_systemaccounts" />
<ref cis="5.4.2" disa="" nist="AC-2" />
</Rule>

<Rule id="accounts_no_uid_except_zero" prodtype="rhel7,fedora" severity="high">
<title>Verify Only Root Has UID 0</title>
<description>
If any account other than root has a UID of 0, this misconfiguration should 
be investigated and the accounts other than root should be removed or 
have their UID changed.
<br />
If the account is associated with system commands or applications the UID should be changed
to one greater than "0" but less than "1000." Otherwise assign a UID greater than "1000" that
has not already been assigned.
</description>
<ocil clause="any account other than root has a UID of 0">
To list all password file entries for accounts with UID 0, run the following command:
<pre>$ awk -F: '($3 == "0") {print}' /etc/passwd</pre>
This should print only one line, for the user root.
<br />
If there is a finding, change the UID of the failing (non-root) user. If the account is
associated with the system commands or applications the UID should be changed to one 
greater than <tt>0</tt> but less than <tt>1000</tt>. Otherwise assign a UID of
greater than <tt>1000</tt> that has not already been assigned.
</ocil>
<rationale>
An account has root authority if it has a UID of 0. Multiple accounts
with a UID of 0 afford more opportunity for potential intruders to
guess a password for a privileged account. Proper configuration of
sudo is recommended to afford multiple system administrators
access to root privileges in an accountable manner.
</rationale>
<ident cce="27175-9" prodtype="rhel7" />
<oval id="accounts_no_uid_except_zero" />
<ref prodtype="rhel7" stigid="020310" />
<ref cis="6.2.5" cui="3.1.1,3.1.5" disa="366" nist="AC-6,IA-2(1),IA-4" srg="SRG-OS-000480-GPOS-00227" />
</Rule>

<Rule id="root_path_default" prodtype="rhel7,fedora">
<title>Root Path Must Be Vendor Default</title>
<description>
Assuming root shell is bash, edit the following files:
<pre>~/.profile</pre>
<pre>~/.bashrc</pre>
Change any <tt>PATH</tt> variables to the vendor default for root and remove any
empty <tt>PATH</tt> entries or references to relative paths.
</description>
<ocil clause="any of these conditions are not met">
To view the root user's <tt>PATH</tt>, run the following command:
<pre>$ sudo env | grep PATH</pre>
If correctly configured, the <tt>PATH</tt> must: use vendor default settings,
have no empty entries, and have no entries beginning with a character
other than a slash (/).
</ocil>
<rationale>
The root account's executable search path must be the vendor default, and must
contain only absolute paths.
</rationale>
<ref nist="SA-8" />
<ident cce="80210-8" prodtype="rhel7" />
</Rule>


</Group>