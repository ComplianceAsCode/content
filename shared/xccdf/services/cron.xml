<Group id="cron_and_at">
<title>Cron and At Daemons</title>
<description>The cron and at services are used to allow commands to
be executed at a later time. The cron service is required by almost
all systems to perform necessary maintenance tasks, while at may or
may not be required on a given system. Both daemons should be
configured defensively.</description>
<platform idref="cpe:/a:machine" />

<Rule id="service_crond_enabled" prodtype="rhel7,fedora" severity="medium">
<title>Enable cron Service</title>
<description>The <tt>crond</tt> service is used to execute commands at
preconfigured times. It is required by almost all systems to perform necessary
maintenance tasks, such as notifying root of system activity.
<systemd-service-macro enable="true" service="crond" />
</description>
<ocil><systemd-check-macro enable="true" service="crond" /></ocil>
<rationale>Due to its usage for maintenance and security-supporting tasks,
enabling the cron daemon is essential.
</rationale>
<ident cce="27323-5" prodtype="rhel7" />
<oval id="service_crond_enabled" />
<ref cis="5.1.1" hipaa="164.308(a)(4)(i),164.308(b)(1),164.308(b)(3),164.310(b),164.312(e)(1),164.312(e)(2)(ii)" nist="CM-7" />
</Rule>

<Rule id="disable_anacron" prodtype="rhel7,fedora">
<title>Disable anacron Service</title>
<description>The <tt>cronie-anacron</tt> package, which provides <tt>anacron</tt>
functionality, is installed by default. 
<yum-macro install="false" package="cronie-anacron" />
</description>
<ocil><package-check-macro package="cronie-anacron" /></ocil>
<rationale>
The <tt>anacron</tt> service provides <tt>cron</tt> functionality for systems
such as laptops and workstations that may be shut down during the normal times
that <tt>cron</tt> jobs are scheduled to run. On systems which do not require this
additional functionality, <tt>anacron</tt> could needlessly increase the possible
attack surface for an intruder.
</rationale>
<ref nist="CM-7" />
<ident cce="80344-5" prodtype="rhel7" />
</Rule>

<Rule id="service_atd_disabled" prodtype="rhel7,fedora">
<title>Disable At Service (atd)</title>
<description>The <tt>at</tt> and <tt>batch</tt> commands can be used to
schedule tasks that are meant to be executed only once. This allows delayed
execution in a manner similar to cron, except that it is not
recurring. The daemon <tt>atd</tt> keeps track of tasks scheduled via
<tt>at</tt> and <tt>batch</tt>, and executes them at the specified time.
<systemd-service-macro enable="false" service="atd" />
</description>
<ocil><systemd-check-macro enable="false" service="atd" /></ocil>
<rationale>
The <tt>atd</tt> service could be used by an unsophisticated insider to carry
out activities outside of a normal login session, which could complicate
accountability. Furthermore, the need to schedule tasks with <tt>at</tt> or
<tt>batch</tt> is not common.
</rationale>
<ident cce="80345-2" prodtype="rhel7" />
<oval id="service_atd_disabled" />
<ref disa="381" nist="CM-7" />
</Rule>

<Group id="restrict_at_cron_users">
<title>Restrict at and cron to Authorized Users if Necessary</title>
<description>
The <tt>/etc/cron.allow</tt> and <tt>/etc/at.allow</tt> files contain lists of
users who are allowed to use <tt>cron</tt> and at to delay execution of
processes. If these files exist and if the corresponding files
<tt>/etc/cron.deny</tt> and <tt>/etc/at.deny</tt> do not exist, then only users
listed in the relevant allow files can run the crontab and <tt>at</tt> commands
to submit jobs to be run at scheduled intervals. On many systems, only the
system administrator needs the ability to schedule jobs. Note that even if a
given user is not listed in <tt>cron.allow</tt>, cron jobs can still be run as
that user. The <tt>cron.allow</tt> file controls only administrative access
to the crontab command for scheduling and modifying cron jobs.
<br />
<br />
To restrict <tt>at</tt> and <tt>cron</tt> to only authorized users:
<ul>
<li>Remove the <tt>cron.deny</tt> file:<pre>$ sudo rm /etc/cron.deny</pre></li>
<li>Edit <tt>/etc/cron.allow</tt>, adding one line for each user allowed to use
the crontab command to create cron jobs.</li>
<li>Remove the <tt>at.deny</tt> file:<pre>$ sudo rm /etc/at.deny</pre></li>
<li>Edit <tt>/etc/at.allow</tt>, adding one line for each user allowed to use
the at command to create at jobs.</li>
</ul>
</description>

<Rule id="file_owner_cron_allow" prodtype="rhel7" severity="medium">
<title>Verify User Who Owns <tt>/etc/cron.allow</tt> file</title>
<description>
If <tt>/etc/cron.allow</tt> exists, it must be owned by <tt>root</tt>.
<fileowner-desc-macro file="/etc/cron.allow" owner="root" />
</description>
<ocil>
<fileowner-check-macro file="/etc/cron.allow" owner="root" />
</ocil>
<rationale>If the owner of the cron.allow file is not set to root, the possibility exists for an
unauthorized user to view or edit sensitive information.</rationale>
<ident cce="80378-3" prodtype="rhel7" />
<oval id="file_owner_cron_allow" />
<ref prodtype="rhel7" stigid="021110" />
<ref disa="366" nist="AC-6" srg="SRG-OS-000480-GPOS-00227" />
</Rule>

<Rule id="file_groupowner_cron_allow" prodtype="rhel7" severity="medium">
<title>Verify Group Who Owns <tt>/etc/cron.allow</tt> file</title>
<description>
If <tt>/etc/cron.allow</tt> exists, it must be group-owned by <tt>root</tt>.
<filegroupowner-desc-macro file="/etc/cron.allow" group="root" />
</description>
<ocil>
<filegroupowner-check-macro file="/etc/cron.allow" group="root" />
</ocil>
<rationale>If the owner of the cron.allow file is not set to root, the possibility exists for an
unauthorized user to view or edit sensitive information.</rationale>
<ident cce="80379-1" prodtype="rhel7" />
<oval id="file_groupowner_cron_allow" />
<ref prodtype="rhel7" stigid="021120" />
<ref disa="366" nist="AC-6" srg="SRG-OS-000480-GPOS-00227" />
</Rule>
</Group>

</Group>