#
# product-make.include
#
# The common Makefile snippets used by other Makefiles in various product subfolders
#
# The snippets assume that the following variables are set by each product:
#  * $(SHARED)
#
#

# Include project level information
include $(SHARED)/../VERSION

# Defaults for the global variables - directories
IN = input
OUT = output
BUILD = build
BUILD_REMEDIATIONS=$(BUILD)/remediations
TRANS = transforms
SHARED_OVAL = $(SHARED)/oval
SHARED_REMEDIATIONS = $(SHARED)/remediations/bash
REFS = $(SHARED)/references
CONF = $(SHARED)/../config
UTILS = utils
DIST = dist

# Defaults for the global variables - others
ID = ssg
INCLUDE_TEST_PROFILE = 0

# Query environment - ask openscap if it can do OVAL 5.11
OVAL_5_11 := $(shell oscap --version | grep -q "OVAL Version: 5.11.*"; echo $$?)

# Query environment - ask openscap if it can generate guide from DataStream
OPENSCAP_1_1_OR_LATER := $(shell oscap --version | grep -q -E "OpenSCAP command line tool \(oscap\) 1\.[1-9]+[0-9]*\."; echo $$?)

# Query environment - ask openscap if it has SVG support in guides
OPENSCAP_SVG := $(shell $(SHARED)/$(TRANS)/oscapsupportssvg.py; echo $$?)

# Common build targets - include the SSG logo into the XCCDF header
$(OUT)/guide.xml: $(SHARED)/$(TRANS)/includelogo.xslt $(IN)/guide.xml
ifeq ($(OPENSCAP_SVG), 0)
	xsltproc -o $(OUT)/guide.xml $(SHARED)/$(TRANS)/includelogo.xslt $(IN)/guide.xml
else
	cp $(IN)/guide.xml $(OUT)/
endif

# Common build targets - compose single shorthand XCCDF guide from all the sources
guide_xslt_deps= $(wildcard $(IN)/auxiliary/*.xml) $(wildcard $(IN)/profiles/*.xml) $(wildcard $(IN)/xccdf/**/*.xml)
$(OUT)/shorthand.xml: $(OUT)/guide.xml $(IN)/guide.xslt $(guide_xslt_deps)
	xsltproc --param withtest "$(INCLUDE_TEST_PROFILE)" -o $@ $(IN)/guide.xslt $(OUT)/guide.xml
	xmllint --format --output $@ $@

# Common build targets - convert shorthand format to an XCCDF stub
$(OUT)/xccdf-unlinked-unresolved.xml: $(OUT)/shorthand.xml $(TRANS)/shorthand2xccdf.xslt $(TRANS)/constants.xslt $(SHARED)/$(TRANS)/shared_constants.xslt
	xsltproc --stringparam ssg_version "$(SSG_MAJOR_VERSION).$(SSG_MINOR_VERSION)" -o $@ $(TRANS)/shorthand2xccdf.xslt $<

# Common build targets - improve the XCCDF stub - first resolve
$(OUT)/xccdf-unlinked-empty-groups.xml: $(OUT)/xccdf-unlinked-unresolved.xml
	oscap xccdf resolve -o $@ $<

# Common build targets - improve the XCCDF stub - second resolve
$(OUT)/xccdf-unlinked-empty-groups-unselected.xml: $(OUT)/xccdf-unlinked-empty-groups.xml $(SHARED)/$(UTILS)/unselect-empty-xccdf-groups.py
	$(SHARED)/$(UTILS)/unselect-empty-xccdf-groups.py --input $< --output $@

# Common build targets - improve the XCCDF stub - third resolve
$(OUT)/xccdf-unlinked-resolved.xml: $(OUT)/xccdf-unlinked-empty-groups-unselected.xml
	oscap xccdf resolve -o $@ $<

# Common build targets - create OCIL questionnaire stub for further processing
$(OUT)/ocil-unlinked.xml: $(OUT)/xccdf-unlinked-resolved.xml $(TRANS)/xccdf-create-ocil.xslt
	xsltproc -o $@ $(TRANS)/xccdf-create-ocil.xslt $<
	xmllint --format --output $@ $@

# Common build targets - an XCCDF that refers to OCIL document
$(OUT)/xccdf-unlinked-ocilrefs.xml: $(OUT)/xccdf-unlinked-resolved.xml $(OUT)/ocil-unlinked.xml $(SHARED)/$(TRANS)/xccdf-ocilcheck2ref.xslt $(SHARED)/$(TRANS)/shared_constants.xslt
	xsltproc -o $@ $(SHARED)/$(TRANS)/xccdf-ocilcheck2ref.xslt $<
