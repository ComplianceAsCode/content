# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = true
# strategy = restrict
# complexity = low
# disruption = low

#
# What architecture are we on?
#
- name: Set architecture for audit {{{ SYSCALL | join(", ") }}} tasks
  set_fact:
    audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

- name: Perform remediation of Audit rules for {{{ SYSCALL | join(", ") }}} for x86 platform
  block:
    {{{ ansible_audit_augenrules_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b32",
      other_filters="-F "~POS~"&03 -F path="~PATH,
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=SYSCALL,
      key="modify",
      syscall_grouping=SYSCALL_GROUPING,
      )|indent(4) }}}
    {{{ ansible_audit_auditctl_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b32",
      other_filters="-F "~POS~"&03 -F path="~PATH,
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=SYSCALL,
      key="modify",
      syscall_grouping=SYSCALL_GROUPING,
      )|indent(4) }}}

- name: Perform remediation of Audit rules for {{{ SYSCALL | join(", ") }}} for x86_64 platform
  block:
    {{{ ansible_audit_augenrules_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b64",
      other_filters="-F "~POS~"&03 -F path="~PATH,
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=SYSCALL,
      key="modify",
      syscall_grouping=SYSCALL_GROUPING,
      )|indent(4) }}}
    {{{ ansible_audit_auditctl_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b64",
      other_filters="-F "~POS~"&03 -F path="~PATH,
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=SYSCALL,
      key="modify",
      syscall_grouping=SYSCALL_GROUPING,
      )|indent(4) }}}
  when: audit_arch == "b64"
