# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low

{{%- if RECURSIVE %}}
{{%- set FIND_RECURSE_ARGS_DEP="" %}}
{{%- set FIND_RECURSE_ARGS_SYM="" %}}
{{%- else %}}
{{%- set FIND_RECURSE_ARGS_DEP="-maxdepth 1" %}}
{{%- set FIND_RECURSE_ARGS_SYM="-L" %}}
{{%- endif %}}

{{%- set ns=namespace(find_users="") %}}
{{%- if OWNER_REPRESENTED_WITH_UID %}}
{{%- set ns.find_users=ns.find_users ~ " ! -user " ~ UID_OR_NAME %}}
- name: Set the {{{ _RULE_ID }}}_newown variable if represented by uid
  set_fact:
    {{{ _RULE_ID }}}_newown: "{{{ UID_OR_NAME }}}"
{{%- else %}}
{{%- set OWNERS=UID_OR_NAME.split("|") %}}
{{%- for own in OWNERS %}}
{{%- set ns.find_users=ns.find_users ~ " ! -user " ~ own %}}
{{%- if loop.first %}}
- name: Check that the {{{ own }}} user is defined
  getent:
    database: passwd
    key: {{{ own }}}
  ignore_errors: yes
{{%- else %}}
- name: Check that the {{{ own }}} user is defined
  getent:
    database: passwd
    key: {{{ own }}}
  ignore_errors: yes
  when: {{{ _RULE_ID }}}_newown is undefined
{{%- endif %}}
- name: Set the {{{ _RULE_ID }}}_newown variable if {{{ own }}} found
  set_fact: 
    {{{ _RULE_ID }}}_newown: "{{{ own }}}"
  when: ansible_facts.getent_passwd["{{{ own }}}"] is defined
{{%- endfor %}}
{{%- endif %}}

{{%- for path in FILEPATH %}}
{{%- if IS_DIRECTORY %}}
{{%- if FILE_REGEX %}}

- name: Find {{{ path }}} file(s) matching {{{ FILE_REGEX[loop.index0] }}}{{% if RECURSIVE %}} recursively{{% endif %}}
  command: 'find {{{ FIND_RECURSE_ARGS_SYM }}} {{{ path }}} {{{ FIND_RECURSE_ARGS_DEP }}} -type f {{{ ns.find_users }}} -regextype posix-extended -regex "{{{ FILE_REGEX[loop.index0] }}}"'
  register: files_found
  changed_when: False
  failed_when: False
  check_mode: no

- name: Ensure owner on {{{ path }}} file(s) matching {{{ FILE_REGEX[loop.index0] }}}
  file:
    path: "{{ item }}"
    owner: "{{ {{{ _RULE_ID }}}_newown }}"
    state: file
  with_items:
    - "{{ files_found.stdout_lines }}"

{{% else %}}

- name: Ensure owner on directory {{{ path }}}{{% if RECURSIVE %}} recursively{{% endif %}}
  file:
    path: "{{{ path }}}"
    state: directory
{{% if RECURSIVE %}}
    recurse: yes
{{% endif %}}
    owner: "{{ {{{ _RULE_ID }}}_newown }}"

{{% endif %}}
{{% else %}}

- name: Test for existence {{{ path }}}
  stat:
    path: "{{{ path }}}"
  register: file_exists

- name: Ensure owner on {{{ path }}}
  file:
    path: "{{{ path }}}"
    owner: "{{ {{{ _RULE_ID }}}_newown }}"
  when: file_exists.stat is defined and file_exists.stat.exists

{{% endif %}}
{{% endfor %}}
