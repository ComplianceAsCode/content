# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low

{{%- set ns=namespace(find_groups="") %}}
{{%- set GROUPS=GID_OR_NAME.split("|") %}}
{{%- for grp in GROUPS %}}
{{%- set ns.find_groups=ns.find_groups ~ " ! -group " ~ grp %}}
{{%- if loop.first %}}
if getent group "{{{grp}}}" >/dev/null 2>&1; then
  newgroup="{{{grp}}}"
{{%- else %}}
elif getent group "{{{grp}}}" >/dev/null 2>&1; then
  newgroup="{{{grp}}}"
{{%- endif %}}
{{%- if loop.last %}}
fi
{{%- endif %}}
{{%- endfor %}}
if [[ -z ${newgroup} ]]; then
  echo "{{{ GID_OR_NAME|replace("|", " and ") }}} is not a defined group on the system"
  exit 1
fi

{{%- if RECURSIVE %}}
{{%- set FIND_RECURSE_ARGS_DEP="" %}}
{{%- set FIND_RECURSE_ARGS_SYM="" %}}
{{%- else %}}
{{%- set FIND_RECURSE_ARGS_DEP="-maxdepth 1" %}}
{{%- set FIND_RECURSE_ARGS_SYM="-L" %}}
{{%- endif %}}

{{%- for path in FILEPATH %}}
{{%- if IS_DIRECTORY %}}
{{%- if FILE_REGEX %}}

find {{{ FIND_RECURSE_ARGS_SYM }}} {{{ path }}} {{{ FIND_RECURSE_ARGS_DEP }}} -type f {{{ ns.find_groups }}} -regextype posix-extended -regex '{{{ FILE_REGEX[loop.index0] }}}' -exec chgrp -L $newgroup {} \;
{{%- else %}}
find -H {{{ path }}} {{{ FIND_RECURSE_ARGS_DEP }}} -type d {{{ ns.find_groups }}} -exec chgrp -L $newgroup {} \;
{{%- endif %}}
{{%- else %}}
chgrp $newgroup {{{ path }}}
{{%- endif %}}
{{%- endfor %}}
