# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
# reboot = true
# strategy = restrict
# complexity = medium
# disruption = low

{{% if ARG_VARIABLE %}}
{{{ ansible_instantiate_variables(ARG_VARIABLE) }}}
{{% set ARG_NAME_VALUE = ARG_NAME ~ "={{ " ~ ARG_VARIABLE ~ " }}" %}}
{{% endif %}}

{{% if 'ubuntu' in product or product in ['rhel7', 'ol7', 'sle12', 'sle15'] %}}
- name: Check {{{ ARG_NAME }}} argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*{{{ ARG_NAME }}}=' /etc/default/grub
  failed_when: False
  register: argcheck

- name: Replace existing {{{ ARG_NAME }}} argument
  replace:
      path: /etc/default/grub
      regexp: '{{{ ARG_NAME }}}=\w+'
      replace: '{{{ ARG_NAME_VALUE }}}'
  when: argcheck.rc == 0

- name: Add {{{ ARG_NAME }}} argument
  replace:
      path: /etc/default/grub
      regexp: '(GRUB_CMDLINE_LINUX=.*)"'
      replace: '\1 {{{ ARG_NAME_VALUE }}}"'
  when: argcheck.rc != 0
{{% endif -%}}

{{% if product in ['sle12', 'sle15'] %}}
- name: Update grub defaults and the bootloader menu
  command: /usr/sbin/grub2-mkconfig -o {{{ grub2_boot_path }}}/grub.cfg
{{% else %}}
- name: Update grub defaults and the bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="{{{ ARG_NAME_VALUE }}}"
{{% endif -%}}
