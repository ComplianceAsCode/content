# platform = multi_platform_rhel,multi_platform_fedora
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: set auth pam_faillock before pam_unix.so
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        deny=(ansible-populate var_accounts_passwords_pam_faillock_deny)
        unlock_time=(ansible-populate var_accounts_passwords_pam_faillock_unlock_time)
        fail_interval=(ansible-populate var_accounts_passwords_pam_faillock_fail_interval)'
    state: before
  tags:
    @ANSIBLE_TAGS@

- name: set auth pam_faillock after pam_unix.so
  pamd:
    name: system-auth
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        deny=(ansible-populate var_accounts_passwords_pam_faillock_deny)
        unlock_time=(ansible-populate var_accounts_passwords_pam_faillock_unlock_time)
        fail_interval=(ansible-populate var_accounts_passwords_pam_faillock_fail_interval)'
    state: after
  tags:
    @ANSIBLE_TAGS@

- name: set account pam_faillock before pam_unix.so
  pamd:
    name: system-auth
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  tags:
    @ANSIBLE_TAGS@