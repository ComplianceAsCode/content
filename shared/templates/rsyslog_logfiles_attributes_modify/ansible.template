# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium

- name: '{{{ rule_title }}} - Set rsyslog logfile configuration facts'
  ansible.builtin.set_fact:
    rsyslog_etc_config: "/etc/rsyslog.conf"

# * And also the log file paths listed after rsyslog's $IncludeConfig directive
#   (store the result into array for the case there's shell glob used as value of IncludeConfig)
- name: '{{{ rule_title }}} - Get IncludeConfig directive'
  ansible.builtin.shell: |
    set -o pipefail
    grep -e '$IncludeConfig' {{ rsyslog_etc_config }} | cut -d ' ' -f 2 || true
  register: rsyslog_old_inc
  changed_when: False

- name: '{{{ rule_title }}} - Get include files directives'
  ansible.builtin.shell: |
    set -o pipefail
    awk '/)/{f=0} /include\(/{f=1} f{nf=gensub("^(include\\(|\\s*)file=\"(\\S+)\".*","\\2",1); if($0!=nf){print nf}}' {{ rsyslog_etc_config }} || true
  register: rsyslog_new_inc
  changed_when: False

- name: '{{{ rule_title }}} - Aggregate rsyslog includes'
  ansible.builtin.set_fact:
    include_config_output: "{{ rsyslog_old_inc.stdout_lines + rsyslog_new_inc.stdout_lines }}"

- name: '{{{ rule_title }}} - List all config files'
  ansible.builtin.find:
    paths: "{{ item | dirname }}"
    patterns: "{{ item | basename }}"
    hidden: no
    follow: yes
  loop: "{{ include_config_output | list + [rsyslog_etc_config] }}"
  register: rsyslog_config_files
  failed_when: False
  changed_when: False


- name: '{{{ rule_title }}} - Extract log files old format'
  ansible.builtin.shell: |
    set -o pipefail
    grep -oP '^[^(\s|#|\$)]+[\s]+.*[\s]+-?(/+[^:;\s]+);*\.*$' {{ item.1.path }}  |awk '{print $NF}'|sed -e 's/^-//' || true
  loop: "{{ rsyslog_config_files.results | subelements('files') }}"
  register: log_files_old
  changed_when: False

- name: '{{{ rule_title }}} - Extract log files new format'
  ansible.builtin.shell: |
    set -o pipefail
    grep -ozP "action\s*\(\s*type\s*=\s*\"omfile\"[^\)]*\)" {{ item.1.path }} | grep -aoP "File\s*=\s*\"([/[:alnum:][:punct:]]*)\"\s*\)"|grep -oE "\"([/[:alnum:][:punct:]]*)\"" |tr -d "\""|| true
  loop: "{{ rsyslog_config_files.results | subelements('files') }}"
  register: log_files_new
  changed_when: False

- name: '{{{ rule_title }}} - Sum all log files found'
  ansible.builtin.set_fact:
    log_files: "{{ log_files_new.results|map(attribute='stdout_lines')|list|flatten|unique + log_files_old.results|map(attribute='stdout_lines')|list|flatten|unique  }}"

- name: '{{{ rule_title }}} -Setup log files attribute'
  ansible.builtin.file:
    path: "{{ item }}"
    {{{ 'owner: ' ~ VALUE if ATTRIBUTE == "owner" }}}
    {{{- 'group: ' ~ VALUE if ATTRIBUTE == "groupowner" }}}
    {{{- 'mode: ' ~ VALUE if ATTRIBUTE == "permissions" }}}
    state: file
  loop: "{{ log_files | list | flatten | unique }}"
  failed_when: false
