documentation_complete: true

prodtype: rhel7,rhel8

title: 'Authenticate Zone Transfers'

description: |-
    If it is necessary for a secondary nameserver to receive zone data
    via zone transfer from the primary server, follow the instructions here.  Use
    dnssec-keygen to create a symmetric key file in the current directory:
    <pre>$ cd /tmp
    $ sudo dnssec-keygen -a HMAC-MD5 -b 128 -n HOST dns.example.com
    Kdns.example.com .+aaa +iiiii</pre>
    This output is the name of a file containing the new key. Read the file to find
    the base64-encoded key string:
    <pre>$ sudo cat Kdns.example.com .+NNN +MMMMM .key
    dns.example.com IN KEY 512 3 157 base64-key-string</pre>
    Add the directives to <tt>/etc/named.conf</tt> on the primary server:
    <pre>key zone-transfer-key {
      algorithm hmac-md5;
      secret "base64-key-string ";
    };
    zone "example.com " IN {
      type master;
      allow-transfer { key zone-transfer-key; };
      ...
    };</pre>
    Add the directives below to <tt>/etc/named.conf</tt> on the secondary nameserver:
    <pre>key zone-transfer-key {
      algorithm hmac-md5;
      secret "base64-key-string ";
    };

    server IP-OF-MASTER {
      keys { zone-transfer-key; };
    };

    zone "example.com " IN {
      type slave;
      masters { IP-OF-MASTER ; };
      ...
    };</pre>

rationale: |-
    The BIND transaction signature (TSIG) functionality allows primary
    and secondary nameservers to use a shared secret to verify authorization to
    perform zone transfers. This method is more secure than using IP-based limiting
    to restrict nameserver access, since IP addresses can be easily spoofed.
    However, if you cannot configure TSIG between your servers because, for
    instance, the secondary nameserver is not under your control and its
    administrators are unwilling to configure TSIG, you can configure an
    allow-transfer directive with numerical IP addresses or ACLs as a last resort.

severity: medium

identifiers:
    cce@rhel7: CCE-80328-8
    cce@rhel8: CCE-82410-2

references:
    cis-csc: 11,14,3,9
    cobit5: BAI10.01,BAI10.02,BAI10.03,BAI10.05,DSS05.02,DSS05.05,DSS06.06
    isa-62443-2009: 4.3.3.5.1,4.3.3.5.2,4.3.3.5.3,4.3.3.5.4,4.3.3.5.5,4.3.3.5.6,4.3.3.5.7,4.3.3.5.8,4.3.3.6.1,4.3.3.6.2,4.3.3.6.3,4.3.3.6.4,4.3.3.6.5,4.3.3.6.6,4.3.3.6.7,4.3.3.6.8,4.3.3.6.9,4.3.3.7.1,4.3.3.7.2,4.3.3.7.3,4.3.3.7.4,4.3.4.3.2,4.3.4.3.3
    isa-62443-2013: 'SR 1.1,SR 1.10,SR 1.11,SR 1.12,SR 1.13,SR 1.2,SR 1.3,SR 1.4,SR 1.5,SR 1.6,SR 1.7,SR 1.8,SR 1.9,SR 2.1,SR 2.2,SR 2.3,SR 2.4,SR 2.5,SR 2.6,SR 2.7,SR 7.6'
    iso27001-2013: A.12.1.2,A.12.5.1,A.12.6.2,A.14.2.2,A.14.2.3,A.14.2.4,A.9.1.2
    nist: CM-7(a),CM-7(b),CM-6(a)
    nist-csf: PR.IP-1,PR.PT-3

warnings:
    - general: |-
        The purpose of the dnssec-keygen command is to
        create the shared secret string base64-key-string. Once this secret has been
        obtained and inserted into named.conf on the primary and secondary servers, the
        key files Kdns.example.com .+NNN +MMMMM .key and Kdns.example.com .+NNN +MMMMM
        .private are no longer needed, and may safely be deleted.
