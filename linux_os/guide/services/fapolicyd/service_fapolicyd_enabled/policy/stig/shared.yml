srg_requirement: |-
    The {{{ full_name }}} fapolicy module must be enabled.

vuldiscussion: |-
    The organization must identify authorized software programs and permit execution of authorized software. The process used to identify software programs that are authorized to execute on organizational information systems is commonly referred to as whitelisting.

    Utilizing a whitelist provides a configuration management method for allowing the execution of only authorized software. Using only authorized software decreases risk by limiting the number of potential vulnerabilities. Verification of whitelisted software occurs prior to execution or at system startup.

    User home directories/folders may contain information of a sensitive nature. Non-privileged users should coordinate any sharing of information with an SA through shared resources.

    {{{ full_name }}} ships with many optional packages. One such package is a file access policy daemon called "fapolicyd". "fapolicyd" is a userspace daemon that determines access rights to files based on attributes of the process and file. It can be used to either blacklist or whitelist processes or file access.

    Proceed with caution with enforcing the use of this daemon. Improper configuration may render the system non-functional. The "fapolicyd" API is not namespace aware and can cause issues when launching or running containers.

checktext: |-
    Verify that {{{ full_name }}} fapolicyd is active with the following command:

    $ systemctl is-active fapolicyd

    active

    If fapolicyd module is not active, this is a finding.

fixtext: |-
    Enable the fapolicyd with the following command:

    $ systemctl enable --now fapolicyd
