<def-group>
  <definition class="compliance" id="configure_fapolicyd_mounts" version="1">
    <metadata>
      <title>Check that fapolicyd is configured to watch all system mountpoints</title>
      <affected family="unix">
        <platform>multi_platform_fedora</platform>
        <platform>Red Hat Enterprise Linux 8</platform>
        <platform>Oracle Linux 8</platform>
      </affected>
      <description>Check that all system mountpoint are listed in fapolicyd.mounts</description>
    </metadata>
    <criteria comment="Check that fapolicyd is configured to watch all system mountpoints" operator="AND">
      <criterion comment="The fapolicyd.mounts file exists" test_ref="test_configure_fapolicyd_mounts_exists" />
      <criterion comment="Check that all system mountpoint are listed in fapolicyd.mounts" test_ref="test_configure_fapolicyd_mounts" />
    </criteria>
  </definition>

  <unix:file_object id="obj_configure_fapolicyd_mounts_exists" version="1" comment="fapolicyd.mounts">
    <unix:filepath operation="equals">/etc/fapolicyd/fapolicyd.mounts</unix:filepath>
  </unix:file_object>
  <unix:file_test id="test_configure_fapolicyd_mounts_exists" check="at least one" version="1"
    comment="Ensure the fapolicyd.mounts file exists">
    <unix:object object_ref="obj_configure_fapolicyd_mounts_exists"/>
  </unix:file_test>

  <ind:textfilecontent54_object id="obj_configure_fapolicyd_mounts" version="1">
    <ind:filepath>/etc/fapolicyd/fapolicyd.mounts</ind:filepath>
    <ind:pattern operation="pattern match">^\s*([^#\s]+|)</ind:pattern>
    <ind:instance datatype="int" operation="greater than or equal">0</ind:instance>
  </ind:textfilecontent54_object>
  <local_variable id="var_configure_fapolicyd_mounts" version="1" datatype="string"
    comment="collect configured mountpoints">
    <object_component item_field="subexpression" object_ref="obj_configure_fapolicyd_mounts"/>
  </local_variable>

  <linux:partition_state id="state_configure_fapolicyd_mounts_types" version="1">
    <linux:fs_type operation="pattern match">^(tmpfs|ext4|ext3|xfs)$</linux:fs_type>
  </linux:partition_state>
  <linux:partition_object id="obj_configure_fapolicyd_active_mounts" version="1">
    <linux:mount_point operation="pattern match">^(?!/sys|/run$).*</linux:mount_point>
    <filter action="include">state_configure_fapolicyd_mounts_types</filter>
  </linux:partition_object>
  <local_variable id="var_configure_fapolicyd_active_mounts" version="1" datatype="string"
    comment="construct local_variable">
    <object_component item_field="mount_point" object_ref="obj_configure_fapolicyd_active_mounts"/>
  </local_variable>
  <!-- Construct OVAL object from this local variable so we can use it in variable test -->
  <ind:variable_object id="obj_var_configure_fapolicyd_active_mounts" version="1">
    <ind:var_ref>var_configure_fapolicyd_active_mounts</ind:var_ref>
  </ind:variable_object>

  <ind:variable_test id="test_configure_fapolicyd_mounts"
    check_existence="all_exist" check="at least one" version="1"
    comment="check that all partitions are listed in fapolicyd.mounts">
    <ind:object object_ref="obj_var_configure_fapolicyd_active_mounts" />
    <ind:state state_ref="state_configure_fapolicyd_active_mounts" />
  </ind:variable_test>

  <ind:variable_state id="state_configure_fapolicyd_active_mounts" version="1"
    comment="match partition against set of configured mountpoints">
    <ind:value datatype="string" operation="equals" var_check="at least one"
      var_ref="var_configure_fapolicyd_mounts" />
  </ind:variable_state>

</def-group>
