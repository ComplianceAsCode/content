<def-group>
  <definition class="compliance" id="sshd_use_approved_macs" version="1">
    <metadata>
      <title>Use Only FIPS MACs</title>
      <affected family="unix">
        <platform>multi_platform_wrlinux</platform>
        <platform>Red Hat Enterprise Linux 6</platform>
        <platform>Red Hat Enterprise Linux 7</platform>
        <platform>multi_platform_rhv</platform>
        <platform>multi_platform_sle12</platform>
        <platform>Oracle Linux 7</platform>
      </affected>
      <description>Limit the Message Authentication Codes (MACs) to those which are FIPS-approved.</description>
    </metadata>
    <criteria operator="AND">
      <extend_definition comment="Installed OS is FIPS certified" definition_ref="installed_OS_is_FIPS_certified" />
      <criteria comment="SSH is configured correctly or is not installed"
      operator="OR">
        <criteria comment="sshd is not installed" operator="AND">
          <extend_definition comment="sshd is not required or requirement is unset"
          definition_ref="sshd_not_required_or_unset" />
          {{% if product in ['opensuse', 'sle11', 'sle12'] %}}
          <extend_definition comment="rpm package openssh removed"
          definition_ref="package_openssh_removed" />
          {{% else %}}
          <extend_definition comment="rpm package openssh-server removed"
          definition_ref="package_openssh-server_removed" />
          {{% endif %}}
        </criteria>
        <criteria comment="sshd is installed and configured" operator="AND">
          <extend_definition comment="sshd is required or requirement is unset"
          definition_ref="sshd_required_or_unset" />
          {{% if product in ['opensuse', 'sle11', 'sle12'] %}}
          <extend_definition comment="rpm package openssh installed"
          definition_ref="package_openssh_installed" />
          {{% else %}}
          <extend_definition comment="rpm package openssh-server installed"
          definition_ref="package_openssh-server_installed" />
          {{% endif %}}
          <criterion comment="Check MACs in /etc/ssh/sshd_config"
          test_ref="test_sshd_use_approved_macs" />
        </criteria>
      </criteria>
    </criteria>
  </definition>

  <ind:variable_test check="at least one"
  comment="tests the value of MACs setting in the /etc/ssh/sshd_config file"
  id="test_sshd_use_approved_macs" version="1">
    <ind:object object_ref="obj_sshd_use_approved_macs" />
    <ind:state state_ref="ste_sshd_use_approved_macs" />
  </ind:variable_test>

  <ind:variable_object id="obj_sshd_use_approved_macs" version="1">
    <ind:var_ref>var_sshd_config_macs</ind:var_ref>
  </ind:variable_object>

  <ind:variable_state comment="approved macs" id="ste_sshd_use_approved_macs" version="1">
    <ind:value operation="equals" datatype="string" var_ref="var_sshd_approved_macs" var_check="at least one" />
  </ind:variable_state>

  <ind:textfilecontent54_object id="obj_sshd_config_macs" version="1">
    <ind:filepath>/etc/ssh/sshd_config</ind:filepath>
    <ind:pattern operation="pattern match">^[\s]*(?i)MACs(?-i)[\s]+([\w,-@]+)+[\s]*(?:#.*)?$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  <local_variable id="var_sshd_config_macs" datatype="string" version="1" comment="MACs values splitted on comma">
    <split delimiter=",">
      <object_component item_field="subexpression" object_ref="obj_sshd_config_macs" />
    </split>
  </local_variable>

  <local_variable id="var_sshd_approved_macs" datatype="string" version="1" comment="approved MACs values splitted on comma">
    <split delimiter=",">
      <variable_component var_ref="sshd_approved_macs" />
    </split>
  </local_variable>

  <external_variable comment="SSH Approved MACs by FIPS" datatype="string" id="sshd_approved_macs" version="1" />

</def-group>
