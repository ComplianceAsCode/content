# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_almalinux
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

# What architecture are we on?

- name: "{{{ rule_title }}} - Set architecture for audit tasks"
  set_fact:
    audit_arch: "b64"
  when:
  - ansible_architecture == "aarch64" or
    ansible_architecture == "ppc64" or
    ansible_architecture == "ppc64le" or
    ansible_architecture == "s390x" or
    ansible_architecture == "x86_64"

- name: "{{{ rule_title }}} - Perform remediation of Audit rules for /var/log/audit"
  block:
    {{{ ansible_audit_augenrules_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b32",
      other_filters="-F dir=/var/log/audit/ -F perm=r",
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=[],
      key="access-audit-trail",
      syscall_grouping=[],
      )|indent(4) }}}
    {{{ ansible_audit_auditctl_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b32",
      other_filters="-F dir=/var/log/audit/ -F perm=r",
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=[],
      key="access-audit-trail",
      syscall_grouping=[],
      )|indent(4) }}}

- name: "{{{ rule_title }}} - Perform remediation of Audit rules for /var/log/audit for x86_64 platform"
  block:
    {{{ ansible_audit_augenrules_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b64",
      other_filters="-F dir=/var/log/audit/ -F perm=r",
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=[],
      key="access-audit-trail",
      syscall_grouping=[],
      )|indent(4) }}}
    {{{ ansible_audit_auditctl_add_syscall_rule(
      action_arch_filters="-a always,exit -F arch=b64",
      other_filters="-F dir=/var/log/audit/ -F perm=r",
      auid_filters="-F auid>="~auid~" -F auid!=unset",
      syscalls=[],
      key="access-audit-trail",
      syscall_grouping=[],
      )|indent(4) }}}
  when: audit_arch == "b64"
