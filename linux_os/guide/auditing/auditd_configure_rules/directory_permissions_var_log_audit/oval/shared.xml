<def-group>
  <definition class="compliance" id="directory_permissions_var_log_audit" version="1">
    {{{ oval_metadata("Checks for correct permissions for audit logs.") }}}
    <criteria operator="OR">
      {{% if product not in ["ol8", "rhel8"] %}}
      <criteria operator="AND" comment="log_file set">
        <extend_definition comment="log_file set in auditd.conf" definition_ref="auditd_conf_log_file_not_set" negate="true" />
        <criteria operator="AND" comment="log_group in auditd.conf is not root">
          <extend_definition comment="log_group in auditd.conf is not root"
          definition_ref="auditd_conf_log_group_not_root" />
          <criterion test_ref="test_dir_permissions_audit_log-non_root" negate="true" />
        </criteria>
        <criterion test_ref="test_dir_permissions_audit_log" negate="true" />
      </criteria>
      <criterion test_ref="test_dir_permissions_var_log_audit" negate="true" />
      <criteria operator="AND" comment="log_group in auditd.conf is not root">
        <extend_definition comment="log_group in auditd.conf is not root"
        definition_ref="auditd_conf_log_group_not_root" />
        <criterion test_ref="test_dir_permissions_var_log_audit-non_root" negate="true" /> 
      </criteria>
      {{% else %}}
      <criteria operator="AND" comment="log_file set">
        <extend_definition comment="log_file set in auditd.conf" definition_ref="auditd_conf_log_file_not_set" negate="true" />
        <criterion test_ref="test_dir_permissions_audit_log" negate="true" />
      </criteria>
      <criteria operator="AND" comment="log_file not set">
        <extend_definition comment="log_file not set in auditd.conf" definition_ref="auditd_conf_log_file_not_set" />
        <criterion test_ref="test_dir_permissions_var_log_audit" negate="true" />
      </criteria>
      {{% endif %}}
    </criteria>
  </definition>

  <local_variable id="audit_log_dir" datatype="string" version="1" comment="path to audit log directory">
    <regex_capture pattern="^(.*)\/([^\/]+$)">
      <variable_component var_ref="audit_log_file_path" />
    </regex_capture>
  </local_variable>

  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit mode 0700" id="test_dir_permissions_audit_log" version="1">
    <unix:object object_ref="object_audit_log_directory" />
    <unix:state state_ref="state_not_mode_0700" />
  </unix:file_test>
  <unix:file_object comment="audit log files" id="object_audit_log_directory" version="1">
    {{% if product not in ["ol8", "rhel8"] %}}
    <unix:behaviors recurse="directories" recurse_direction="down" max_depth="-1" recurse_file_system="local" />
    {{% endif %}}
    <unix:path operation="equals" var_ref="audit_log_dir" />
    <unix:filename xsi:nil="true" />
    <filter action="include">state_not_mode_0700</filter>
  </unix:file_object>

  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit mode 0700" id="test_dir_permissions_var_log_audit" version="1">
    <unix:object object_ref="object_var_log_audit_directory" />
    <unix:state state_ref="state_not_mode_0700" />
  </unix:file_test>
  <unix:file_object comment="/var/log/audit files" id="object_var_log_audit_directory" version="1">
    {{% if product not in ["ol8", "rhel8"] %}}
    <unix:behaviors recurse="directories" recurse_direction="down" max_depth="-1" recurse_file_system="local" />
    {{% endif %}}
    <unix:path operation="equals">/var/log/audit</unix:path>
    <unix:filename xsi:nil="true" />
    <filter action="include">state_not_mode_0700</filter>
  </unix:file_object>

  {{% if product not in ["ol8", "rhel8"] %}}
  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit files mode 0750" id="test_dir_permissions_var_log_audit-non_root" version="1">
    <unix:object object_ref="object_var_log_audit_directory-non_root" />
    <unix:state state_ref="state_not_mode_0750" />
  </unix:file_test>
  <unix:file_object comment="/var/log/audit files" id="object_var_log_audit_directory-non_root" version="1">
    <unix:behaviors recurse="directories" recurse_direction="down" max_depth="-1" recurse_file_system="local" />
    <unix:path operation="equals">/var/log/audit</unix:path>
    <unix:filename xsi:nil="true" />
    <filter action="include">state_not_mode_0750</filter>
  </unix:file_object>

  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit files mode 0750" id="test_dir_permissions_audit_log-non_root" version="1">
    <unix:object object_ref="object_audit_log_directory-non_root" />
    <unix:state state_ref="state_not_mode_0750" />
  </unix:file_test>
  <unix:file_object comment="audit log files" id="object_audit_log_directory-non_root" version="1">
    <unix:behaviors recurse="directories" recurse_direction="down" max_depth="-1" recurse_file_system="local" />
    <unix:path operation="equals" var_ref="audit_log_dir" />
    <unix:filename xsi:nil="true" />
    <filter action="include">state_not_mode_0750</filter>
  </unix:file_object>

  <unix:file_state id="state_not_mode_0750" version="1" operator="OR">
    <!-- if any one of these is true then mode is NOT 0750 (hence the OR operator) -->
    <unix:suid datatype="boolean">true</unix:suid>
    <unix:sgid datatype="boolean">true</unix:sgid>
    <unix:sticky datatype="boolean">true</unix:sticky>
    <unix:gwrite datatype="boolean">true</unix:gwrite>
    <unix:oread datatype="boolean">true</unix:oread>
    <unix:owrite datatype="boolean">true</unix:owrite>
    <unix:oexec datatype="boolean">true</unix:oexec>
  </unix:file_state>
  {{% endif %}}

  <unix:file_state id="state_not_mode_0700" version="1" operator="OR">
    <!-- if any one of these is true then mode is NOT 0700 (hence the OR operator) -->
    <unix:suid datatype="boolean">true</unix:suid>
    <unix:sgid datatype="boolean">true</unix:sgid>
    <unix:sticky datatype="boolean">true</unix:sticky>
    <unix:gread datatype="boolean">true</unix:gread>
    <unix:gwrite datatype="boolean">true</unix:gwrite>
    <unix:gexec datatype="boolean">true</unix:gexec>
    <unix:oread datatype="boolean">true</unix:oread>
    <unix:owrite datatype="boolean">true</unix:owrite>
    <unix:oexec datatype="boolean">true</unix:oexec>
  </unix:file_state>

</def-group>
