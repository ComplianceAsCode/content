# platform = multi_platform_rhel
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

{{% set rx_beg = "^[\s]*-a[\s]+always,exit[\s]+" %}}
{{% set rx_b32 = "-F[\s]+arch=b32[\s]+" %}}
{{% set rx_b64 = "-F[\s]+arch=b64[\s]+" %}}

{{% set rx_uid = "-C[\s]+euid!=uid[\s]+-F[\s]+auid!=unset[\s]+-S[\s]+execve[\s]+" %}}

{{% set rx_end = "(?:-k[\s]+|-F[\s]+key=)[\S]+[\s]*$" %}}

- name: Service facts
  ansible.builtin.service_facts:

- name: Check the rules script being used
  ansible.builtin.command:
    grep '^ExecStartPost' /usr/lib/systemd/system/auditd.service
  register: check_rules_scripts_result
  changed_when: false
  failed_when: false

- name: Set suid_audit_rules fact
  ansible.builtin.set_fact:
    suid_audit_rules:
      - rule: '-a always,exit -F arch=b32 -S execve -C euid!=uid -F auid!=unset -k user_emulation'
        regex: {{{ rx_beg + rx_b32 + rx_uid + rx_end }}}
      - rule: '-a always,exit -F arch=b64 -S execve -C euid!=uid -F auid!=unset -k user_emulation'
        regex: {{{ rx_beg + rx_b64 + rx_uid + rx_end }}}

- name: Update /etc/audit/rules.d/user_emulation.rules to audit privileged functions
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/user_emulation.rules
    line: "{{  item.rule  }}"
    regexp: "{{ item.regex }}"
    create: yes
  when:
    - '"auditd.service" in ansible_facts.services'
    - '"augenrules" in check_rules_scripts_result.stdout'
  register: augenrules_audit_rules_privilege_function_update_result
  with_items: "{{ suid_audit_rules }}"

- name: Update Update /etc/audit/audit.rules to audit privileged functions
  ansible.builtin.lineinfile:
    path: /etc/audit/audit.rules
    line: "{{  item.rule  }}"
    regexp: "{{ item.regex }}"
    create: yes
  when:
    - '"auditd.service" in ansible_facts.services'
    - '"auditctl" in check_rules_scripts_result.stdout'
  register: auditctl_audit_rules_privilege_function_update_result
  with_items: "{{ suid_audit_rules }}"
# restarting auditd through systemd doesn't work, see: https://access.redhat.com/solutions/5515011
- name: Restart Auditd
  ansible.builtin.command: /usr/sbin/service auditd restart
  when:
    - (augenrules_audit_rules_privilege_function_update_result.changed or
       auditctl_audit_rules_privilege_function_update_result.changed)
    - ansible_facts.services["auditd.service"].state == "running"
