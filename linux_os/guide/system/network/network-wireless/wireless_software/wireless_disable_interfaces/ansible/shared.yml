{{% if platform_package_overrides.NetworkManager %}}
{{% set network_manager_package_name = platform_package_overrides.NetworkManager %}}
{{% else %}}
{{% set network_manager_package_name = "NetworkManager" %}}
{{% endif %}}

# platform = multi_platform_all
# reboot = false
# strategy = unknown
# complexity = low
# disruption = medium

- name: Service facts
  ansible.builtin.service_facts:

{{% if product in ["sle12", "sle15", "slmicro5"] %}}

- name: Wicked Deactivate Wireless Network Interfaces
  ansible.builtin.command: wicked ifdown {{ item }}
  loop: '{{ ansible_facts.interfaces }}'
  when:
    - ansible_facts.services['wickedd.service'].state == 'running'
    - 'item.startswith("wl")'

- name: Wicked Disable Wireless Network Interfaces
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/network/ifcfg-{{ item }}
    regexp: '^STARTMODE='
    line: STARTMODE=off
  loop: '{{ ansible_facts.interfaces }}'
  when:
    - ansible_facts.services['wickedd.service'].state == 'running'
    - 'item.startswith("wl")'
{{%- else %}}

- name: Ensure NetworkManager is installed
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - {{{ network_manager_package_name }}}

{{%- endif %}}

- name: NetworkManager Deactivate Wireless Network Interfaces
  ansible.builtin.command: nmcli radio wifi off
  when:
    - "'{{{ network_manager_package_name }}}' in ansible_facts.packages"
    - ansible_facts.services['NetworkManager.service'].state == 'running'
