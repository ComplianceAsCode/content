# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

# Inserts/replaces the rule in /etc/audit/rules.d

- name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
  find:
    paths: "/etc/audit/rules.d"
    recurse: no
    contains: "^.*/etc/sudoers.*$"
    patterns: "*.rules"
  register: find_audit_sysadmin_actions

- name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
  set_fact:
    all_sysadmin_actions_files:
      - /etc/audit/rules.d/actions.rules
  when: find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched == 0

- name: Use matched file as the recipient for the rule
  set_fact:
    all_sysadmin_actions_files:
      - "{{ find_audit_sysadmin_actions.files | map(attribute='path') | list | first }}"
  when: find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched > 0

- name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
  lineinfile:
    path: "{{ all_sysadmin_actions_files[0] }}"
    line: '-w /etc/sudoers -p wa -k actions'
    create: yes

- name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
  lineinfile:
    path: "{{ all_sysadmin_actions_files[0] }}"
    line: '-w /etc/sudoers.d/ -p wa -k actions'
    create: yes

# Inserts/replaces the {{{ NAME }}} rule in /etc/audit/audit.rules

- name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: '-w /etc/sudoers -p wa -k actions'
    create: yes

- name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: '-w /etc/sudoers.d/ -p wa -k actions'
    create: yes
