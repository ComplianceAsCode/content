documentation_complete: true

title: 'Record Events that Modify the System''s Discretionary Access Controls - umount'

description: |-
    At a minimum, the audit system should collect file system umount
    changes. If the <tt>auditd</tt> daemon is configured
    to use the <tt>augenrules</tt> program to read audit rules during daemon
    startup (the default), add the following line to a file with suffix
    <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
    <pre>-a always,exit -F arch=b32 -S umount -F auid&gt;={{{ auid }}} -F auid!=unset -F key=privileged-umount</pre>
    If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
    utility to read audit rules during daemon startup, add the following line to
    <tt>/etc/audit/audit.rules</tt> file:
    <pre>-a always,exit -F arch=b32 -S umount -F auid&gt;={{{ auid }}} -F auid!=unset -F key=privileged-umount</pre>

rationale: |-
    The changing of file permissions could indicate that a user is attempting to
    gain access to information that would otherwise be disallowed. Auditing DAC modifications
    can facilitate the identification of patterns of abuse among both authorized and
    unauthorized users.

severity: medium

identifiers:
    cce@rhel6: 27180-9
    cce@rhel7: 27389-6
    cce@rhel8: 80692-7

references:
    disa@sle12: 130,169,172,2884
    nist@sle12: AU-3,AU-12(a),AU-12(c),MA-4(1)(a)
    stigid@sle12: "020300"

{{{ complete_ocil_entry_audit_syscall(syscall="umount") }}}

warnings:
    - general: |-
        Note that these rules can be configured in a
        number of ways while still achieving the desired effect. Here the system calls
        have been placed independent of other system calls. Grouping these system
        calls with others as identifying earlier in this guide is more efficient.

platform: machine
