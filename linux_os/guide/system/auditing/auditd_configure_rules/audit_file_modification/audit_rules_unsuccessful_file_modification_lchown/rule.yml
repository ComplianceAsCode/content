documentation_complete: true

prodtype: fedora,ocp4,ol7,ol8,rhel6,rhel7,rhel8

title: 'Record Unsuccessul Ownership Changes to Files - lchown'

description: |-
    The audit system should collect unsuccessful file ownership change
    attempts for all users and root.

    If the <tt>auditd</tt> daemon is configured
    to use the <tt>augenrules</tt> program to read audit rules during daemon
    startup (the default), add the following lines to a file with suffix
    <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>.

    If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
    utility to read audit rules during daemon startup, add the following lines to
    <tt>/etc/audit/audit.rules</tt> file.

    <pre>-a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change
    -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>

    If the system is 64 bit then also add the following lines:
    <pre>-a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change
    -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>


rationale: |-
    Unsuccessful attempts to change ownership of files could be an indicator of malicious activity on a system. Auditing
    these events could serve as evidence of potential system compromise.

severity: medium

identifiers:
    cce@rhel6: 81077-0
    cce@rhel7: 81078-8
    cce@rhel8: 80987-1
    cce@ocp4: 82630-5

references:
    disa: '172'
    nist: AU-2(d),AU-12(c),CM-6(a)
    vmmsrg: SRG-OS-000458-VMM-001810,SRG-OS-000461-VMM-001830

{{{ complete_ocil_entry_audit_syscall(syscall="lchown") }}}

warnings:
    - general: |-
        Note that these rules can be configured in a
        number of ways while still achieving the desired effect. Here the audit rule checks a
        system call independently of other system calls. Grouping system calls related
        to the same event is more efficient. See the following example:
        <pre>-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>

template:
    name: audit_rules_unsuccessful_file_modification
    vars:
        name: lchown
