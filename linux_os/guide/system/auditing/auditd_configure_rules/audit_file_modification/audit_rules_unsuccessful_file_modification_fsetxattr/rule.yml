documentation_complete: true

prodtype: fedora,ol7,ol8,rhcos4,rhel7,rhel8,rhel9

title: 'Record Unsuccessful Permission Changes to Files - fsetxattr'

description: |-
    The audit system should collect unsuccessful file permission change
    attempts for all users and root.
    If the <tt>auditd</tt> daemon is configured
    to use the <tt>augenrules</tt> program to read audit rules during daemon
    startup (the default), add the following lines to a file with suffix
    <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>.
    If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
    utility to read audit rules during daemon startup, add the following lines to
    <tt>/etc/audit/audit.rules</tt> file.
    <pre>-a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change
    -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>
    If the system is 64 bit then also add the following lines:
    <pre>-a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change
    -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>


rationale: |-
    Unsuccessful attempts to change permissions of files could be an indicator of malicious activity on a system. Auditing
    these events could serve as evidence of potential system compromise.

severity: medium

identifiers:
    cce@rhcos4: CCE-82628-9
    cce@rhel7: CCE-81096-0
    cce@rhel8: CCE-80979-8

references:
    disa: CCI-000172
    nist: AU-2(d),AU-12(c),CM-6(a)
    vmmsrg: SRG-OS-000458-VMM-001810,SRG-OS-000461-VMM-001830

{{{ complete_ocil_entry_audit_unsuccessful_syscall(syscall="fsetxattr") }}}

warnings:
    - general: |-
        Note that these rules can be configured in a
        number of ways while still achieving the desired effect. Here the audit rule checks a
        system call independently of other system calls. Grouping system calls related
        to the same event is more efficient. See the following example:
        <pre>-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat,setxattr,lsetxattr,fsetxattr -F exit=-EACCES -F auid>={{{ auid }}} -F auid!=unset -F key=unsuccesful-perm-change</pre>

template:
    name: audit_rules_unsuccessful_file_modification
    vars:
        name: fsetxattr
        syscall_grouping:
          - chmod
          - fchmod
          - fchmodat
          - fsetxattr
          - lsetxattr
          - setxattr
