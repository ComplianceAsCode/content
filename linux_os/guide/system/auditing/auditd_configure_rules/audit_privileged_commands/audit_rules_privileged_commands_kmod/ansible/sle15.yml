# platform = multi_platform_sle
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

- name: Service facts
  service_facts:

- name: Check the rules script being used
  command:
    grep '^ExecStartPost' /usr/lib/systemd/system/auditd.service
  register: check_rules_scripts_result

- name: Update kmod in /etc/audit/rules.d/audit.rules
  lineinfile:
    path: /etc/audit/rules.d/audit.rules
    line: '-w /usr/bin/kmod -p x -k modules'
    create: yes
  when:
    - '"auditd.service" in ansible_facts.services'
    - '"augenrules" in check_rules_scripts_result.stdout'
  register: augenrules_audit_rules_kmod_update_result

- name: Update kmod in /etc/audit/audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: '-w /usr/bin/kmod -p x -k modules'
    create: yes
  when:
    - '"auditd.service" in ansible_facts.services'
    - '"auditctl" in check_rules_scripts_result.stdout'
  register: auditctl_audit_rules_kmod_update_result

- name: Restart auditd.service
  systemd:
    name: auditd.service
    state: restarted
  when:
    - (augenrules_audit_rules_kmod_update_result.changed or
       auditctl_audit_rules_kmod_update_result.changed)
    - ansible_facts.services["auditd.service"].state == "running"
