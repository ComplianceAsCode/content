documentation_complete: true

title: 'Ensure auditd Collects Unauthorized Access Attempts to Files (unsuccessful)'

description: |-
    At a minimum the audit system should collect unauthorized file
    accesses for all users and root. If the <tt>auditd</tt> daemon is configured
    to use the <tt>augenrules</tt> program to read audit rules during daemon
    startup (the default), add the following lines to a file with suffix
    <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
    <pre>-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access
    -a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access</pre>
    If the system is 64 bit then also add the following lines:
    <pre>
    -a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access
    -a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access</pre>
    If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
    utility to read audit rules during daemon startup, add the following lines to
    <tt>/etc/audit/audit.rules</tt> file:
    <pre>-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access
    -a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access</pre>
    If the system is 64 bit then also add the following lines:
    <pre>
    -a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access
    -a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid&gt;={{{ auid }}} -F auid!=4294967295 -F key=access</pre>

rationale: |-
    Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing
    these events could serve as evidence of potential system compromise.

severity: medium

identifiers:
    cce@rhel6: 26712-0
    cce@rhel7: 27347-4

references:
    disa@rhel6: "126"
    nist@rhel6: AC-3(10)
    srg@rhel6: SRG-OS-000064
    stigid@rhel6: RHEL-06-000197
    cis: 5.2.10
    cjis: 5.4.1.1
    cui: 3.1.7
    disa: 172,2884
    nist: AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5
    pcidss: Req-10.2.4,Req-10.2.1

ocil_clause: '32-bit and 64-bit system calls to creat, open, openat, open_by_handle_at, truncate, and ftruncate are not audited during EACCES and EPERM'

ocil: |-
    To verify that the audit system collects unauthorized file accesses, run the following commands:
    <pre>$ sudo grep EACCES /etc/audit/audit.rules</pre>
    <pre>$ sudo grep EPERM /etc/audit/audit.rules</pre>

warnings:
    - general: |-
        This rule checks for multiple syscalls related to unsuccessful file modification;
        it was written with DISA STIG in mind. Other policies should use a
        separate rule for each syscall that needs to be checked. For example:
        <ul>
        <li><tt>audit_rules_unsuccessful_file_modification_open</tt></li>
        <li><tt>audit_rules_unsuccessful_file_modification_ftruncate</tt></li>
        <li><tt>audit_rules_unsuccessful_file_modification_creat</tt></li>
        </ul>

platform: machine
