# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high

- name: "{{{ rule_title }}}: Refresh facts"
  ansible.builtin.setup:
    gather_subset: mounts

- name: "{{{ rule_title }}}: Define excluded (non-local) file systems"
  ansible.builtin.set_fact:
    excluded_fstypes:
      - afs
      - autofs
      - ceph
      - cifs
      - smb3
      - smbfs
      - sshfs
      - ncpfs
      - ncp
      - nfs
      - nfs4
      - gfs
      - gfs2
      - glusterfs
      - gpfs
      - pvfs2
      - ocfs2
      - lustre
      - davfs
      - fuse.sshfs

- name: "{{{ rule_title }}}: Ensure non-root local partitions are mounted with nodev option"
  ansible.posix.mount:
    path: "{{ item.mount }}"
    src: "{{ item.device }}"
    opts: "{{ item.options }},nodev"
    state: "mounted"
    fstype: "{{ item.fstype }}"
  when:
    - "item.mount is match('/\\w')"
    - "item.options is not search('nodev')"
    - "item.fstype not in excluded_fstypes"
  with_items:
    - "{{ ansible_facts.mounts }}"

- name: "{{{ rule_title }}}: Ensure non-root local partitions are present with nodev option in /etc/fstab"
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^\s*(?!#)(/dev/\S+|UUID=\S+)\s+(/\w\S*)\s+(\S+)\s+(?!.*\bnodev\b)(\S+)(.*)$'
    replace: '\1 \2 \3 \4,nodev \5'
