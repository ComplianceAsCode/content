srg_requirement: |-
    {{{ full_name }}} must implement non-executable data to protect its memory from unauthorized code execution.

vuldiscussion: |-
    ExecShield uses the segmentation feature on all x86 systems to prevent
    execution in memory higher than a certain address. It writes an address as
    a limit in the code segment descriptor, to control where code can be
    executed, on a per-process basis. When the kernel places a process's memory
    regions such as the stack and heap higher than this address, the hardware
    prevents execution in that address range. This is enabled by default on the
    latest Red Hat and Fedora systems if supported by the hardware.

checktext: |-
    Verify the NX (no-execution) bit flag is set on the system.

    Check that the no-execution bit flag is set with the following commands:

    $ sudo dmesg | grep NX

    [ 0.000000] NX (Execute Disable) protection: active

    If "dmesg" does not show "NX (Execute Disable) protection" active, check the cpuinfo settings with the following command:

    $ sudo grep -i flags /proc/cpuinfo
    flags : fpu vme de pse tsc ms nx rdtscp lm constant_tsc

    If "flags" does not contain the "nx" flag, this is a finding.

fixtext: |-
    Update the GRUB 2 bootloader configuration.

    Run the following command:

    $ sudo grubby --update-kernel=ALL --remove-args=noexec
