srg_requirement: |-
    {{{ full_name }}} must clear the page allocator to prevent use-after-free attacks.

vuldiscussion: |-
    Poisoning writes an arbitrary value to freed pages, so any modification or
    reference to that page after being freed or before being initialized will be
    detected and prevented.
    This prevents many types of use-after-free vulnerabilities at little performance cost.
    Also prevents leak of data and detection of corrupted memory.

checktext: |-
    Verify that GRUB 2 is configured to enable page poisoning to mitigate use-after-free vulnerabilities.

    Check that the current GRUB 2 configuration has page poisoning enabled  with the following command:

    $ sudo grubby --info=ALL | grep args | grep -v 'page_poison=1'

    If any output is returned, this is a finding.

    Check that page poisoning is enabled by default to persist in kernel updates with the following command:

    $ sudo grep page_poison /etc/default/grub

    GRUB_CMDLINE_LINUX="page_poison=1"

    If "page_poison" is not set to "1", is missing or commented out, this is a finding.

fixtext: |-
    Configure {{{ full_name }}} to enable page poisoning with the following commands:

    $ sudo grubby --update-kernel=ALL --args="page_poison=1"

    Add or modify the following line in "/etc/default/grub" to ensure the configuration survives kernel updates:

    GRUB_CMDLINE_LINUX="page_poison=1"
