<def-group>
  <definition class="compliance" id="{{{ rule_id }}}" version="1">
    {{{ oval_metadata("Set Existing Passwords Warning Age") }}}
    <criteria operator="OR">
      <criterion test_ref="test_accounts_password_set_warn_age_existing"
        comment="Passwords must be configured to the appropriate warn age before expiring."/>
      <criterion test_ref="test_accounts_password_set_warn_age_existing_no_pass"
        comment="There is no password defined in /etc/shadow"/>
    </criteria>
  </definition>

  <unix:shadow_test id="test_accounts_password_set_warn_age_existing" version="1"
    check="all" check_existence="at_least_one_exists"
    comment="Password expiration warn age for existing accounts is properly set in /etc/shadow.">
    <unix:object object_ref="object_accounts_password_set_warn_age_existing"/>
    <unix:state state_ref="state_warn_age_for_passwords_change"/>
  </unix:shadow_test>

  <unix:shadow_object id="object_accounts_password_set_warn_age_existing" version="1">
    <unix:username operation="pattern match">.*</unix:username>
    <filter action="exclude">state_accounts_password_set_warn_age_existing_no_password</filter>
  </unix:shadow_object>

  <unix:shadow_state id="state_accounts_password_set_warn_age_existing_no_password" version="1">
    <unix:password operation="pattern match">^(!|!!|!\*|\*|!locked)$</unix:password>
  </unix:shadow_state>

  <unix:shadow_state id="state_warn_age_for_passwords_change" version="1"
    comment="Warn age for passwords expiration is set to the recommended value.">
    <unix:exp_warn operation="greater than or equal" datatype="int"
      var_ref="var_accounts_password_warn_age_login_defs"/>
  </unix:shadow_state>

  <!-- this external variable is defined at the group level,
       reusing the account-level definitions. -->
  <external_variable id="var_accounts_password_warn_age_login_defs" version="1"
    datatype="int" comment="Warning days before password expires"/>

  <unix:shadow_test id="test_accounts_password_set_warn_age_existing_no_pass" version="1"
    check="all" check_existence="none_exist"
    comment="Check the inexistence of users with a password defined">
    <unix:object object_ref="object_accounts_password_set_warn_age_existing"/>
  </unix:shadow_test>
</def-group>
