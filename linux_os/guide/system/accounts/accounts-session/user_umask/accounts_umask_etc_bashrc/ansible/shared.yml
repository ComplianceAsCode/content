# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
{{{ ansible_instantiate_variables("var_accounts_user_umask") }}}

{{% if 'sle' in product or 'ubuntu' in product %}}
{{% set etc_bash_rc = "/etc/bash.bashrc" %}}
{{% else %}}
{{% set etc_bash_rc = "/etc/bashrc" %}}
{{% endif %}}

- name: Check if umask in {{{ etc_bash_rc }}} is already set
  ansible.builtin.lineinfile:
    path: {{{ etc_bash_rc }}}
    regexp: ^[^#]*\bumask\s+\d+$
    state: absent
  check_mode: true
  changed_when: false
  register: umask_replace

- name: Replace user umask in {{{ etc_bash_rc }}}
  ansible.builtin.replace:
    path: {{{ etc_bash_rc }}}
    regexp: ^([^#]*\b)umask\s+\d+$
    replace: \g<1>umask {{ var_accounts_user_umask }}
  when:
  - umask_replace.found > 0

- name: Ensure the Default umask is Appended Correctly
  ansible.builtin.lineinfile:
    create: true
    path: {{{ etc_bash_rc }}}
    line: umask {{ var_accounts_user_umask }}
  when:
  - umask_replace.found == 0
