# platform = multi_platform_rhel,multi_platform_ol,multi_platform_sle,multi_platform_rhv4,multi_platform_almalinux
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low

- name: {{{ rule_title }}} - Get interactive users from passwd file
  ansible.builtin.getent:
    database: passwd
  register: passwd_entries

- name: {{{ rule_title }}} - Filter interactive users and get home directories
  ansible.builtin.set_fact:
    interactive_user_homes: "{{ interactive_user_homes | default([]) + [item.value[4]] }}"
  loop: "{{ passwd_entries.ansible_facts.getent_passwd | dict2items }}"
  when:
    - item.value[2] | int >= {{{ uid_min }}} | int
    - item.value[2] | int != {{{ nobody_uid }}} | int
    - item.value[4] != ""

- name: {{{ rule_title }}} - Find dot files in interactive user home directories
  ansible.builtin.find:
    paths: "{{ item }}"
    patterns: ".*"
    file_type: file
    hidden: yes
    depth: 1
  register: user_dotfiles
  with_items: "{{ interactive_user_homes | default([]) }}"
  failed_when: false
  when: item != ""

- name: {{{ rule_title }}} - Comment out umask statements in user initialization files
  ansible.builtin.replace:
    path: "{{ item.1.path }}"
    regexp: '^\s*umask\s+'
    replace: '#\g<0>'
    backup: no
  with_subelements:
    - "{{ user_dotfiles.results }}"
    - files
  when:
    - item.0 is not skipped
    - item.1.path is defined
    - "'.bash_history' not in item.1.path"
