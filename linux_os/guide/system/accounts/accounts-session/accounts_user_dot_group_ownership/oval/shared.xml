<def-group>
  <definition class="compliance" id="{{{ rule_id }}}" version="1">
    {{{ oval_metadata("User Initialization Files Must Be Group-Owned By The Primary User") }}}
    <criteria>
      <criterion test_ref="test_accounts_user_dot_group_ownership"
                 comment="User Initialization Files Must Be Group-Owned By The Primary User"/>
    </criteria>
  </definition>

  <unix:password_object id="object_accounts_user_dot_group_ownership_objects" version="1">
    <unix:username datatype="string" operation="not equal">nobody</unix:username>
    <filter action="include">state_accounts_user_dot_group_ownership_interactive_gids</filter>
    <filter action="exclude">state_accounts_user_dot_group_ownership_nobody</filter>
  </unix:password_object>

  <unix:password_state id="state_accounts_user_dot_group_ownership_interactive_gids" version="1">
    <unix:group_id datatype="int" operation="greater than or equal">{{{ gid_min }}}</unix:group_id>
  </unix:password_state>

  <unix:password_state id="state_accounts_user_dot_group_ownership_nobody" version="1">
    <unix:group_id datatype="int" operation="equals">{{{ nobody_gid }}}</unix:group_id>
  </unix:password_state>


  <local_variable id="var_accounts_user_dot_group_ownership_dirs" datatype="string" version="1"
                  comment="Variable including all home dirs from interactive users">
    <object_component item_field="home_dir"
                      object_ref="object_accounts_user_dot_group_ownership_objects"/>
  </local_variable>

  <local_variable id="var_accounts_user_dot_group_ownership_gids" datatype="int" version="1"
                  comment="List of interactive users gids">
    <object_component item_field="group_id"
                      object_ref="object_accounts_user_dot_group_ownership_objects"/>
  </local_variable>

  <!-- #### creation of object #### -->
  <unix:file_object id="object_accounts_user_dot_group_ownership_init_files" version="1">
    <unix:behaviors recurse="directories" recurse_direction="down" max_depth="1"
                    recurse_file_system="local"/>
    <unix:path var_ref="var_accounts_user_dot_group_ownership_dirs" var_check="at least one"/>
    <unix:filename operation="pattern match">^\..*</unix:filename>
  </unix:file_object>

  <!-- #### creation of state #### -->
  <unix:file_state id="state_accounts_user_dot_group_ownership_gids" version="1">
    <unix:group_id datatype="int" var_check="only one"
                  var_ref="var_accounts_user_dot_group_ownership_gids"/>
  </unix:file_state>

  <!-- #### creation of test #### -->
  <unix:file_test id="test_accounts_user_dot_group_ownership" check="all"
              check_existence="any_exist" version="1"
              comment="All user initialization files are group-owned by a local interactive user">
    <unix:object object_ref="object_accounts_user_dot_group_ownership_init_files"/>
    <unix:state state_ref="state_accounts_user_dot_group_ownership_gids"/>
  </unix:file_test>
</def-group>
