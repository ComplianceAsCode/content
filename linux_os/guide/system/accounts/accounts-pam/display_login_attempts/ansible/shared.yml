{{% if product in ["sle12", "sle15"] %}}
{{% set pam_lastlog_filename = "login" %}}
{{% else %}}
{{% set pam_lastlog_filename = "postlogin" %}}
{{% endif %}}

# platform = multi_platform_sle,Red Hat Virtualization 4,multi_platform_fedora,multi_platform_ol,multi_platform_rhel,multi_platform_wrlinux
# reboot = false
# strategy = configure
# complexity = low
# disruption = low

- name: Check if pam_lastlog.so is set
  lineinfile:
    path: /etc/pam.d/{{{ pam_lastlog_filename }}}
    regexp: '^\s*(session)(\s+)[^\s]+(\s+)(pam_lastlog\.so)(\s+)(.*)'
    state: absent
  check_mode: yes
  changed_when: false
  register: pam_lastlog_exists

- name: Make sure pam_lastlog.so control is required
  replace:
    path: /etc/pam.d/{{{ pam_lastlog_filename }}}
    regexp: ^\s*(session)(\s+)[^\s]+(\s+)(pam_lastlog\.so)(\s+)(.*)
    replace: '\1\2required\3\4\5\6'
  register: control_update_result

- name: Add control for pam_lastlog.so module
  lineinfile:
    path: /etc/pam.d/{{{ pam_lastlog_filename }}}
    line: 'session required pam_lastlog.so showfailed'
  when: not pam_lastlog_exists.found
  register: add_new_pam_lastlog_control_result

- name: Add 'showfailed' arg to pam_lastlog.so module
  pamd:
    name: {{{ pam_lastlog_filename }}}
    type: session
    control: required
    module_path: pam_lastlog.so
    module_arguments: showfailed
    state: args_present
  when: not add_new_pam_lastlog_control_result.changed

- name: Remove 'silent' arg for pam_lastlog.so module
  pamd:
    name: {{{ pam_lastlog_filename }}}
    type: session
    control: required
    module_path: pam_lastlog.so
    module_arguments: silent
    state: args_absent
  when: not add_new_pam_lastlog_control_result.changed
