<def-group>
  <definition class="compliance" id="partition_for_home_dirs" version="1">
    <metadata>
      <title>Partition for Home Directories Must Exist</title>
      <affected family="unix">
        <platform>multi_platform_sle</platform>
      </affected>
      <description>Check for a separate partition for home directories of interactive users.</description>
    </metadata>
    <criteria>
      <criterion comment="Check for partition for home directories of interactive users that." test_ref="test_partition_home_dirs" />
    </criteria>
  </definition>


  <!-- we only care about interactive users (uid >= 1000) -->
  <unix:password_state id="state_user_interactive_home_partition_exists_is_interactive_user" version="1">
      <unix:user_id datatype="int" operation="greater than or equal">1000</unix:user_id>
  </unix:password_state>
  <unix:password_state id="state_user_interactive_home_partition_exists_is_not_nobody" version="1">
      <unix:user_id datatype="int" operation="not equal">65534</unix:user_id>
  </unix:password_state>

  <!-- collect information about all interactive users -->
  <unix:password_object id="obj_user_interactive_home_partition_exists_passwd_list" version="1">
    <unix:username datatype="string" operation="pattern match">^</unix:username>
    <filter action="include">state_user_interactive_home_partition_exists_is_interactive_user</filter>
    <filter action="include">state_user_interactive_home_partition_exists_is_not_nobody</filter>
  </unix:password_object>

  <!-- variable with all the parent directories of home directories of interactive users -->
  <local_variable id="var_user_interactive_home_parent_dirs" comment="List of parent directories of home directories of interactive users." datatype="string" version="1">
    <regex_capture pattern="^(?:(/.+?)/[^/]+/?$|(/))">
      <object_component item_field="home_dir" object_ref="obj_user_interactive_home_partition_exists_passwd_list" />
    </regex_capture>
  </local_variable>

  <!-- object for this variable that we can use in a variable_test -->
  <ind:variable_object id="obj_user_interactive_home_parent_dirs" version="1">
      <ind:var_ref>var_user_interactive_home_parent_dirs</ind:var_ref>
  </ind:variable_object>

  <!-- try to find partition objects for every collected home directory parent.  -->
  <linux:partition_object comment="mount points for parent directories of home directories of interactive users" id="obj_user_interactive_home_partition_exists_mount_points" version="1">
    <linux:mount_point var_check="at least one" var_ref="var_user_interactive_home_parent_dirs" />
  </linux:partition_object>

  <!-- collect the paths to all matching mount points -->
  <local_variable id="var_user_interactive_home_partition_exists_file_objects" comment="List of mount points for parent directories of home directories of interactive users." datatype="string" version="1">
    <object_component item_field="mount_point" object_ref="obj_user_interactive_home_partition_exists_mount_points" />
  </local_variable>

  <!-- verify that every configured parent directory is in the list of mount points -->
  <ind:variable_state id="state_user_interactive_home_partition_exists_each_home_parent_has_partition" version="1">
    <ind:value var_ref="var_user_interactive_home_partition_exists_file_objects" datatype="string" operation="equals" var_check="at least one" />
  </ind:variable_state>

  <ind:variable_test
  check="all" check_existence="all_exist" comment="Check user ids on all files on the system"
  id="test_partition_home_dirs" version="1">
    <ind:object object_ref="obj_user_interactive_home_parent_dirs" />
    <ind:state state_ref="state_user_interactive_home_partition_exists_each_home_parent_has_partition" />
  </ind:variable_test>

</def-group>
  
