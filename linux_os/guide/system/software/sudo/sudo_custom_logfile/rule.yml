documentation_complete: true

title: 'Ensure Sudo Logfile Exists - sudo logfile'

description: |-
    A custom log sudo file can be configured with the 'logfile' tag. This rule configures
    a sudo custom logfile at the default location suggested by CIS, which uses
    /var/log/sudo.log.

rationale: |-
    A sudo log file simplifies auditing of sudo commands.

severity: low

identifiers:
    cce@rhel7: CCE-83600-7
    cce@rhel8: CCE-83601-5
    cce@rhel9: CCE-83527-2
    cce@sle12: CCE-91654-4
    cce@sle15: CCE-91311-1

references:
    cis@alinux3: 5.3.3
    cis@rhel7: 5.2.3
    cis@rhel8: 5.3.3
    cis@rhel9: 5.3.3
    cis@sle12: 1.3.3
    cis@sle15: 1.3.3
    cis@ubuntu2004: 1.3.3
    cis@ubuntu2204: 5.3.3
    pcidss: Req-10.2.1.5

ocil_clause: 'logfile is not enabled in sudo'

ocil: |-
    To determine if <tt>logfile</tt> has been configured for sudo, run the following command:
    <pre>$ sudo grep -ri "^[\s]*Defaults\s*\blogfile\b.*" /etc/sudoers /etc/sudoers.d/</pre>
    The command should return a matching output.

template:
    name: sudo_defaults_option
    vars:
        option: logfile
        # Description of option_regex_suffix
        # Outer capture group for the value (which we need to compare against an
        # XCCDF variable).
        #
        # Inside it is an OR of two paths:
        #
        #  - Either we have a quoted value, or
        #  - We don't have a quoted value.
        #
        # In the quoted path, we match the start and end quote (and therefore, the
        # user running against this rule MUST specify quotes in the variable value
        # if necessary!). Then we match (in between these quotes) any (potentially
        # empty) group of character that:
        #
        #  - Is an escaped double quote,
        #  - Is an escaped backslash,
        #  - Or isn't one of those characters.
        #
        # Finally, we match on \B: since we know " is not a word character,
        # it'll only match if the following character is also not a word
        # character. This ensures we don't have a string such as "quoted"d, which
        # would (presumably) be invalid in a sudoers entry.
        #
        # In the non-quoted path, we strictly match the value. However, we have a
        # few more escaped characters to deal with. Thus we match any (potentially
        # empty) group of characters that:
        #
        #  - Is an escaped comma,
        #  - Is an escaped double quote,
        #  - Is an escaped space (per `man sudoers`, this needs escaping without
        #    double quotes),
        #  - Is an escaped backslash,
        #  - Or isn't one of those characters.
        #
        # Finally, we check for regular word boundary (with \b), ensuring the
        # next character isn't yet another word character.
        option_regex_suffix: '=("(?:\\"|\\\\|[^"\\\n])*"\B|[^"](?:(?:\\,|\\"|\\ |\\\\|[^", \\\n])*)\b)'
        variable_name: var_sudo_logfile
