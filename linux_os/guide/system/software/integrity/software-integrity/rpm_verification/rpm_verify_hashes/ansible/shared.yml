# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# reboot = false
# strategy = restrict
# complexity = high
# disruption = medium
- name: "Set fact: Package manager reinstall command (dnf)"
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when: ansible_distribution == "Fedora"

- name: "Set fact: Package manager reinstall command (yum)"
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when: (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")

- name: "Read files with incorrect hash"
  command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup --nomode --noconfig --noghost
  args:
    warn: False # Ignore ANSIBLE0006, we can't fetch files with incorrect hash using rpm module
  register: files_with_incorrect_hash
  changed_when: False
  failed_when: files_with_incorrect_hash.rc > 1
  check_mode: False
  when: (package_manager_reinstall_cmd is defined)

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: False # Ignore ANSIBLE0006, we can't fetch packages with files with incorrect hash using rpm module
  with_items: "{{ files_with_incorrect_hash.stdout_lines | map('regex_findall', '^[.]+[5]+.* (\\/.*)', '\\1') | map('join') | select('match', '(\\/.*)') | list | unique }}"
  register: list_of_packages
  changed_when: False
  check_mode: False
  when:
    - files_with_incorrect_hash.stdout_lines is defined
    - (files_with_incorrect_hash.stdout_lines | length > 0)

- name: "Reinstall packages of files with incorrect hash"
  command: "{{ package_manager_reinstall_cmd }} '{{ item }}'"
  args:
    warn: False # Ignore ANSIBLE0006, this task is flexible with regards to package manager
  with_items: "{{ list_of_packages.results | map(attribute='stdout_lines') | list | unique }}"
  when:
    - files_with_incorrect_hash.stdout_lines is defined
    - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0))
