# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
{{% if 'sle' in product %}}
{{%- set aide_init_command = "/usr/bin/aide --init" -%}}
{{%- set aide_stage_src = "/var/lib/aide/aide.db.new" -%}}
{{%- set aide_stage_dest = "/var/lib/aide/aide.db" -%}}
{{% else %}}
{{%- set aide_init_command = "/usr/sbin/aide --init" -%}}
{{%- set aide_stage_src = "/var/lib/aide/aide.db.new.gz" -%}}
{{%- set aide_stage_dest = "/var/lib/aide/aide.db.gz" -%}}
{{% endif %}}

{{% if 'sle' in product %}}
- name: "{{{ rule_title }}} - Ensure Repositories Are Updated"
  ansible.builtin.command: zypper -q --no-remote ref
  failed_when: false
{{% endif %}}

- name: "{{{ rule_title }}} - Ensure AIDE Is Installed"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - aide

- name: "{{{ rule_title }}} - Build and Test AIDE Database"
  ansible.builtin.command: {{{ aide_init_command }}}
  changed_when: True

# mainly to allow ansible's check mode to work
- name: "{{{ rule_title }}} - Check Whether the Stock AIDE Database Exists"
  ansible.builtin.stat:
     path: {{{ aide_stage_src }}}
  register: aide_database_stat

- name: "{{{ rule_title }}} - Stage AIDE Database"
  ansible.builtin.copy:
    src: {{{ aide_stage_src }}}
    dest: {{{ aide_stage_dest }}}
    backup: yes
    remote_src: yes
  when: (aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists)
