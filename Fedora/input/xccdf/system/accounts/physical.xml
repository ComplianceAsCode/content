<Group id="accounts-physical">
<title>Protect Physical Console Access</title>
<description>It is impossible to fully protect a system from an
attacker with physical access, so securing the space in which the
system is located should be considered a necessary step. However,
there are some steps which, if taken, make it more difficult for an
attacker to quickly or undetectably modify a system from its
console.</description>

<Group id="bootloader">
<title>Set Boot Loader Password</title>
<description>During the boot process, the boot loader is
responsible for starting the execution of the kernel and passing
options to it. The boot loader allows for the selection of
different kernels - possibly on different partitions or media.
The default Fedora boot loader for x86 systems is called GRUB2.
Options it can pass to the kernel include <i>single-user mode</i>, which
provides root access without any authentication, and the ability to
disable SELinux. To prevent local users from modifying the boot
parameters and endangering security, protect the boot loader configuration
with a password and ensure its configuration file's permissions
are set properly.
</description>

<Rule id="file_user_owner_grub2_cfg" severity="medium">
<title>Verify /boot/grub2/grub.cfg User Ownership</title>
<description>The file <tt>/boot/grub2/grub.cfg</tt> should 
be owned by the <tt>root</tt> user to prevent destruction 
or modification of the file.
<fileowner-desc-macro file="/boot/grub2/grub.cfg" owner="root"/>
</description>
<ocil><fileowner-check-macro file="/boot/grub2/grub.cfg" owner="root"/></ocil>
<rationale>
Only root should be able to modify important boot parameters.
</rationale>
<oval id="file_user_owner_grub2_cfg" />
<ref nist="AC-6(7)" disa="225" pcidss="Req-7.1" cis="1.5.1" />
</Rule>

<Rule id="file_group_owner_grub2_cfg" severity="medium">
<title>Verify /boot/grub2/grub.cfg Group Ownership</title>
<description>The file <tt>/boot/grub2/grub.cfg</tt> should 
be group-owned by the <tt>root</tt> group to prevent 
destruction or modification of the file.
<filegroupowner-desc-macro file="/boot/grub2/grub.cfg" group="root"/>
</description>
<ocil><filegroupowner-check-macro file="/boot/grub2/grub.cfg" group="root"/></ocil>
<rationale>
The <tt>root</tt> group is a highly-privileged group. Furthermore, the group-owner of this
file should not have any access privileges anyway.
</rationale>
<oval id="file_group_owner_grub2_cfg" />
<ref nist="AC-6(7)" disa="225" pcidss="Req-7.1" cis="1.5.1" />
</Rule>

<Rule id="file_permissions_grub2_cfg" severity="medium">
<title>Verify /boot/grub2/grub.cfg Permissions</title>
<description>File permissions for <tt>/boot/grub2/grub.cfg</tt> should be set to 600, which
is the default.
<fileperms-desc-macro file="/boot/grub2/grub.cfg" perms="600"/>
</description>
<ocil clause ="it does not">
To check the permissions of /boot/grub2/grub.cfg, run the command:
<pre>$ sudo ls -lL /boot/grub2/grub.cfg</pre>
If properly configured, the output should indicate the following 
permissions: <tt>-rw-------</tt>
</ocil>
<rationale>
Proper permissions ensure that only the root user can modify important boot
parameters.
</rationale>
<oval id="file_permissions_grub2_cfg" />
<ref nist="AC-6(7)" disa="225" cis="1.5.2" />
</Rule>

<Rule id="bootloader_password" severity="medium">
<title>Set Boot Loader Password</title>
<description>The grub2 boot loader should have a superuser account and password
protection enabled to protect boot-time settings.
<br /><br />
To do so, select a superuser account and password and add them into the
appropriate grub2 configuration file(s) under <tt>/etc/grub.d</tt>.
Since plaintext passwords are a security risk, generate a hash for the pasword
by running the following command:
<pre>$ grub2-mkpasswd-pbkdf2</pre>
When prompted, enter the password that was selected and insert the returned 
password hash into the appropriate grub2 configuration file(s) under
<tt>/etc/grub.d</tt> immediately after the superuser account.
(Use the output from <tt>grub2-mkpasswd-pbkdf2</tt> as the value of 
<b>password-hash</b>):
<pre>password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
NOTE: It is recommended not to use common administrator account names like root,
admin, or administrator for the grub2 superuser account. 
<br />
To meet FISMA Moderate, the bootloader superuser account and password MUST 
differ from the root account and password.
Once the superuser account and password have been added, update the 
<tt>grub.cfg</tt> file by running:
<pre>grub2-mkconfig -o /boot/grub2/grub.cfg</pre>
NOTE: Do NOT manually add the superuser account and password to the 
<tt>grub.cfg</tt> file as the grub2-mkconfig command overwrites this file.
</description>
<ocil clause="it does not">
To verify the boot loader superuser account and superuser account password have
been set, and the password encrypted, run the following command:
<pre>sudo grep -A1 "superusers\|password" /etc/grub2.cfg</pre>
The output should show the following:
<pre>set superusers="<b>superusers-account</b>"
password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
</ocil>
<rationale>
Password protection on the boot loader configuration ensures
users with physical access cannot trivially alter
important bootloader settings. These include which kernel to use,
and whether to enter single-user mode. For more information on how to configure 
the grub2 superuser account and password, please refer to 
<ul>
<li>https://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/sec-GRUB_2_Password_Protection.html</li>.
</ul>
</rationale>
<oval id="bootloader_password" />
<ref nist="IA-2(1),IA-5(e),AC-3" disa="213" cis="1.5.3" />
</Rule>

</Group>

<Rule id="require_singleuser_auth" severity="medium">
<title>Require Authentication for Single User Mode</title>
<description>Single-user mode is intended as a system recovery
method, providing a single user root access to the system by
providing a boot option at startup. By default, no authentication
is performed if single-user mode is selected.
<br /><br />
By default, single-user mode is protected by requiring a password and is set
in <tt>/usr/lib/systemd/system/rescue.service</tt>.
</description>
<ocil clause="the output is different">
To check if authentication is required for single-user mode, run the following command:
<pre>$ grep sulogin /usr/lib/systemd/system/rescue.service</pre>
The output should be similar to the following, and the line must begin with
ExecStart and /sbin/sulogin:
<pre>ExecStart=-/sbin/sulogin</pre>
</ocil>
<rationale>
This prevents attackers with physical access from trivially bypassing security
on the machine and gaining root access. Such accesses are further prevented
by configuring the bootloader password.
</rationale>
<oval id="require_singleuser_auth" />
<ref nist="IA-2(1),AC-3" disa="213" />
</Rule>

<Rule id="service_debug-shell_disabled" severity="medium">
<title>Disable debug-shell SystemD Service</title>
<description>SystemD's <tt>debug-shell</tt> service is intended to
diagnose SystemD related boot issues with various <tt>systemctl</tt>
commands. Once enabled and following a system reboot, the root shell
will be available on <tt>tty9</tt> which is access by pressing
<tt>CTRL-ALT-F9</tt>. The <tt>debug-shell</tt> service should only be used
for SystemD related issues and should otherwise be disabled.
<br /><br />
By default, the <tt>debug-shell</tt> SystemD service is disabled.
<service-disable-macro service="debug-shell" />
</description>
<ocil>
<service-disable-check-macro service="debug-shell" />
</ocil>
<rationale>
This prevents attackers with physical access from trivially bypassing security
on the machine through valid troubleshooting configurations and gaining root
access when the system is rebooted.
</rationale>
<oval id="service_debug-shell_disabled" />
<!--ref nist="IA-2(1),AC-3" disa="213" /-->
</Rule>

<Rule id="disable_ctrlaltdel_reboot" severity="high">
<title>Disable Ctrl-Alt-Del Reboot Activation</title>
<description>
By default, <tt>SystemD</tt> will reboot the system if the <tt>Ctrl-Alt-Del</tt>
key sequence is pressed.
<br/>
To configure the system to ignore the <tt>Ctrl-Alt-Del</tt> key sequence from the
command line instead of rebooting the system, do either of the following:
<pre>ln -sf /dev/null /etc/systemd/system/ctrl-alt-del.target</pre>
or
<pre>systemctl mask ctrl-alt-del.target</pre>
<br />
Do not simply delete the <tt>/usr/lib/systemd/system/ctrl-alt-del.service</tt> file,
as this file may be restored during future system updates.
</description>
<ocil clause="the system is configured to reboot when Ctrl-Alt-Del is pressed">
To ensure the system is configured to mask the Ctrl-Alt-Del sequence,
enter the following command:
<pre>sudo ln -sf /dev/null /etc/systemd/system/ctrl-alt-del.target</pre>
or
<pre>sudo systemctl mask ctrl-alt-del.target</pre>
</ocil>
<rationale>
A locally logged-in user who presses Ctrl-Alt-Del, when at the console,
can reboot the system. If accidentally pressed, as could happen in
the case of mixed OS environment, this can create the risk of short-term
loss of availability of systems due to unintentional reboot.
</rationale>
<oval id="disable_ctrlaltdel_reboot" />
<ref nist="AC-6" disa="366" />
</Rule>

<Rule id="disable_interactive_boot" severity="medium">
<title>Verify that Interactive Boot is Disabled</title>
<description>
Fedora systems support an "interactive boot" option that can be used to prevent
services from being started. On a Fedora system, interactive boot can be
enabled by providing a <tt>1</tt>, <tt>yes</tt>, <tt>true</tt>, or
<tt>on</tt> value to the <tt>systemd.confirm_spawn</tt> kernel argument in
<tt>/etc/default/grub</tt>. Remove any instance of
<pre>systemd.confirm_spawn=(1|yes|true|on)</pre> from the kernel arguments in
that file to disable interactive boot.
</description>
<ocil clause="Interactive boot is enabled at boot time">
Inspect <tt>/etc/default/grub</tt> for any instances of
<tt>systemd.confirm_spawn=(1|yes|true|on)</tt> in the kernel boot arguments.
Presence of a <tt>systemd.confirm_spawn=(1|yes|true|on)</tt> indicates
that interactive boot is enabled at boot time.
</ocil>
<rationale>
Using interactive boot, the console user could disable auditing, firewalls,
or other services, weakening system security.
</rationale>
<warning category="general">The GRUB 2 configuration file, <tt>grub.cfg</tt>,
is automatically updated each time a new kernel is installed. Note that any
changes to <tt>/etc/default/grub</tt> require rebuilding the <tt>grub.cfg</tt>
file. To update the GRUB 2 configuration file manually, use the
<pre>grub2-mkconfig -o</pre> command as follows:
<ul>
<li>On BIOS-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/grub2/grub.cfg</pre></li>
<li>On UEFI-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg</pre></li>
</ul>
</warning>
<oval id="disable_interactive_boot" />
<ref nist="SC-2,AC-3" disa="213"/>
</Rule>

<Group id="screen_locking">
<title>Configure Screen Locking</title>
<description>When a user must temporarily leave an account
logged-in, screen locking should be employed to prevent passersby
from abusing the account. User education and training is
particularly important for screen locking to be effective, and policies
can be implemented to reinforce this.
<br /><br />
Automatic screen locking is only meant as a safeguard for
those cases where a user forgot to lock the screen.</description>

<Group id="console_screen_locking">
<title>Configure Console Screen Locking</title>
<description>
A console screen locking mechanism is provided in the
<tt>screen</tt> package, which is not installed by default.
</description>

<Rule id="package_screen_installed" severity="medium">
<title>Install the screen Package</title>
<description>
To enable console screen locking, install the <tt>screen</tt> package:
<pre><package-install-macro package="screen"/></pre>
Instruct users to begin new terminal sessions with the following command:
<pre>$ screen</pre>
The console can now be locked with the following key combination:
<pre>ctrl+a x</pre>
</description>
<ocil clause="the package is not installed">
<package-check-macro package="screen" />
</ocil>
<rationale>
A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate
physical vicinity of the information system but des not logout because of the temporary nature of the absence.
Rather than relying on the user to manually lock their operation system session prior to vacating the vicinity,
operating systems need to be able to identify when a user's session has idled and take action to initiate the
session lock. 

The <tt>screen</tt> package allows for a session lock to be implemented and configured.
</rationale>
<oval id="package_screen_installed" />
<ref nist="AC-11(a)" disa="57" />
</Rule>
</Group>

<Group id="smart_card_login">
<title>Hardware Tokens for Authentication</title>
<description>
The use of hardware tokens such as smart cards for system login
provides stronger, two-factor authentication than using a username and password.
In Fedora servers and workstations, hardware token login
is not enabled by default and must be enabled in the system settings.
</description>

<Rule id="smartcard_auth" severity="medium">
<title>Enable Smart Card Login</title>
<description>
To enable smart card authentication, consult the documentation at:
<ul>
<li>https://docs.fedoraproject.org/docs/en-US/Fedora/18/html/Security_Guide/sect-Security_Guide-Single_Sign_on_SSO-Getting_Started_with_your_new_Smart_Card.html</li>
</ul>
</description>
<ocil clause="non-exempt accounts are not using CAC authentication">
Interview the SA to determine if all accounts not exempted by policy are
using CAC authentication. 
</ocil>
<rationale>Smart card login provides two-factor authentication stronger than
that provided by a username and password combination. Smart cards leverage PKI
(public key infrastructure) in order to provide and verify credentials.
</rationale>
<oval id="smartcard_auth" />
<ref disa="765,766,767,768,771,772,884" pcidss="Req-8.3" />
</Rule>

</Group>

</Group>
</Group>
