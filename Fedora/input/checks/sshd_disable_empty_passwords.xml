<def-group>
  <definition class="compliance" id="sshd_disable_empty_passwords" version="1">
    <metadata>
      <title>Disable Empty Passwords</title>
      <affected family="unix">
        <platform>Fedora 19</platform>
      </affected>
      <description>
        Remote connections from accounts with empty passwords should be
        disabled (and dependencies are met)
      </description>
    </metadata>
    <!-- Test to succeed only if some of the following is met, fail otherwise -->
    <criteria comment="sshd disabled or conditions are met" operator="OR">
      <!-- * case: sshd service is disabled -->
      <extend_definition comment="sshd service is disabled"
       definition_ref="service_sshd_disabled" />
      <!-- * case: default sshd config (defaults to empty passwords SSH login disabled -->
      <criterion comment="default sshd config" test_ref="test_sshd_default_config" />
      <!-- * case: 'PermitEmptyPasswords no' not preceded by 'PermitEmptyPasswords yes' -->
      <criterion comment="SSH login via empty passwords forbidden in sshd config"
       test_ref="test_sshd_permit_empty_passwords_not_enabled_before_disabled" />
    </criteria>
  </definition>

  <!-- Check if system's /etc/ssh/sshd_config is in default form (safe case) -->
  <ind:textfilecontent54_test check="all" check_existence="none_exist"
   comment="check default sshd config" id="test_sshd_default_config"
   version="1" >
    <ind:object object_ref="obj_sshd_default_config" />
  </ind:textfilecontent54_test>

  <!-- For default sshd config ensure there aren't PermitEmptyPasswords [yes/no] rows -->
  <ind:textfilecontent54_object id="obj_sshd_default_config" version="1">
    <ind:filepath>/etc/ssh/sshd_config</ind:filepath>
    <!-- Case-insensitively search sshd config in multiline mode for uncommented
         occurrence of either 'PermitEmptyPasswords yes' or
         'PermitEmptyPasswords no' -->
    <ind:pattern operation="pattern match">^(?i)\s*PermitEmptyPasswords\s+(yes|no)\s*$</ind:pattern>
    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
  </ind:textfilecontent54_object>

  <!-- If system's /etc/ssh/sshd_config got modified, ensure empty password SSH
       logins weren't enabled before there's option disabling it in the config -->
  <ind:textfilecontent54_test check="all" check_existence="at_least_one_exists"
   comment="SSH login via empty passwords forbidden in sshd config"
   id="test_sshd_permit_empty_passwords_not_enabled_before_disabled"
   version="1" >
    <ind:object object_ref="obj_sshd_permit_empty_passwords_not_enabled_before_disabled" />
  </ind:textfilecontent54_test>

  <!-- For modified sshd config check there aren't 'PermitEmptyPasswords yes' row(s)
       before first 'PermitEmptyPassword no' row -->
  <ind:textfilecontent54_object
   id="obj_sshd_permit_empty_passwords_not_enabled_before_disabled"
   version="1">
    <!-- Read whole /etc/ssh/sshd_config at one (as single line) -->
    <ind:behaviors singleline="true" />
    <ind:filepath>/etc/ssh/sshd_config</ind:filepath>
    <!-- Case-insensitively search sshd config in singleline mode for uncommented
         occurrence of 'PermitEmptyPasswords no', which is not prefixed / preceded by
         'PermitEmptyPasswords yes' [*] -->
    <ind:pattern operation="pattern match">^(?i)(?:(?!\n\s*PermitEmptyPasswords\s+yes).)*(\n\s*PermitEmptyPasswords\s+no)(.*)$</ind:pattern>
    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
  </ind:textfilecontent54_object>

<!--

[*] sshd config observations:
    - specifies default value where possible, but leave them commented,
    - uncommented options override the default value,
    - multiple occurrences of the same option are possible. In that case
      value of the first (uncommented) one is honoured,
    - option names (but not their values!) are parsed case-insensitively

-->

</def-group>
