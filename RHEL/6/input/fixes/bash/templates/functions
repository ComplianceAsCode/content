# -*-Shell-script-*-
#
# functions     This file contains functions to be used by most or all
#               audit remediation shell scripts in the scap-security-guide's
#               RHEL/6/input/fixes/bash/ directory.
#


# Function to fix audit file system object watch rule for given path:
# * if rule exists, also verifies the -w bits match the requirements
# * if rule doesn't exist yet, appends expected form to audit.rules
#
# Expects three arguments (each of them is required) in the form of:
# * path                        value of -w audit rule's argument
# * required access bits        value of -p audit rule's argument
# * key                         value of -k audit rule's argument
#
# Example call:
#
#       fix_audit_watch_rule "/etc/localtime" "wa" "audit_time_rules"
#
function fix_audit_watch_rule {

# Load function arguments into local variables
local path="$1"
local required_access_bits="$2"
local key="$3"

# Define selected contants
local readonly AUDIT_RULES="/etc/audit/audit.rules"

# Check if audit watch file system object rule for given path already present
if grep -q -P -- "[\s]*-w[\s]+$path" $AUDIT_RULES
then
        # Rule is found => verify yet if existing rule definition contains
        # all of the required access type bits

        # Escape slashes in path for use in sed pattern below
        local esc_path=${path//$'/'/$'\/'}
        # Define BRE whitespace class shortcut
        local sp="[[:space:]]"
        # Extract current permission access types (e.g. -p [r|w|x|a] values) from audit rule
        current_access_bits=$(sed -ne "s/$sp*-w$sp\+$esc_path$sp\+-p$sp\+\([rxwa]\{1,4\}\).*/\1/p" $AUDIT_RULES)
        # Split required access bits string into characters array
        # (to check bit's presence for one bit at a time)
        for access_bit in $(echo $required_access_bits | grep -o .)
        do
                # For each from the required access bits (e.g. 'w', 'a') check
                # if they are already present in current access bits for rule.
                # If not, append that bit at the end
                if ! $(echo $current_access_bits | grep -q "$access_bit")
                then
                        # Concatenate the existing mask with the missing bit
                        current_access_bits="$current_access_bits$access_bit"
                fi
        done
        # Propagate the updated rule's access bits (original + the required
        # ones) back into the /etc/audit/audit.rules file for that rule
        sed -i "s/\($sp*-w$sp\+$esc_path$sp\+-p$sp\+\)\([rxwa]\{1,4\}\)\(.*\)/\1$current_access_bits\3/" $AUDIT_RULES
else
        # Rule isn't present yet. Append it at the end of /etc/audit/audit.rules file
        # with proper key

        echo "-w $path -p $required_access_bits -k $key" >> $AUDIT_RULES
fi
}
