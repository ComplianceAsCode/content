<def-group>
  <definition class="compliance" id="accounts_root_path_dirs_no_write" version="1">
    <metadata>
      <title>Write permissions are disabled for group and other in all
      directories in Root's Path</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 6</platform>
      </affected>
      <description>Check each directory in root's path and make use it does not
      grant write permission to group and other</description>
      <reference source="MED" ref_id="20130925" ref_url="test_attestation" />
    </metadata>
    <criteria comment="Check that write permission to group and other in root's path is denied" negate="true" operator="OR">
      <criterion comment="Check for write permission to group in root's path" test_ref="test_accounts_root_path_dirs_no_write_group" />
      <criterion comment="Check for write permission to other in root's path" test_ref="test_accounts_root_path_dirs_no_write_other" />
    </criteria>
  </definition>
  <ind:environmentvariable58_object id="object_accounts_root_path_dirs_no_write_pathenv" version="1">
    <ind:pid xsi:nil="true" datatype="int" />
    <ind:name>PATH</ind:name>
  </ind:environmentvariable58_object>
  <local_variable comment="Split the PATH on the : delimiter" datatype="string"
  id="var_accounts_root_path_dirs_no_write" version="1">
    <split delimiter=":">
      <object_component item_field="value"
      object_ref="object_accounts_root_path_dirs_no_write_pathenv" />
    </split>
  </local_variable>
  <unix:file_test check="all" check_existence="any_exist"
  comment="Check that write permission to group in root's path is denied"
  id="test_accounts_root_path_dirs_no_write_group" version="1">
    <unix:object object_ref="object_accounts_root_path_dirs_no_write_group" />
  </unix:file_test>
  <unix:file_state comment="Group has write privilege"
  id="state_accounts_root_path_dirs_no_write_group" version="1">
    <unix:gwrite datatype="boolean">true</unix:gwrite>
  </unix:file_state>
  <unix:file_object comment="root's PATH"
  id="object_accounts_root_path_dirs_no_write_group" version="1">
    <unix:path var_ref="var_accounts_root_path_dirs_no_write" var_check="at least one" />
    <unix:filename xsi:nil="true" />
    <filter action="include">state_accounts_root_path_dirs_no_write_group</filter>
  </unix:file_object>
  <unix:file_test check="all" check_existence="any_exist"
  comment="Check that write permission to other in root's path is denied"
  id="test_accounts_root_path_dirs_no_write_other" version="1">
    <unix:object object_ref="object_accounts_root_path_dirs_no_write_other" />
  </unix:file_test>
  <unix:file_state comment="Other has write privilege"
  id="state_accounts_root_path_dirs_no_write_other" version="1">
    <unix:owrite datatype="boolean">true</unix:owrite>
  </unix:file_state>
  <unix:file_object comment="root's PATH"
  id="object_accounts_root_path_dirs_no_write_other" version="1">
    <unix:path var_ref="var_accounts_root_path_dirs_no_write" var_check="at least one" />
    <unix:filename xsi:nil="true" />
    <filter action="include">state_accounts_root_path_dirs_no_write_other</filter>
  </unix:file_object>
</def-group>
