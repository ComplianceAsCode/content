<def-group>
  <definition class="compliance" id="mount_option_noexec_removable_partitions" version="2">
    <metadata>
      <title>Add noexec Option to Removable Media Partitions</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 6</platform>
      </affected>
      <description>The noexec mount option prevents the direct execution of
      binaries on the mounted filesystem. Users should not be allowed to
      execute binaries that exist on partitions mounted from removable media
      (such as a USB key). The noexec option prevents code from being executed
      directly from the media itself, and may therefore provide a line of
      defense against certain types of worms or malicious code.</description>
      <reference source="JL" ref_id="RHEL6_20150305" ref_url="test_attestation"/>
    </metadata>
    <criteria operator="OR">
      <!-- First check if specified removable partition truly exists on the system. If not, don't check /etc/fstab & runtime configuration
           since there's no device to check against -->
      <criterion test_ref="test_removable_partition_doesnt_exist" comment="Check if removable partition really exists on the system" />
      <!-- Removable device exists. Check if it's CD/DVD drive. If so, verify that at least one from all of the possible its alternative
           names in /etc/fstab & runtime configuration are configured with 'noexec' option -->
      <criteria operator="AND">
        <criterion test_ref="test_var_removable_partition_is_cd_dvd_drive" comment="Check if removable partition value represents CD/DVD drive" />
        <criterion test_ref="test_noexec_etc_fstab_cd_dvd_drive" comment="Check if at least one from CD/DVD drive alternative names is using 'noexec' mount option in /etc/fstab" />
        <criterion test_ref="test_noexec_runtime_cd_dvd_drive" comment="Check if at least one from CD/DVD drive alternative names is using 'noexec' mount option in runtime configuration" />
      </criteria>
      <!-- Removable device exists & isn't CD/DVD drive. Check the particular devices is configured with 'noexec' mount option in both
           /etc/fstab & runtime configuration -->
      <criteria operator="AND">
        <criterion test_ref="test_noexec_etc_fstab_not_cd_dvd_drive" comment="Check if removable partition is using 'noexec' mount option in /etc/fstab" />
        <criterion test_ref="test_noexec_runtime_not_cd_dvd_drive" comment="Check if removable partition is using 'noexec' mount option in runtime configuration" />
      </criteria>
    </criteria>
  </definition>

  <!-- The following OVAL items:

       * test_removable_partition_doesnt_exist,
       * object_removable_partition_doesnt_exist,
       * test_var_removable_partition_is_cd_dvd_drive,
       * object_var_removable_partition_is_cd_dvd_drive,
       * state_var_removable_partition_is_cd_dvd_drive,
       * variable_cd_dvd_drive_alternative_names,
       * variable_cd_dvd_drive_regex_pattern,
       * variable_not_cd_dvd_drive_regex_pattern, and
       * var_removable_partition

       are defined in RHEL-6's 'mount_option_nodev_removable_partitions.xml' OVAL check. We will reuse them
       and define only those OVAL items below that (slightly) differ from 'nodev' case -->

  <!-- If specified removable partition represents CD / DVD drive, use all alternative
       names to check /etc/fstab & runtime settings -->
  <ind:textfilecontent54_test id="test_noexec_etc_fstab_cd_dvd_drive" check="all" comment="'noexec' mount option used for at least one CD / DVD drive alternative names in /etc/fstab" version="1">
    <ind:object object_ref="object_noexec_etc_fstab_cd_dvd_drive" />
    <ind:state state_ref="state_noexec_etc_fstab_cd_dvd_drive" />
  </ind:textfilecontent54_test>

  <ind:textfilecontent54_object id="object_noexec_etc_fstab_cd_dvd_drive" version="1">
    <ind:filepath>/etc/fstab</ind:filepath>
    <ind:pattern operation="pattern match" datatype="string" var_ref="variable_cd_dvd_drive_regex_pattern" var_check="at least one" />
    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_state id="state_noexec_etc_fstab_cd_dvd_drive" version="1">
    <ind:subexpression operation="pattern match" datatype="string">^.*,?noexec,?.*$</ind:subexpression>
  </ind:textfilecontent54_state>

  <linux:partition_test id="test_noexec_runtime_cd_dvd_drive" check="all" comment="'noexec' mount option used for at least one CD / DVD drive alternative names in runtime configuration" version="1">
    <linux:object object_ref="object_noexec_runtime_cd_dvd_drive" />
  </linux:partition_test>

  <linux:partition_object id="object_noexec_runtime_cd_dvd_drive" version="1">
    <!-- CD / DVD drive can be mounted under any mount_point. We don't know ahead its exact name.
         => Capture all & filter out only the relevant ones via the corresponding state -->
    <linux:mount_point operation="pattern match">^.*$</linux:mount_point>
    <!-- Therefore from all the captured mount points select only those having
         device set to some CD / DVD drive alternative name and simultaneously
         having 'noexec' mount option used -->
    <filter action="include">state_noexec_runtime_cd_dvd_drive</filter>
  </linux:partition_object>

  <linux:partition_state id="state_noexec_runtime_cd_dvd_drive" version="1">
    <linux:device datatype="string" operation="equals" var_ref="variable_cd_dvd_drive_alternative_names" var_check="at least one" />
    <linux:mount_options datatype="string" entity_check="at least one" operation="equals">noexec</linux:mount_options>
  </linux:partition_state>

  <!-- Specified removable partition exists & doesn't represent a CD/DVD drive.
       Check if configured with 'noexec' mount option in both /etc/fstab & runtime configuration -->
  <ind:textfilecontent54_test id="test_noexec_etc_fstab_not_cd_dvd_drive" check="at least one" check_existence="all_exist" comment="Check if removable partition is configured with 'noexec' mount option in /etc/fstab" version="1">
    <ind:object object_ref="object_noexec_etc_fstab_not_cd_dvd_drive" />
    <ind:state state_ref="state_noexec_etc_fstab_not_cd_dvd_drive" />
  </ind:textfilecontent54_test>

  <ind:textfilecontent54_object id="object_noexec_etc_fstab_not_cd_dvd_drive" version="1">
    <ind:filepath>/etc/fstab</ind:filepath>
    <ind:pattern operation="pattern match" datatype="string" var_ref="variable_not_cd_dvd_drive_regex_pattern" var_check="at least one" />
    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_state id="state_noexec_etc_fstab_not_cd_dvd_drive" version="1">
    <ind:subexpression operation="pattern match" datatype="string">^.*,?noexec,?.*</ind:subexpression>
  </ind:textfilecontent54_state>

  <linux:partition_test id="test_noexec_runtime_not_cd_dvd_drive" check="all" check_existence="all_exist" comment="'noexec' mount option used for removable partition in runtime configuration" version="1">
    <linux:object object_ref="object_noexec_runtime_not_cd_dvd_drive" />
  </linux:partition_test>

  <linux:partition_object id="object_noexec_runtime_not_cd_dvd_drive" version="1">
    <!-- Removable partition can be mounted under any mount point. We don't know it's
         exact name ahead => Capture all & filter out only those relevant later via state -->
    <linux:mount_point operation="pattern match">^.*$</linux:mount_point>
    <!-- From all the captured mount points select only those having device equal
         to 'var_removable_partition' variable value and simultaneously having
         'noexec' mount option set -->
    <filter action="include">state_noexec_runtime_not_cd_dvd_drive</filter>
  </linux:partition_object>

  <linux:partition_state id="state_noexec_runtime_not_cd_dvd_drive" version="1">
    <linux:device datatype="string" operation="equals" var_ref="var_removable_partition" var_check="at least one" />
    <linux:mount_options datatype="string" entity_check="at least one" operation="equals">noexec</linux:mount_options>
  </linux:partition_state>

</def-group>
