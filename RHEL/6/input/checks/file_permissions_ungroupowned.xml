<def-group>
  <definition class="compliance" id="file_permissions_ungroupowned"
  version="1">
    <metadata>
      <title>Find files unowned by a group</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 6</platform>
      </affected>
      <description>All files should be owned by a group</description>
    </metadata>
    <criteria>
      <criterion comment="Check all files and make sure they are owned by a group"
      negate="true" test_ref="test_file_permissions_ungroupowned" />
    </criteria>
  </definition>
  <unix:file_test xmlns:unix="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix"
  check="all" comment="files with no group owner"
  id="test_file_permissions_ungroupowned" version="1">
    <notes>
      <note>This will enumerate all files on local partitions</note>
    </notes>
    <unix:object object_ref="object_file_permissions_ungroupowned" />
    <unix:state state_ref="state_file_permissions_ungroupowned" />
  </unix:file_test>
  <unix:file_state comment="Executables with suid set"
  id="state_file_permissions_ungroupowned" version="1">
    <unix:group_id datatype="int">0</unix:group_id>
  </unix:file_state>

  <unix:file_object comment="all local files" id="object_file_permissions_ungroupowned" version="1">
    <!-- We can't traverse symlinks here since e.g. /sys file system might contain symlink loops
         resulting into excessive memory use by the scanner process & possible subsequent OOM killer
         termination of it. See e.g.: https://www.redhat.com/archives/open-scap-list/2014-May/msg00005.html
         Therefore traverse only directories -->
    <unix:behaviors recurse="directories" recurse_direction="down" recurse_file_system="local" />
    <unix:path>/</unix:path>
    <unix:filename operation="pattern match">.*</unix:filename>
  </unix:file_object>
</def-group>
