<Group id="architecture">
<title>Architecture</title>
<description>
The rules in this group are used to manage JBoss servers in a secure manner.
These rules are related to deploying a secure architecture.
</description>

<Rule id="jboss_eap_dedicated_platform" severity="medium">
<title>JBoss EAP Is Installed On A Dedicated Platform</title>
<description>
Production JBoss servers in production environments should be hosted on
dedicated operating systems and not sharing a host operating system with other
service applications.
</description>
<ocil clause="it is not">
</ocil>
<rationale>
Co-locating JBoss EAP with other critical infrastructure components in an
organization can have multiple negative impacts on an organization's security
posture. Applications sharing host operating systems cumulatively increase the
surface area of attack for the other (including indirectly), increase the
likelihood of resource contention, and increase the severity of any problems
that do occur on the platform at a business process level.
</rationale>
<fixtext><xhtml:p>Installations of JBoss should reside on a dedicated operating system. If not, ensure the configuration, rationale, and risk assessment is well documented. </xhtml:p></fixtext>
<ident cce="" />
<!--oval id="jboss_eap_dedicated_platform" /-->
<ref nist="CM-6" disa="DCCS-1,DCCS-2,DCCT-1,ECSC-1,DCSS-1" cis="" />
</Rule>

<Rule id="jboss_eap_single_instance" severity="medium">
<title>Ensure JBoss Runs A Single Instance</title>
<description>
Multiple instances of JBoss deployed onto a single server should be avoided
whenever possible to reduce environmental complexity and administrative burdens.
However, occasionally circumstances require that multiple JBoss instances are
deployed to the same server. In this scenario, the configurations and
justifications should be documented along with the rest of the system's
documentation.
</description>
<ocil clause="more than a single instance is running">
</ocil>
<rationale>Multiple JBoss instances on a single server may occasionally become
necessary due to resource or design constraints. However, this practice
increases the complexity and administrative burden for the application servers
- potentially leading to unforeseen problems and increasing chance of
misconfigurations.</rationale>
<fixtext><xhtml:p>Limit JBoss Enterprise Applications Platform instances to one per server if possible. If not, ensure the configuration, rationale, and risk assessment is well documented. </xhtml:p></fixtext>
<ident cce="" />
<!--oval id="jboss_eap_single_instance" /-->
<ref nist="CM-6" disa="DCCS-1,DCCS-2,DCCT-1,ECSC-1,DCSS-1" cis="" />
</Rule>

<Rule id="jboss_eap_unique_ip" severity="medium">
<title>Ensure A Unique IP Address Per JBoss Instance</title>
<description>
If multiple JBoss instances are installed, the servers should be set to bind to
different IP addresses on the server rather than changing the default port
configuration.
</description>
<ocil clause="each JBoss instance does not have a unique IP address">
</ocil>
<rationale>
Binding to different IP addresses eases administrative and maintenance burdens
by reducing the number of variables between instances. In turn, this increases
reliability and reduces the chances for configuration errors.
</rationale>
<fixtext><xhtml:p>If multiple JBoss Enterprise Application Platforms are deployed to a single server, the binding IP address can be specified at server startup using the -b argument to specify the binding IP. Example:</xhtml:p>
<xhtml:pre><xhtml:code>run.sh -c public -b 10.10.10.75</xhtml:code></xhtml:pre> </fixtext>
<ident cce="" />
<!--oval id="jboss_eap_unique_ip" /-->
<ref nist="CM-6" disa="DCCS-1,DCCS-2,DCCT-1,ECSC-1,DCSS-1" cis="" />
</Rule>

<Rule id="jboss_eap_enable_packet_filtering" severity="high">
<title>Packet filtering should be emplaced around JBoss Enterprise Application Platform</title>
<description>
JBoss Enterprise Application Platform must operate in a network segment that is
logically separated from any other network segment using a packet filtering
mechanism. This packet filter must only allow incoming communication that is
TCP with destination ports of 8080 or 8443. This packet filter can be resident
on the host operating system or a completely separate system entirely. When
JBoss Enterprise Application Platforms are clustered, all outgoing
communication from the JBoss Enterprise Application Platform instance must be
allowed.
</description>
<ocil clause="packet filtering is not enabled or configured correctly">
</ocil>
<rationale>
Packet filtering is a basic security technique for securing TCP/IP and UDP/IP
communications.
</rationale>
<fixtext><xhtml:p>Install and/or configure a TCP/IP and UDP/IP packet filtering device to logically separate the JBoss Enterprise Application Server from other networks. </xhtml:p></fixtext>
<ident cce="" />
<!--oval id="jboss_eap_enable_packet_filtering" /-->
<ref nist="SC-7" disa="DCSS-2,EBBD-1,EBBD-2,EBBD-3,EBPW-1,ECID-1" cis="" />
</Rule>

<Rule id="jboss_eap_disable_http_connections" severity="medium">
<title>Disable Insecure HTTP Connections</title>
<description>
Sensitive information should not be transferred over insecure means. This
includes plaintext credential information, application information deemed
sensitive, or other information that may be valuable to a malicious entity.
The &lt;auth-method&gt; child element specifies the authentication mechanism for
the web application. Using the BASIC authentication method causes the exchange
of credentials in clear-text.
</description>
<ocil clause="HTTPS is not enabled and/or regular HTTP connections are not disabled">
</ocil>
<rationale>
Sensitive information being transmitted without strong encryption creates
possible exposure for the deployed application and users connecting to it.
Plain text transmission of authentication credentials over insecure channels
(such as HTTP) exposes credential information to any entity capable of
intercepting packets from the connection.
</rationale>

<fixtext><xhtml:p>Applications passing sensitive data should use a secure channel such as SSL or TLS. There are several ways to secure traffic with SSL, the method below uses the underlying Apache Tomcat technology to handle the connection.</xhtml:p>
<xhtml:p>To setup SSL or TLS, proceed as follows:</xhtml:p>
<xhtml:ul><xhtml:li>Ensure a valid keystore is being loaded by JSM</xhtml:li>
<xhtml:li>Load the JBoss server's public/private key pair into the keystore</xhtml:li>
<xhtml:li> Add a secure connector to JBOSS_HOME/server/[PROFILE]/deploy/jbossweb.sar/server.xml
<xhtml:pre><xhtml:code>&lt;Service name="jboss.web"&gt;
&lt;Connector protocol="HTTP/1.1" SSLEnabled="true"
port="8443" address="${jboss.bind.address}"
scheme="https" secure="true" clientAuth="false"
keystoreFile="${jboss.server.home.dir}/conf/bp.keystore"
keystorePass="KEYSTORE_PASSWORD" sslProtocol = "TLS" /&gt;
&lt;/Service&gt;</xhtml:code></xhtml:pre></xhtml:li></xhtml:ul>
</fixtext>
<ident cce="" />
<!--oval id="jboss_eap_disable_http_connections" /-->
<ref nist="SC-8" disa="ECTM-1,ECTM-2" cis="" />
</Rule>

</Group>
