<Group id="selinux">
<title>SELinux</title>
<description>SELinux is a feature of the Linux kernel which can be
used to guard against misconfigured or compromised programs.
SELinux enforces the idea that programs should be limited in what
files they can access and what actions they can take.
<br /><br />
The default SELinux policy, as configured on RHEL6, has been
sufficiently developed and debugged that it should be usable on
almost any Red Hat machine with minimal configuration and a small
amount of system administrator training. This policy prevents
system services — including most of the common network-visible
services such as mail servers, ftp servers, and DNS servers — from
accessing files which those services have no valid reason to
access. This action alone prevents a huge amount of possible damage
from network attacks against services, from trojaned software, and
so forth.
<br /><br />
This guide recommends that SELinux be enabled using the
default (targeted) policy on every Red Hat system, unless that
system has requirements which make a stronger policy
appropriate.
</description>

<Group id="enabling_selinux">
<title>Enable SELinux</title>
<description>Edit the file <tt>/etc/selinux/config</tt>. Add or correct the
following lines:
<pre>SELINUX=enforcing
SELINUXTYPE=targeted</pre>
Edit the file <tt>/etc/grub.conf</tt>. Ensure that the following
arguments DO NOT appear on any kernel command line in the file:
<pre>selinux=0
enforcing=0</pre>
The directive <tt>SELINUX=enforcing</tt> enables SELinux at boot time.
If SELinux is suspected of involvement with boot-time problems
(unlikely), it is possible to boot into the warning-only mode
<tt>SELINUX=permissive</tt> for debugging purposes. Make certain to change
the mode back to enforcing after debugging, set the filesystems to
be relabelled for consistency using the command <tt>touch
/.autorelabel</tt>, and reboot.
<br /><br />
However, the RHEL6 default SELinux configuration should be
sufficiently reasonable that most systems will boot without serious
problems. Some applications that require deep or unusual system
privileges, such as virtual machine software, may not be compatible
with SELinux in its default configuration. However, this should be
uncommon, and SELinux's application support continues to improve.
In other cases, SELinux may reveal unusual or insecure program
behavior by design.
<br /><br />
The directive <tt>SELINUXTYPE=targeted</tt> configures SELinux to use
the default targeted policy.
<br /><br />
The SELinux boot mode specified in <tt>/etc/selinux/config</tt> can be
overridden by command-line arguments passed to the kernel. It is
necessary to check <tt>grub.conf</tt> to ensure that this has not been done
and to protect the boot process.
</description>
<ref disa="26,1084,1086,1087,1090"/>

<Value id="var_selinux_state_name" type="string" operator="equals" interactive="0">
<title>SELinux state</title>
<description>enforcing - SELinux security policy is enforced.
<br />permissive - SELinux prints warnings instead of enforcing.
<br />disabled - SELinux is fully disabled.</description>
<value selector="">enforcing</value>
<value selector="enforcing">enforcing</value>
<value selector="permissive">permissive</value>
<value selector="disabled">disabled</value>
</Value>

<Value id="var_selinux_policy_name" type="string" operator="equals" interactive="0">
<title>SELinux policy</title>
<description>Type of policy in use. Possible values are:
<br />targeted - Only targeted network daemons are protected.
<br />strict - Full SELinux protection.
<br />mls - Multiple levels of security</description>
<value selector="">targeted</value>
<value selector="targeted">targeted</value>
<value selector="strict">strict</value>
<value selector="mls">mls</value>
</Value>

<Rule id="enable_selinux_bootloader">
<title>Ensure SELinux Not Disabled in /etc/grub.conf</title>
<description>SELinux can be disabled at boot time by an argument
in <tt>/etc/grub.conf</tt>.
To ensure that SELinux is not disabled at boot time, ensure that <tt>selinux=0</tt> is not
found in the kernel arguments in that file.
</description>
<rationale>
Disabling a major host protection feature such as SELinux at boot time prevents
it from confining system services at boot time, and increases
the chances that it remain off during system operation.
</rationale>
<ident cce="3977-6" />
<oval id="selinux_bootloader_notdisabled" />
<ref nist="AC-3, CM-6" />
</Rule>

<Rule id="set_selinux_state">
<title>Check SELinux State</title>
<description>The SELinux state should be set to <tt>enforcing</tt> during
normal system operation. To ensure the system is configured to
boot into enforcing mode, add or correct the following line in
<tt>/etc/selinux/config</tt>:
<pre>SELINUX=enforcing</pre>
</description>
<rationale>
Setting the SELinux state to enforcing ensures that SELinux is able to confine
potentially compromised processes to the security policy, which is designed to
prevent them from causing damage to the system or further elevating their
privileges.
</rationale>
<ident cce="3999-0" />
<oval id="selinux_mode" value="var_selinux_state_name"/>
<ref nist="CM-6, CM-7" disa="22"/>
</Rule>

<Rule id="set_selinux_policy">
<title>Check SELinux Policy</title>
<description>The SELinux <tt>targeted</tt> policy is appropriate for
general-purpose desktops and servers, as well as systems in many other roles.
To configure the system to use this policy,
add or correct the following line in
<tt>/etc/selinux/config</tt>:
<pre>SELINUXTYPE=targeted</pre>
Other policies, such as <tt>mls</tt>, provide additional security labeling
and greater confinement.
</description>
<rationale>
Setting the SELinux policy to <tt>targeted</tt> or a more specialized policy
ensures that the system will confine processes that are likely to be
targeted for exploitation, such as network services or system services.
</rationale>
<ident cce="3624-4" />
<oval id="selinux_policytype" value="var_selinux_policy_name"/>
<ref nist="CM-6, CM-7" />
</Rule>
</Group>


<Rule id="service_restorecond_enabled">
<title>Enable the SELinux Context Restoration Service (restorecond)</title>
<description>The <tt>restorecond</tt> service utilizes <tt>inotify</tt> to look
for the creation of new files listed in the
<tt>/etc/selinux/restorecond.conf</tt> configuration file.  When a file is
created, <tt>restorecond</tt> ensures that the file receives the proper SELinux
security context.  The <tt>restorecond</tt> service can be enabled with the
following command:
<pre># chkconfig restorecond on</pre>
</description>
<rationale>The <tt>restorecond</tt> service helps ensure that the default SELinux
file context is applied to files.  This allows automatic correction
of file contexts created by some programs.</rationale>
<ident cce="4129-3" />
<oval id="service_restorecond_enabled" />
<ref nist="AC-3, CM-6" />
</Rule>


<!--
<Group id="selinux_daemons">
<title>Disable Unnecessary SELinux Daemons</title>
<description>Several daemons are installed by default as part of
the RHEL6 SELinux support mechanism. These daemons may improve the
system's ability to enforce SELinux policy in a useful fashion, but
may also represent unnecessary code running on the machine,
increasing system risk. If these daemons are not needed on your
system, they should be disabled.</description>
<Group id="group-2.4.3.2">
<title>Disable MCS Translation Service (mcstrans) if
Possible</title>
<description>Unless there is some overriding need for the
convenience of category label translation, disable the MCS
translation service:
<pre># chkconfig mcstrans off</pre>
The mcstransd daemon provides the category label translation
information defined in <tt>/etc/selinux/targeted/setrans.conf</tt> to
client processes which request this information.
<br /><br />
Category labelling is unlikely to be used except in sites
with special requirements. Therefore, it should be disabled in
order to reduce the amount of potentially vulnerable code running
on the system. See Section 2.4.6 for more information about systems
which use category labelling.</description>

<Rule id="disable_mcstransd">
<title>Disable mcstrans Service</title>
<description>The MCS Translation Service (mcstrans) should be disabled.</description>
<ident cce="3668-1" />
<oval id="service_mcstrans_disabled" />
<ref nist="CM-6, CM-7" />
</Rule>
</Group>
</Group>
-->

<Rule id="selinux_confinement_of_daemons">
<title>Ensure No Daemons are Unconfined by SELinux</title>
<description>
Daemons for which the SELinux policy does not contain rules will inherit the
context of the parent process. Because daemons are launched during
startup and descend from the <tt>init</tt> process, they inherit the <tt>initrc_t</tt> context.
<br/>
<br/>
To check for unconfined daemons, run the following command:
<pre># ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'</pre>
It should produce no output in a well-configured system.
</description>
<rationale>
Daemons which run with the <tt>initrc_t</tt> context may cause AVC denials,
or allow privileges that the daemon does not require.
</rationale>
<ref nist="AC-6, CM-6, CM-7" />
</Rule>

<Rule id="selinux_unlabeled_device_files">
<title>Ensure No Device Files are Unlabeled by SELinux</title>
<description>
Device files are used for communication with important
system resources. SELinux contexts should exist for these.
<br /><br />
To check for unlabeled device files, run the following command:
<pre># ls -Z | grep unlabeled_t</pre>
It should produce no output in a well-configured system.
</description>
<rationale>
If a device file is not labeled, then misconfiguration is likely.
</rationale>

<ident cce="14991-4" />
<oval id="selinux_all_devicefiles_labeled" />
<ref nist="CM-6, CM-7" />
</Rule>
</Group>

