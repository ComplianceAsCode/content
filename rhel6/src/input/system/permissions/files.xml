<Group id="files">
<title>Verify Permissions on Important Files and
Directories</title>
<description>Permissions for many files on a system must be set
restrictively to ensure sensitive information is properly protected.
This section discusses important
permission restrictions which can be verified
to ensure that no harmful discrepancies have
arisen.</description>

<Group id="permissions_important_account_files">
<title>Verify Permissions on <tt>passwd</tt>, <tt>shadow</tt>,
<tt>group</tt> and <tt>gshadow</tt> Files</title>
<description>These are the default permissions for these files.
Many utilities need read access to the <tt>passwd</tt> file in order to
function properly, but read access to the <tt>shadow</tt> file allows
malicious attacks against system passwords, and should never be
enabled.</description>

<Rule id="userowner_shadow_file">
<title>Verify user who owns <tt>shadow</tt> file</title>
<description>The <tt>/etc/shadow</tt> file should be owned by
root.</description>
<rationale>The <tt>/etc/shadow</tt> file contains the list of local
system accounts and stores password hashes. Protection of this file is
critical for system security. Failure to give ownership of this file
to root provides the designated owner with access to sensitive information
which could weaken the system security posture.</rationale>
<ident cce="3918-0" />
<oval id="file_owner_etc_shadow" />
<ref nist="AC-3, CM-6" disa="225"/>
</Rule>

<Rule id="groupowner_shadow_file">
<title>Verify group who owns <tt>shadow</tt> file</title>
<description>The <tt>/etc/shadow</tt> file should be group-owned by
root.</description>
<rationale>The /etc/shadow file stores password hashes. Protection of this file is
critical for system security.</rationale>
<ident cce="3988-3" />
<oval id="file_groupowner_etc_shadow" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="perms_shadow_file">
<title>Verify permissions on <tt>shadow</tt> file</title>
<description>File permissions for <tt>/etc/shadow</tt> should be set
to 0400 or more restrictive.</description>
<rationale>The <tt>/etc/shadow</tt> file contains the list of local
system accounts and stores password hashes. Protection of this file is
critical for system security. Failure to give ownership of this file
to root provides the designated owner with access to sensitive information
which could weaken the system security posture.</rationale>
<ident cce="4130-1" />
<oval id="file_permissions_etc_shadow" />
<ref nist="AC-3, CM-6" disa="225"/>
</Rule>

<Rule id="userowner_group_file">
<title>Verify user who owns <tt>group</tt> file</title>
<description>The <tt>/etc/group</tt> file should be owned by
root.</description>
<rationale>The /etc/group file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
<ident cce="3276-3" />
<oval id="file_owner_etc_group" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="groupowner_group_file">
<title>Verify group who owns <tt>group</tt> file</title>
<description>The <tt>/etc/group</tt> file should be group-owned by
root.</description>
<rationale>The /etc/group file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
<ident cce="3883-6" />
<oval id="file_groupowner_etc_group" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="perms_group_file">
<title>Verify permissions on <tt>group</tt> file</title>
<description>File permissions for <tt>/etc/group</tt> should be set
correctly.</description>
<rationale>The /etc/group file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
<ident cce="3967-7" />
<oval id="file_permissions_etc_group" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="userowner_gshadow_file">
<title>Verify user who owns <tt>gshadow</tt> file</title>
<description>The <tt>/etc/gshadow</tt> file should be group-owned by
root.</description>
<rationale>The /etc/gshadow file contains group password hashes. Protection of this file
is critical for system security.</rationale>
<ident cce="4210-1" />
<oval id="file_owner_etc_gshadow" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="groupowner_gshadow_file">
<title>Verify group who owns <tt>gshadow</tt> file</title>
<description>The <tt>/etc/gshadow</tt> file should be group-owned by
root.</description>
<rationale>The /etc/gshadow file contains group password hashes. Protection of this file
is critical for system security.</rationale>
<ident cce="4064-2" />
<oval id="file_groupowner_etc_gshadow" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="perms_gshadow_file">
<title>Verify permissions on <tt>gshadow</tt> file</title>
<description>File permissions for <tt>/etc/gshadow</tt> should be set
correctly.</description>
<rationale>The /etc/gshadow file contains group password hashes. Protection of this file
is critical for system security.</rationale>
<ident cce="3932-1" />
<oval id="file_owner_etc_shadow" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="userowner_passwd_file">
<title>Verify user who owns <tt>passwd</tt> file</title>
<description>The <tt>/etc/passwd</tt> file should be owned by
root.</description>
<rationale>The /etc/passwd contains information about the users that are configured on
the system. Protection of this file is critical for system security.</rationale>
<ident cce="3958-6" />
<oval id="file_owner_etc_passwd" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="groupowner_passwd_file">
<title>Verify group who owns <tt>passwd</tt> file</title>
<description>The <tt>/etc/passwd</tt> file should be group-owned by
root.</description>
<rationale>The /etc/passwd contains information about the users that are configured on
the system. Protection of this file is critical for system security.</rationale>
<ident cce="3495-9" />
<oval id="file_groupowner_etc_passwd" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="file_permissions_etc_passwd">
<title>Verify permissions on <tt>passwd</tt> file</title>
<description>File permissions for <tt>/etc/passwd</tt> should be set
to 0644 or less permissive.</description>
<rationale>If the passwd file is writable by a group-owner or the world the
risk of passwd file compromise is increased. The passwd file contains the
list of acounts on the system and associated information.</rational>
<ident cce="3566-7" />
<oval id="file_permissions_etc_passwd" />
<ref nist="AC-3, CM-6" disa="225"/>
</Rule>
</Group>

<Rule id="sticky_world_writable_dirs">
<title>Verify that All World-Writable Directories Have Sticky Bits Set</title>
<description>When the so-called 'sticky bit' is set on a directory,
only the owner of a given file may remove that file from the
directory. Without the sticky bit, any user with write access to a
directory may remove any file in the directory. Setting the sticky
bit prevents users from removing each other's files. In cases where
there is no reason for a directory to be world-writable, a better
solution is to remove that permission rather than to set the sticky
bit. However, if a directory is used by a particular application,
consult that application's documentation instead of blindly
changing modes.</description>
<ident cce="3399-3" />
<oval id="dir_perms_world_writable_sticky_bits" />
<ref nist="CM-6"/>
</Rule>

<Rule id="world_writeable_files">
<title>Find Unauthorized World-Writable Files</title>
<description>Data in world-writable files can be modified by any
user on the system. In almost all circumstances, files can be
configured using a combination of user and group permissions to
support whatever legitimate access is needed without the risk
caused by world-writable files.
<br /><br />
It is generally a good idea to remove global (other) write
access to a file when it is discovered. However, check with
documentation for specific applications before making changes.
Also, monitor for recurring world-writable files, as these may be
symptoms of a misconfigured application or user
account.</description>
<ident cce="3795-2" />
<oval id="dir_perms_world_writable_system_owned" />
<ref nist="CM-6"/>
</Rule>

<Rule id="no_unpackaged_sgid_files">
<title>Find Unauthorized SGID System Executables</title>
<description>The sgid bit should not be set for all files.</description>
<rationale>Executable files with the SGID permission allow users to gain permissions commensurate with the
group owner of the file. The presence of these files should be strictly controlled on the system.</rationale>
<ident cce="14970-8" />
<oval id="file_permissions_unauthorized_sgid" />
<ref nist="CM-6"/>
</Rule>

<Rule id="no_unpackaged_suid_files">
<title>Find Unauthorized SUID System Executables</title>
<description>The suid bit should not be set for all files.</description>
<rationale>Executable files with the SUID permission allow users to gain permissions commensurate with the
owner of the file. The presence of these files should be strictly controlled on the system.</rationale>
<ident cce="14340-4" />
<oval id="file_permissions_unauthorized_suid" />
<ref nist="AC-3, CM-6"/>
</Rule>


<Rule id="no_files_unowned_by_user">
<title>Find files unowned by a user</title>
<description>The following command will discover and print any
files on local partitions which do not belong to a valid user and a
valid group. Run it once for each local partition PART:
<pre># find PART -xdev \( -nouser -o -nogroup \) -print</pre>
If this command prints any results, investigate each reported file and
either assign it to an appropriate user and group or remove it.
</description>
<rationale>
Unowned files do not directly imply a security problem, but they are generally
a sign that something is wrong with some system process. They may
be caused by an intruder, by incorrect software installation or
draft software removal, or by failure to remove all files belonging
to a deleted account. The files should be repaired so that they
will not cause problems when accounts are created in the future,
and the cause should be discovered and addressed.
</rationale>
<ident cce="4223-4" />
<oval id="file_permissions_unowned" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="no_files_unowned_by_group">
<title>Find files unowned by a group</title>
<description>The following command will discover and print any
files on local partitions which do not belong to a valid user and a
valid group. Run it once for each local partition PART:
<pre># find PART -xdev \( -nouser -o -nogroup \) -print</pre>
If this command prints any results, investigate each reported file and
either assign it to an appropriate user and group or remove it.
</description>
<rationale>
Unowned files do not directly imply a security problem, but they are generally
a sign that something is wrong with some system process. They may
be caused by an intruder, by incorrect software installation or
draft software removal, or by failure to remove all files belonging
to a deleted account. The files should be repaired so that they
will not cause problems when accounts are created in the future,
and the cause should be discovered and addressed.
</rationale>
<ident cce="3573-3" />
<oval id="file_permissions_ungroupowned" />
<ref nist="AC-3, CM-6"/>
</Rule>

<Rule id="world_writable_files_system_ownership">
<title>Find world writable directories not owned by a
system account</title>
<description>Locate any directories in local partitions which are
world-writable and ensure that they are owned by root or another
system account. The following command will discover and print these
(assuming only system accounts have a uid lower than 500). Run it
once for each local partition PART:
<pre># find PART -xdev -type d -perm -0002 -uid +500 -print</pre>
If this command produces any output, investigate why the
current owner is not root or another system account.
</description>
<rationale>
Allowing a user account to own a world-writeable directory is
undesirable because it allows the owner of that directory to remove
or replace any files that may be placed in the directory by other
users.
</rationale>
<ident cce="14794-2" />
<oval id="dir_perms_world_writable_system_owned" />
<ref nist="AC-3, CM-6"/>
</Rule>
</Group>
